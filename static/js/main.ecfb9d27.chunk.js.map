{"version":3,"sources":["wasm/cvc5.js","interfaces/enum.ts","store/hooks.ts","store/features/file/fileSlice.ts","store/features/proof/auxi.ts","interfaces/undoClasses.ts","store/features/theme/auxi.ts","store/features/proof/reducers.ts","store/features/proof/proofSlice.ts","store/features/theme/themeSlice.ts","store/features/externalCmd/externalCmd.ts","examples/proofs-examples.ts","components/VisualizerStage/Canvas/VisualizerNode.tsx","components/VisualizerNavbar/SVGConverter.tsx","components/VisualizerNavbar/VisualizerNavbar.tsx","components/VisualizerDialog/VisualizerDialog.tsx","components/VisualizerStage/Canvas/VisualizerLine.tsx","components/VisualizerStage/Canvas/VisualizerMenu.tsx","components/VisualizerStage/Canvas/VisualizerCanvas.tsx","components/VisualizerTree/VisualizerTree.tsx","components/VisualizerLetDrawer/let.ts","components/VisualizerLetDrawer/LetRender.tsx","components/VisualizerStage/VisualizerDirectoryStyle/VisualizerDirectoryStyle.tsx","components/VisualizerStage/SelectOverlay.tsx","components/VisualizerStage/VisualizerStage.tsx","components/VisualizerLetDrawer/VisualizerLetDrawer.tsx","components/VisualizerTheoryLemma/VisualizerTheoryLemma.tsx","components/VisualizersDrawer/VisualizersDrawer.tsx","components/VisualizerTutorial/TutorialPopover.tsx","components/VisualizerTutorial/VisualizerTutorial.tsx","components/VisualizerSmtDrawer/VisualizerSmtDrawer.tsx","components/App/App.tsx","store/store.ts","ReactUtils/reportWebVitals.ts","index.tsx"],"names":["Module","_scriptDir","window","location","origin","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","read_","readAsync","readBinary","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","scriptDirectory","document","currentScript","src","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","onload","onerror","responseType","response","out","err","wasmMemory","WebAssembly","abort","EXITSTATUS","ABORT","assert","condition","text","buffer","HEAP8","HEAPU8","HEAP16","HEAP32","HEAPU32","wasmTable","UTF8Decoder","TextDecoder","undefined","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","length","u","charCodeAt","lengthBytesUTF8","len","c","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","e","RuntimeError","wasmBinaryFile","tempDouble","tempI64","isDataURI","filename","startsWith","getBinary","file","ExitStatus","this","name","message","callRuntimeCallbacks","callbacks","shift","wasmTableMirror","ExceptionInfo","excPtr","set_type","type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","set_adjusted_ptr","add_ref","value","release_ref","prev","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","PATH","isAbs","path","charAt","splitPath","exec","slice","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","split","filter","p","join","dirname","result","root","dir","basename","lastSlash","paths","Array","prototype","call","arguments","join2","l","r","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","flush","read","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","prompt","readline","val","default_tty1_ops","mmapAlloc","size","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","Uint8Array","expandFileStorage","newCapacity","prevCapacity","max","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","hasOwnProperty","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","w","a","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","defineProperties","object","get","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","apply","syncfs","populate","completed","doCallback","done","errored","forEach","pseudo","mountRoot","unmount","keys","next","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","arg","readFile","ret","encoding","buf","writeFile","data","actualNumBytes","ArrayBuffer","isView","byteLength","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","constructor","code","stack","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","writeChunks","fn","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","Browser","handledByPreloadPlugin","noRunDep","dep","arrayBuffer","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","doStat","func","abs","floor","getTime","doMsync","addr","varargs","getStr","getStreamFromFD","PIPEFS","BUCKET_BUFFER_SIZE","createPipe","pipe","buckets","refcnt","roffset","rName","nextname","wName","rNode","wNode","readableStream","writableStream","readable_fd","writable_fd","poll","bucket","request","fsync","currentLength","toRead","totalRead","toRemove","currBucket","bucketSize","tmpSlice","dataLen","freeBytesInCurrBuffer","numBuckets","remElements","newBucket","_emscripten_get_now","performance","ENV","getEnvStrings","strings","env","USER","LOGNAME","PWD","HOME","LANG","navigator","languages","_","x","_proc_exit","exitJS","implicit","_exit","__isLeapYear","year","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","_strftime","s","maxsize","format","tm","tm_zone","date","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","toString","leadingNulls","compareByDay","date1","date2","sgn","compare","getFullYear","getMonth","getDate","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","__addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","array","index","sum","__arraySum","jan1","dec31","off","ahead","bytes","writeArrayToMemory","readMode","writeMode","calledRun","asmLibraryArg","fp","sig","funcPtr","getWasmTableEntry","_malloc","b","h","___errno_location","y","op","argp","z","t","fdPtr","res","q","j","k","dest","num","copyWithin","o","requestedSize","v","__environ","environ_buf","bufSize","string","writeAsciiToMemory","penviron_count","penviron_buf_size","g","pbuf","iov","iovcnt","pnum","curr","doReadv","offset_low","offset_high","newOffset","hi","lo","NaN","isNaN","f","doWritev","n","info","receiveInstance","instance","module","cb","exports","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","then","catch","binary","instantiate","reason","instantiateStreaming","createWasm","stackAlloc","callMain","args","entryFunction","argc","argv","argv_ptr","allocateUTF8OnStack","handleException","run","shouldRunNow","runCaller","ready","drawerHelpersKind","renderLetKind","ClusterKind","useAppDispatch","useDispatch","useAppSelector","useSelector","fileSlice","createSlice","initialState","filesCount","reducers","state","action","payload","actions","selectFileName","selectDot","JSON","parse","dot","selectFileCount","removeEscapedCharacters","newS","descendants","proof","nodeId","validChildren","children","isHidden","reduce","acc","childId","sliceNodesCluster","clusterMap","slicedClusters","currentNode","parentsClusters","parents","clusterType","target","clusterID","child","extractTheoryLemmas","clusters","haveCluster","conclusion","TL","map","hiddenNodes","BaseUndo","nodes","MoveUndo","ColorUndo","color","colorMap","UnfoldUndo","positions","colors","FoldUndo","HideUndo","nPiNodes","colorConverter","colorName","undoQueue","Deque","addUndo","undo","clearHiddenNodes","hiddenArray","process","proofJSON","clustersInfos","isJSON","dependencies","NONE","comment","line","search","label","thisType","numbers","SAT","CNF","PP","IN","parseInt","attributes","commentJSON","subProofQty","processDot","letMap","clustersColors","view","clustersMap","fill","cluster","theoryLemmaMap","visualInfo","selected","hiddenNodesArray","piID","hideNodes","toHideNodes","clusteredNodes","hiddenNode","hiddenID","some","_p","pastCluster","stringify","clusterParents","parentCluster","findNodesClusters","nodeID","foldAllDescendants","hashMap","newHidden","isTheFirst","unfoldNodes","pi","hiddens","setVisualInfo","selectByArea","upperL","lowerR","thisNode","selectNodes","unselectNodes","changeStyle","style","applyView","clear","applyColor","nodesLen","thisInfo","moveNode","setSmt","smt","topUndo","oldPiNum","proofSlice","selectProof","piNodeChildren","haveHiddenParent","self","piNodeParents","piNodeDependencies","depMap","piId","depsId","groupPiNodeDependencies","piNodeId","piNode","proofNode","parentId","highHierarchyNodes","every","ac","childID","selectOriginalProof","selectView","selectStyle","selectLetMap","selectTheoryLemmas","selectVisualInfo","selectHiddenNodes","selectNodeClusters","selectSmt","themeSlice","toggle","selectTheme","theme","externalCmd","findData","nodeToFind","findOption","renderData","fileChanged","spinner","selectData","findNode","option","reRender","addRenderCount","blockRender","allowRenderNewFile","blockRenderNewFile","setSpinner","setSelectArea","selectFindData","selectRenderData","selectSpinner","selectSelectData","examples","ex1","ex2","textColorFromBg","bgColor","sixDigitColor","Node","props","nHided","nDescendants","setNodeOnFocus","toggleNodeSelection","updateNodePosition","openDrawer","onDragEnd","createTree","tag","stroke","strokeWidth","align","fontSize","height","padding","width","depText","depSize","infos","useState","idSize","setIdSize","descendantSize","setDescendantSize","useEffect","font","calc","context","createElement","getContext","measureText","getTextWidth","draggable","onDragMove","attrs","onClick","evt","button","shiftKey","menuNode","getElementById","top","clientY","left","clientX","display","addEventListener","points","depLineSize","radius","fontFamily","Arrow","sqrt","sin","cos","axeX","axeY","alpha","atan2","PI","sin1","cos1","p1X","p1Y","p2X","p2Y","x1","y1","x2","y2","ConvertToSVG","MAX_SAFE_INTEGER","biggestX","biggestY","smallestX","smallestY","xmlns","overflow","limits","newX","newY","dominantBaseline","textAnchor","cx","cy","CreateNode","isNotMozz","userAgent","match","isNotMozzila","mapDispatchToProps","connect","ownProps","setDialogIsOpen","setDrawerIsOpen","addErrorToast","setInTutorial","setSmtDrawerIsOpen","inTutorial","fileName","darkTheme","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","removeEventListener","useWindowSize","command","setCommand","lastCommands","setLastCommands","commandId","setCommandId","matchableCmd","setMatchableCmd","matchableCmdIsOpen","setMatchableCmdIsOpen","runExample","dispatch","commandsMap","cmds","cmdArg","matches","matchAll","idList","insideBracket","insideMatches","rangeLim","numS","listStr","word","argMatch","argIsConclusion","regexString","regex","test","allNodesIds","hiddenIds","findIndex","find","commands","useRef","runCommands","exportJSON","downloadJSON","fName","download","href","encodeURIComponent","click","exportPNG","preventDefault","graph","getElementsByClassName","toDataURL","exportSVG","el","svg","renderToStaticMarkup","base64doc","btoa","unescape","ex","isPseudoClick","menus","className","icon","onKeyDown","role","help","tabIndex","criticalWidth","Group","Alignment","LEFT","Heading","Divider","content","placement","modifiers","arrow","enabled","RIGHT","autoFocus","enforceFocus","list","renderMatchableCmd","isOpen","disabled","placeholder","onChange","findMatchableCmd","newId","rightElement","onFocusCapture","blur","autoComplete","marginLeft","stopPropagation","currentTarget","checked","readUploadedFileAsText","inputFile","temporaryFileReader","FileReader","DOMException","readAsText","VisualizerDialog","dialogIsOpen","inputIsFocused","setInputIsFocused","changeFileName","changeFile","useReducer","newFlag","focusFlag","flagCount","setFocusFlag","Classes","DIALOG_BODY","childNodes","focus","DIALOG_FOOTER_ACTIONS","closeDialog","dialogBody","outline","borderRadius","hasSelection","onInputChange","File","fileContents","onFocus","onBlur","succesButton","ext","intent","Intent","SUCCESS","onClose","usePortal","title","DIALOG_FOOTER","Line","Menu","unfold","foldSelectedNodes","changeNodeColor","currentColor","options","setColor","foldSelected","vertical","handleWheel","stage","getStage","oldScale","scaleX","pointerPosition","getPointerPosition","mousePointTo","newScale","deltaY","stageScale","stageX","stageY","Canvas","nodeOnFocus","nodesSelected","setState","showingNodes","LineProps","saveNodePosition","showingEdges","edgeKey","edge","handleKeyDown","ctrlKey","toLowerCase","componentDidUpdate","bind","canvasSize","newShowingNodes","newNodeProps","updateEdgesAndFuncs","prevProps","found","Boolean","onWheel","scaleY","onContextMenu","current_state","proofChanged","visualInfoChanged","nodeFindData","nodeWidth","nodeHeight","dagre","graphlib","Graph","setGraph","rankdir","ranker","setDefaultEdgeLabel","setNode","setEdge","layout","xOffset","yOffset","console","log","copyNodePosition","setTimeout","Component","newVisualInfo","visualInfos","VisualizerTree","positionMap","setNodeInfo","forceUpdate","setNodes","setSelected","forEachNode","backgroundColor","onNodeClick","nodeData","_nodePath","toBeShow","originallySelected","isSelected","onNodeCollapse","isExpanded","onNodeExpand","hasCaret","castProofNodeToTreeNode","ELEVATION_0","Let","letText","letsList","indices","lines","biggerID","externalLets","expandValue","shouldUpdate","keyList","let","letName","indentLevel","expandPartialy","externalRef","letIdx","indentedText","printLines","lastLine","newIdx","shrinkValue","fitsTheWindow","repeat","indent","someDoesntFit","newLines","thisLevel","thisLine","lastSpace","lastUsedSpace","lastOpenParenthesis","biggestSize","newBiggerID","thisSize","groupUp","original","numKey","LetRender","toRender","shouldExpand","shouldRevert","dispatchExpansion","widthRef","resizeMode","setResizeMode","newMap","letMapS","setLetMapS","letsRef","initializeLet","lets","currentLet","indice","newWidth","clientWidth","expandAll","EXPAND","revertLet","REVERT","maxHeight","margin","whiteSpace","thisLet","expandLet","overflowWrap","renderLet","VisualizerDirectoryStyle","proofTree","ruleHelper","translate","nodeInfo","ALL","ruleHelperIsOpen","argsHelperIsOpen","concHelperIsOpen","dispatchHelper","revertAll","dispatchLetExpansion","setMap","renderID","increaseRenderID","_map","offsetHeight","float","borderRight","RULE","ARGS","CONC","dependency","overlayColor","SelectOvelay","isSelecting","setIsSelecting","isDraggingRef","isInverted","setIsInverted","setStart","curPos","setCurPos","handleOutsideMouseUp","handleMouseUp","body","useMemo","opacity","pointerEvents","leftX","leftY","rightX","rightY","gridColumns","difX","gridRows","difY","gridTemplateColumns","gridTemplateRows","onMouseDown","nativeEvent","offsetX","offsetY","onMouseUp","onMouseMoveCapture","xInverted","yInverted","onDragStart","secondaryLabel","parentsId","rootNode","tree","VisualizerStage","disableExternalDrawers","fileID","setProofTree","drawerIsOpen","setTree","canEscapeKeyClose","canOutsideClickClose","hasBackdrop","Position","BOTTOM","DRAWER_BODY","VisualizerLetDrawer","shouldResize","setLetMap","VisualizerTheoryLemma","theoryLemmas","setTheoryLemmas","tl","currentTL","minWidth","VisualizersDrawer","nodeClusters","tabID","setTabID","resizeFlag","setResizeFlag","bt","handleClusterClick","theoryLemma","newTabId","newResizeFlag","selectedTabId","panel","TutorialPopover","setIsOpen","nextTutorial","W","page","setPage","changePage","handleEsc","tW","borderBottomColor","rel","insertAnchors","divsIds","tutorials","VisualizerTutorial","setStage","setPosition","sizeRef","toBeWrapped","getClientRects","newTW","VisualizerSmtDrawer","smtOptions","setSmtOptions","proofSmt","stdoutRef","stderrRef","changeOutRef","updateCounter","errorCounter","forceError","optionsIsOpen","setOptionsIsOpen","textRef","argsType","setArgsType","shouldClusterize","printAsDag","setDefaultOptions","customArgs","setCustomArgs","setErr","defaultArgs","parentElement","newArgs","divColor","helpDiv","maxWidth","boxShadow","textAlign","defaultArgsDiv","shouldClusterizeDiv","printAsDagDiv","updateStdout","updateStderr","postCVC5run","isThereError","replaceAll","cleanStdout","language","onMount","hoverCloseDelay","hoverOpenDelay","borderBottom","borderTop","proofTxt","postCVC5","binaryFileName","App","toaster","setDrawerOpenState","smtDrawerIsOpen","disableAllDrawers","refHandlers","ref","show","DANGER","TOP","store","configureStore","reducer","fileReducer","proofReducer","themeReducer","externalCmdReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ecfb9d27.chunk.js","sourcesContent":["/* eslint-disable */\n/*\nAuthor: Vinícius Braga Freire (vinicius.braga.freire@gmail.com)\nDescription: WebAssembly glue code used to run cvc5 inside React web application.\nCompilation: the glue code and wasm were generated through the cvc5 bash in the \n                https://github.com/ufmg-smite/cvc5-wasm repository. The flags \n                passed to the emscripten compiler were:\n    -s EXPORTED_FUNCTIONS=_main             # Add the main as an exported \n                                            # function, but it's not necessary \n                                            # because the main() is already \n                                            # called when the Module is called.\n    -s EXPORTED_RUNTIME_METHODS=ccall,cwrap # Export JS functions that allow the \n                                            # user to call an exported function.\n    -s INCOMING_MODULE_JS_API=arguments     # Add the argument parsing to the \n                                            # Module.\n    -s INVOKE_RUN=1                         # Whether we will run the main() \n                                            # function.\n    -s EXIT_RUNTIME=0                       # If 0, the runtime is not quit when \n                                            # main() completes (allowing code to\n                                            # run afterwards, for example from \n                                            # the browser main event loop).\n    -s ENVIRONMENT=web                      # Signs that the wasm will run in \n                                            # the browser.\n    -s MODULARIZE                           # Make the glue code as an \n                                            # exportable function, just like a \n                                            # Module.\nObservations: The modifications made in the original glue code are the ones that\n                precedes of comments with //.\n              The changed functions/parts of the code to look at are:\n                - The definition of the wasm file base directory\n                - The definition of the out and err functions\n                - The read of the arguments passed through the Module\n                - The postRun function\n                - The read of the wasm file name passed through the Module\n                - The handleException function\n                - The get_char function\n                - The run function\nLast Update: 05/08/2022\n*/\n\nvar Module = (() => {\n    // The base directory to the wasm file\n    var _scriptDir = window.location.origin + '/proof-visualizer/';\n\n    // This function is responsible for running the web assembly\n    return function (Module) {\n        Module = Module || {};\n\n        var Module = typeof Module != 'undefined' ? Module : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module['ready'] = new Promise(function (resolve, reject) {\n            readyPromiseResolve = resolve;\n            readyPromiseReject = reject;\n        });\n        var moduleOverrides = Object.assign({}, Module);\n        var arguments_ = [];\n        var thisProgram = './this.program';\n        var quit_ = (status, toThrow) => {\n            throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = true;\n        var ENVIRONMENT_IS_WORKER = false;\n        var scriptDirectory = '';\n        function locateFile(path) {\n            return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n            if (ENVIRONMENT_IS_WORKER) {\n                scriptDirectory = self.location.href;\n            } else if (typeof document != 'undefined' && document.currentScript) {\n                scriptDirectory = document.currentScript.src;\n            }\n            if (_scriptDir) {\n                scriptDirectory = _scriptDir;\n            }\n            if (scriptDirectory.indexOf('blob:') !== 0) {\n                scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1);\n            } else {\n                scriptDirectory = '';\n            }\n            {\n                read_ = (url) => {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('GET', url, false);\n                    xhr.send(null);\n                    return xhr.responseText;\n                };\n                if (ENVIRONMENT_IS_WORKER) {\n                    readBinary = (url) => {\n                        var xhr = new XMLHttpRequest();\n                        xhr.open('GET', url, false);\n                        xhr.responseType = 'arraybuffer';\n                        xhr.send(null);\n                        return new Uint8Array(xhr.response);\n                    };\n                }\n                readAsync = (url, onload, onerror) => {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('GET', url, true);\n                    xhr.responseType = 'arraybuffer';\n                    xhr.onload = () => {\n                        if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n                            onload(xhr.response);\n                            return;\n                        }\n                        onerror();\n                    };\n                    xhr.onerror = onerror;\n                    xhr.send(null);\n                };\n            }\n            setWindowTitle = (title) => (document.title = title);\n        } else {\n        }\n        // The out variable is the function that updates the stdout varible\n        // (it's in the react scope) and its argument is a string (the content\n        //  of the current stdout line to be written)\n        var out = Module['out'];\n        // The err is the same thing as out, but related to stderr\n        var err = Module['err'];\n        Object.assign(Module, moduleOverrides);\n        moduleOverrides = null;\n        // Assign the arguments passed through the Module (defined in the react\n        // scope) to a local variable. These arguments are arranged in an array\n        // of strings\n        if (Module['arguments']) arguments_ = Module['arguments'];\n        var wasmBinary;\n        var noExitRuntime = true;\n        if (typeof WebAssembly != 'object') {\n            abort('no native wasm support detected');\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n            if (!condition) {\n                abort(text);\n            }\n        }\n        var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n        function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n            var endIdx = idx + maxBytesToRead;\n            var endPtr = idx;\n            while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n            if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n                return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n            }\n            var str = '';\n            while (idx < endPtr) {\n                var u0 = heapOrArray[idx++];\n                if (!(u0 & 128)) {\n                    str += String.fromCharCode(u0);\n                    continue;\n                }\n                var u1 = heapOrArray[idx++] & 63;\n                if ((u0 & 224) == 192) {\n                    str += String.fromCharCode(((u0 & 31) << 6) | u1);\n                    continue;\n                }\n                var u2 = heapOrArray[idx++] & 63;\n                if ((u0 & 240) == 224) {\n                    u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n                } else {\n                    u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n                }\n                if (u0 < 65536) {\n                    str += String.fromCharCode(u0);\n                } else {\n                    var ch = u0 - 65536;\n                    str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n                }\n            }\n            return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n            return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n            if (!(maxBytesToWrite > 0)) return 0;\n            var startIdx = outIdx;\n            var endIdx = outIdx + maxBytesToWrite - 1;\n            for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) {\n                    var u1 = str.charCodeAt(++i);\n                    u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\n                }\n                if (u <= 127) {\n                    if (outIdx >= endIdx) break;\n                    heap[outIdx++] = u;\n                } else if (u <= 2047) {\n                    if (outIdx + 1 >= endIdx) break;\n                    heap[outIdx++] = 192 | (u >> 6);\n                    heap[outIdx++] = 128 | (u & 63);\n                } else if (u <= 65535) {\n                    if (outIdx + 2 >= endIdx) break;\n                    heap[outIdx++] = 224 | (u >> 12);\n                    heap[outIdx++] = 128 | ((u >> 6) & 63);\n                    heap[outIdx++] = 128 | (u & 63);\n                } else {\n                    if (outIdx + 3 >= endIdx) break;\n                    heap[outIdx++] = 240 | (u >> 18);\n                    heap[outIdx++] = 128 | ((u >> 12) & 63);\n                    heap[outIdx++] = 128 | ((u >> 6) & 63);\n                    heap[outIdx++] = 128 | (u & 63);\n                }\n            }\n            heap[outIdx] = 0;\n            return outIdx - startIdx;\n        }\n        function lengthBytesUTF8(str) {\n            var len = 0;\n            for (var i = 0; i < str.length; ++i) {\n                var c = str.charCodeAt(i);\n                if (c <= 127) {\n                    len++;\n                } else if (c <= 2047) {\n                    len += 2;\n                } else if (c >= 55296 && c <= 57343) {\n                    len += 4;\n                    ++i;\n                } else {\n                    len += 3;\n                }\n            }\n            return len;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n            buffer = buf;\n            Module['HEAP8'] = HEAP8 = new Int8Array(buf);\n            Module['HEAP16'] = HEAP16 = new Int16Array(buf);\n            Module['HEAP32'] = HEAP32 = new Int32Array(buf);\n            Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n            Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\n            Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\n            Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\n            Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\n        }\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        function keepRuntimeAlive() {\n            return noExitRuntime;\n        }\n        function preRun() {\n            callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n            runtimeInitialized = true;\n            if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n            FS.ignorePermissions = false;\n            TTY.init();\n            PIPEFS.root = FS.mount(PIPEFS, {}, null);\n            callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n            callRuntimeCallbacks(__ATMAIN__);\n        }\n        // Function called after the cvc5 execution and no error happend\n        function postRun() {\n            callRuntimeCallbacks(__ATPOSTRUN__);\n            // Handle with the post cvc5 (end of execution) operations in the\n            // react scope. Signs that no error happend.\n            Module['postCVC5'](false);\n        }\n        function addOnInit(cb) {\n            __ATINIT__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n            return id;\n        }\n        function addRunDependency(id) {\n            runDependencies++;\n        }\n        function removeRunDependency(id) {\n            runDependencies--;\n            if (runDependencies == 0) {\n                if (runDependencyWatcher !== null) {\n                    clearInterval(runDependencyWatcher);\n                    runDependencyWatcher = null;\n                }\n                if (dependenciesFulfilled) {\n                    var callback = dependenciesFulfilled;\n                    dependenciesFulfilled = null;\n                    callback();\n                }\n            }\n        }\n        function abort(what) {\n            what = 'Aborted(' + what + ')';\n            err(what);\n            ABORT = true;\n            EXITSTATUS = 1;\n            what += '. Build with -sASSERTIONS for more info.';\n            var e = new WebAssembly.RuntimeError(what);\n            readyPromiseReject(e);\n            throw e;\n        }\n        var dataURIPrefix = 'data:application/octet-stream;base64,';\n        function isDataURI(filename) {\n            return filename.startsWith(dataURIPrefix);\n        }\n        var wasmBinaryFile;\n        // Definition of the binary file name\n        wasmBinaryFile = Module['binaryFileName'];\n        if (!isDataURI(wasmBinaryFile)) {\n            wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary(file) {\n            try {\n                if (file == wasmBinaryFile && wasmBinary) {\n                    return new Uint8Array(wasmBinary);\n                }\n                if (readBinary) {\n                    return readBinary(file);\n                }\n                throw 'both async and sync fetching of the wasm failed';\n            } catch (err) {\n                abort(err);\n            }\n        }\n        function getBinaryPromise() {\n            if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n                if (typeof fetch == 'function') {\n                    return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n                        .then(function (response) {\n                            if (!response['ok']) {\n                                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                            }\n                            return response['arrayBuffer']();\n                        })\n                        .catch(function () {\n                            return getBinary(wasmBinaryFile);\n                        });\n                }\n            }\n            return Promise.resolve().then(function () {\n                return getBinary(wasmBinaryFile);\n            });\n        }\n        function createWasm() {\n            var info = { a: asmLibraryArg };\n            function receiveInstance(instance, module) {\n                var exports = instance.exports;\n                Module['asm'] = exports;\n                wasmMemory = Module['asm']['A'];\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                wasmTable = Module['asm']['C'];\n                addOnInit(Module['asm']['B']);\n                removeRunDependency('wasm-instantiate');\n            }\n            addRunDependency('wasm-instantiate');\n            function receiveInstantiationResult(result) {\n                receiveInstance(result['instance']);\n            }\n            function instantiateArrayBuffer(receiver) {\n                return getBinaryPromise()\n                    .then(function (binary) {\n                        return WebAssembly.instantiate(binary, info);\n                    })\n                    .then(function (instance) {\n                        return instance;\n                    })\n                    .then(receiver, function (reason) {\n                        err('failed to asynchronously prepare wasm: ' + reason);\n                        abort(reason);\n                    });\n            }\n            function instantiateAsync() {\n                if (\n                    !wasmBinary &&\n                    typeof WebAssembly.instantiateStreaming == 'function' &&\n                    !isDataURI(wasmBinaryFile) &&\n                    typeof fetch == 'function'\n                ) {\n                    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\n                        var result = WebAssembly.instantiateStreaming(response, info);\n                        return result.then(receiveInstantiationResult, function (reason) {\n                            err('wasm streaming compile failed: ' + reason);\n                            err('falling back to ArrayBuffer instantiation');\n                            return instantiateArrayBuffer(receiveInstantiationResult);\n                        });\n                    });\n                } else {\n                    return instantiateArrayBuffer(receiveInstantiationResult);\n                }\n            }\n            if (Module['instantiateWasm']) {\n                try {\n                    var exports = Module['instantiateWasm'](info, receiveInstance);\n                    return exports;\n                } catch (e) {\n                    err('Module.instantiateWasm callback failed with error: ' + e);\n                    return false;\n                }\n            }\n            instantiateAsync().catch(readyPromiseReject);\n            return {};\n        }\n        var tempDouble;\n        var tempI64;\n        function ExitStatus(status) {\n            this.name = 'ExitStatus';\n            this.message = 'Program terminated with exit(' + status + ')';\n            this.status = status;\n        }\n        function callRuntimeCallbacks(callbacks) {\n            while (callbacks.length > 0) {\n                callbacks.shift()(Module);\n            }\n        }\n        // Function called after the cvc5 execution when an error happend\n        function handleException(e) {\n            if (e instanceof ExitStatus || e == 'unwind') {\n                return EXITSTATUS;\n            }\n            // Handle with the post cvc5 (end of execution) operations in the\n            // react scope and signs that a error happend.\n            Module['postCVC5'](true);\n            quit_(1, e);\n        }\n        function writeArrayToMemory(array, buffer) {\n            HEAP8.set(array, buffer);\n        }\n        var wasmTableMirror = [];\n        function getWasmTableEntry(funcPtr) {\n            var func = wasmTableMirror[funcPtr];\n            if (!func) {\n                if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n                wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n            }\n            return func;\n        }\n        function ___call_sighandler(fp, sig) {\n            getWasmTableEntry(fp)(sig);\n        }\n        function ___cxa_allocate_exception(size) {\n            return _malloc(size + 24) + 24;\n        }\n        function ExceptionInfo(excPtr) {\n            this.excPtr = excPtr;\n            this.ptr = excPtr - 24;\n            this.set_type = function (type) {\n                HEAPU32[(this.ptr + 4) >> 2] = type;\n            };\n            this.get_type = function () {\n                return HEAPU32[(this.ptr + 4) >> 2];\n            };\n            this.set_destructor = function (destructor) {\n                HEAPU32[(this.ptr + 8) >> 2] = destructor;\n            };\n            this.get_destructor = function () {\n                return HEAPU32[(this.ptr + 8) >> 2];\n            };\n            this.set_refcount = function (refcount) {\n                HEAP32[this.ptr >> 2] = refcount;\n            };\n            this.set_caught = function (caught) {\n                caught = caught ? 1 : 0;\n                HEAP8[(this.ptr + 12) >> 0] = caught;\n            };\n            this.get_caught = function () {\n                return HEAP8[(this.ptr + 12) >> 0] != 0;\n            };\n            this.set_rethrown = function (rethrown) {\n                rethrown = rethrown ? 1 : 0;\n                HEAP8[(this.ptr + 13) >> 0] = rethrown;\n            };\n            this.get_rethrown = function () {\n                return HEAP8[(this.ptr + 13) >> 0] != 0;\n            };\n            this.init = function (type, destructor) {\n                this.set_adjusted_ptr(0);\n                this.set_type(type);\n                this.set_destructor(destructor);\n                this.set_refcount(0);\n                this.set_caught(false);\n                this.set_rethrown(false);\n            };\n            this.add_ref = function () {\n                var value = HEAP32[this.ptr >> 2];\n                HEAP32[this.ptr >> 2] = value + 1;\n            };\n            this.release_ref = function () {\n                var prev = HEAP32[this.ptr >> 2];\n                HEAP32[this.ptr >> 2] = prev - 1;\n                return prev === 1;\n            };\n            this.set_adjusted_ptr = function (adjustedPtr) {\n                HEAPU32[(this.ptr + 16) >> 2] = adjustedPtr;\n            };\n            this.get_adjusted_ptr = function () {\n                return HEAPU32[(this.ptr + 16) >> 2];\n            };\n            this.get_exception_ptr = function () {\n                var isPointer = ___cxa_is_pointer_type(this.get_type());\n                if (isPointer) {\n                    return HEAPU32[this.excPtr >> 2];\n                }\n                var adjusted = this.get_adjusted_ptr();\n                if (adjusted !== 0) return adjusted;\n                return this.excPtr;\n            };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n            var info = new ExceptionInfo(ptr);\n            info.init(type, destructor);\n            exceptionLast = ptr;\n            uncaughtExceptionCount++;\n            throw ptr;\n        }\n        var PATH = {\n            isAbs: (path) => path.charAt(0) === '/',\n            splitPath: (filename) => {\n                var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n                return splitPathRe.exec(filename).slice(1);\n            },\n            normalizeArray: (parts, allowAboveRoot) => {\n                var up = 0;\n                for (var i = parts.length - 1; i >= 0; i--) {\n                    var last = parts[i];\n                    if (last === '.') {\n                        parts.splice(i, 1);\n                    } else if (last === '..') {\n                        parts.splice(i, 1);\n                        up++;\n                    } else if (up) {\n                        parts.splice(i, 1);\n                        up--;\n                    }\n                }\n                if (allowAboveRoot) {\n                    for (; up; up--) {\n                        parts.unshift('..');\n                    }\n                }\n                return parts;\n            },\n            normalize: (path) => {\n                var isAbsolute = PATH.isAbs(path),\n                    trailingSlash = path.substr(-1) === '/';\n                path = PATH.normalizeArray(\n                    path.split('/').filter((p) => !!p),\n                    !isAbsolute,\n                ).join('/');\n                if (!path && !isAbsolute) {\n                    path = '.';\n                }\n                if (path && trailingSlash) {\n                    path += '/';\n                }\n                return (isAbsolute ? '/' : '') + path;\n            },\n            dirname: (path) => {\n                var result = PATH.splitPath(path),\n                    root = result[0],\n                    dir = result[1];\n                if (!root && !dir) {\n                    return '.';\n                }\n                if (dir) {\n                    dir = dir.substr(0, dir.length - 1);\n                }\n                return root + dir;\n            },\n            basename: (path) => {\n                if (path === '/') return '/';\n                path = PATH.normalize(path);\n                path = path.replace(/\\/$/, '');\n                var lastSlash = path.lastIndexOf('/');\n                if (lastSlash === -1) return path;\n                return path.substr(lastSlash + 1);\n            },\n            join: function () {\n                var paths = Array.prototype.slice.call(arguments, 0);\n                return PATH.normalize(paths.join('/'));\n            },\n            join2: (l, r) => {\n                return PATH.normalize(l + '/' + r);\n            },\n        };\n        function getRandomDevice() {\n            if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n                var randomBuffer = new Uint8Array(1);\n                return () => {\n                    crypto.getRandomValues(randomBuffer);\n                    return randomBuffer[0];\n                };\n            } else return () => abort('randomDevice');\n        }\n        var PATH_FS = {\n            resolve: function () {\n                var resolvedPath = '',\n                    resolvedAbsolute = false;\n                for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n                    var path = i >= 0 ? arguments[i] : FS.cwd();\n                    if (typeof path != 'string') {\n                        throw new TypeError('Arguments to path.resolve must be strings');\n                    } else if (!path) {\n                        return '';\n                    }\n                    resolvedPath = path + '/' + resolvedPath;\n                    resolvedAbsolute = PATH.isAbs(path);\n                }\n                resolvedPath = PATH.normalizeArray(\n                    resolvedPath.split('/').filter((p) => !!p),\n                    !resolvedAbsolute,\n                ).join('/');\n                return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n            },\n            relative: (from, to) => {\n                from = PATH_FS.resolve(from).substr(1);\n                to = PATH_FS.resolve(to).substr(1);\n                function trim(arr) {\n                    var start = 0;\n                    for (; start < arr.length; start++) {\n                        if (arr[start] !== '') break;\n                    }\n                    var end = arr.length - 1;\n                    for (; end >= 0; end--) {\n                        if (arr[end] !== '') break;\n                    }\n                    if (start > end) return [];\n                    return arr.slice(start, end - start + 1);\n                }\n                var fromParts = trim(from.split('/'));\n                var toParts = trim(to.split('/'));\n                var length = Math.min(fromParts.length, toParts.length);\n                var samePartsLength = length;\n                for (var i = 0; i < length; i++) {\n                    if (fromParts[i] !== toParts[i]) {\n                        samePartsLength = i;\n                        break;\n                    }\n                }\n                var outputParts = [];\n                for (var i = samePartsLength; i < fromParts.length; i++) {\n                    outputParts.push('..');\n                }\n                outputParts = outputParts.concat(toParts.slice(samePartsLength));\n                return outputParts.join('/');\n            },\n        };\n        function intArrayFromString(stringy, dontAddNull, length) {\n            var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n            var u8array = new Array(len);\n            var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n            if (dontAddNull) u8array.length = numBytesWritten;\n            return u8array;\n        }\n        var TTY = {\n            ttys: [],\n            init: function () {},\n            shutdown: function () {},\n            register: function (dev, ops) {\n                TTY.ttys[dev] = { input: [], output: [], ops: ops };\n                FS.registerDevice(dev, TTY.stream_ops);\n            },\n            stream_ops: {\n                open: function (stream) {\n                    var tty = TTY.ttys[stream.node.rdev];\n                    if (!tty) {\n                        throw new FS.ErrnoError(43);\n                    }\n                    stream.tty = tty;\n                    stream.seekable = false;\n                },\n                close: function (stream) {\n                    stream.tty.ops.flush(stream.tty);\n                },\n                flush: function (stream) {\n                    stream.tty.ops.flush(stream.tty);\n                },\n                read: function (stream, buffer, offset, length, pos) {\n                    if (!stream.tty || !stream.tty.ops.get_char) {\n                        throw new FS.ErrnoError(60);\n                    }\n                    var bytesRead = 0;\n                    for (var i = 0; i < length; i++) {\n                        var result;\n                        try {\n                            result = stream.tty.ops.get_char(stream.tty);\n                        } catch (e) {\n                            throw new FS.ErrnoError(29);\n                        }\n                        if (result === undefined && bytesRead === 0) {\n                            throw new FS.ErrnoError(6);\n                        }\n                        if (result === null || result === undefined) break;\n                        bytesRead++;\n                        buffer[offset + i] = result;\n                    }\n                    if (bytesRead) {\n                        stream.node.timestamp = Date.now();\n                    }\n                    return bytesRead;\n                },\n                write: function (stream, buffer, offset, length, pos) {\n                    if (!stream.tty || !stream.tty.ops.put_char) {\n                        throw new FS.ErrnoError(60);\n                    }\n                    try {\n                        for (var i = 0; i < length; i++) {\n                            stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n                        }\n                    } catch (e) {\n                        throw new FS.ErrnoError(29);\n                    }\n                    if (length) {\n                        stream.node.timestamp = Date.now();\n                    }\n                    return i;\n                },\n            },\n            default_tty_ops: {\n                get_char: function (tty) {\n                    if (!tty.input.length) {\n                        var result = null;\n                        if (typeof window != 'undefined' && typeof window.prompt == 'function') {\n                            // Read the smt text send through the Module and\n                            //  pass it to the web assembly binary program as a\n                            //  'stdin' buffer\n                            result = Module['proofTxt'];\n                            // Call a function that cleans the 'stdout' variable\n                            //  in the react scope only a single time (at the\n                            //  first time it's called).\n                            // It's necessary becasuse cvc5, when running in the\n                            //  browser, identify at first time that there is no\n                            //  content in the 'stdin', then it generates an\n                            //  default cvc5 message about the library. This\n                            //  function only make sure that this 'trash' message\n                            //  is removed from the output.\n                            Module['cleanStdout']();\n                            if (result !== null) {\n                                result += '\\n';\n                            }\n                        } else if (typeof readline == 'function') {\n                            result = readline();\n                            if (result !== null) {\n                                result += '\\n';\n                            }\n                        }\n                        if (!result) {\n                            return null;\n                        }\n                        tty.input = intArrayFromString(result, true);\n                    }\n                    return tty.input.shift();\n                },\n                put_char: function (tty, val) {\n                    if (val === null || val === 10) {\n                        out(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    } else {\n                        if (val != 0) tty.output.push(val);\n                    }\n                },\n                flush: function (tty) {\n                    if (tty.output && tty.output.length > 0) {\n                        out(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    }\n                },\n            },\n            default_tty1_ops: {\n                put_char: function (tty, val) {\n                    if (val === null || val === 10) {\n                        err(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    } else {\n                        if (val != 0) tty.output.push(val);\n                    }\n                },\n                flush: function (tty) {\n                    if (tty.output && tty.output.length > 0) {\n                        err(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    }\n                },\n            },\n        };\n        function mmapAlloc(size) {\n            abort();\n        }\n        var MEMFS = {\n            ops_table: null,\n            mount: function (mount) {\n                return MEMFS.createNode(null, '/', 16384 | 511, 0);\n            },\n            createNode: function (parent, name, mode, dev) {\n                if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (!MEMFS.ops_table) {\n                    MEMFS.ops_table = {\n                        dir: {\n                            node: {\n                                getattr: MEMFS.node_ops.getattr,\n                                setattr: MEMFS.node_ops.setattr,\n                                lookup: MEMFS.node_ops.lookup,\n                                mknod: MEMFS.node_ops.mknod,\n                                rename: MEMFS.node_ops.rename,\n                                unlink: MEMFS.node_ops.unlink,\n                                rmdir: MEMFS.node_ops.rmdir,\n                                readdir: MEMFS.node_ops.readdir,\n                                symlink: MEMFS.node_ops.symlink,\n                            },\n                            stream: { llseek: MEMFS.stream_ops.llseek },\n                        },\n                        file: {\n                            node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },\n                            stream: {\n                                llseek: MEMFS.stream_ops.llseek,\n                                read: MEMFS.stream_ops.read,\n                                write: MEMFS.stream_ops.write,\n                                allocate: MEMFS.stream_ops.allocate,\n                                mmap: MEMFS.stream_ops.mmap,\n                                msync: MEMFS.stream_ops.msync,\n                            },\n                        },\n                        link: {\n                            node: {\n                                getattr: MEMFS.node_ops.getattr,\n                                setattr: MEMFS.node_ops.setattr,\n                                readlink: MEMFS.node_ops.readlink,\n                            },\n                            stream: {},\n                        },\n                        chrdev: {\n                            node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },\n                            stream: FS.chrdev_stream_ops,\n                        },\n                    };\n                }\n                var node = FS.createNode(parent, name, mode, dev);\n                if (FS.isDir(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.dir.node;\n                    node.stream_ops = MEMFS.ops_table.dir.stream;\n                    node.contents = {};\n                } else if (FS.isFile(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.file.node;\n                    node.stream_ops = MEMFS.ops_table.file.stream;\n                    node.usedBytes = 0;\n                    node.contents = null;\n                } else if (FS.isLink(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.link.node;\n                    node.stream_ops = MEMFS.ops_table.link.stream;\n                } else if (FS.isChrdev(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.chrdev.node;\n                    node.stream_ops = MEMFS.ops_table.chrdev.stream;\n                }\n                node.timestamp = Date.now();\n                if (parent) {\n                    parent.contents[name] = node;\n                    parent.timestamp = node.timestamp;\n                }\n                return node;\n            },\n            getFileDataAsTypedArray: function (node) {\n                if (!node.contents) return new Uint8Array(0);\n                if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n                return new Uint8Array(node.contents);\n            },\n            expandFileStorage: function (node, newCapacity) {\n                var prevCapacity = node.contents ? node.contents.length : 0;\n                if (prevCapacity >= newCapacity) return;\n                var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n                newCapacity = Math.max(\n                    newCapacity,\n                    (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>> 0,\n                );\n                if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n                var oldContents = node.contents;\n                node.contents = new Uint8Array(newCapacity);\n                if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n            },\n            resizeFileStorage: function (node, newSize) {\n                if (node.usedBytes == newSize) return;\n                if (newSize == 0) {\n                    node.contents = null;\n                    node.usedBytes = 0;\n                } else {\n                    var oldContents = node.contents;\n                    node.contents = new Uint8Array(newSize);\n                    if (oldContents) {\n                        node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n                    }\n                    node.usedBytes = newSize;\n                }\n            },\n            node_ops: {\n                getattr: function (node) {\n                    var attr = {};\n                    attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n                    attr.ino = node.id;\n                    attr.mode = node.mode;\n                    attr.nlink = 1;\n                    attr.uid = 0;\n                    attr.gid = 0;\n                    attr.rdev = node.rdev;\n                    if (FS.isDir(node.mode)) {\n                        attr.size = 4096;\n                    } else if (FS.isFile(node.mode)) {\n                        attr.size = node.usedBytes;\n                    } else if (FS.isLink(node.mode)) {\n                        attr.size = node.link.length;\n                    } else {\n                        attr.size = 0;\n                    }\n                    attr.atime = new Date(node.timestamp);\n                    attr.mtime = new Date(node.timestamp);\n                    attr.ctime = new Date(node.timestamp);\n                    attr.blksize = 4096;\n                    attr.blocks = Math.ceil(attr.size / attr.blksize);\n                    return attr;\n                },\n                setattr: function (node, attr) {\n                    if (attr.mode !== undefined) {\n                        node.mode = attr.mode;\n                    }\n                    if (attr.timestamp !== undefined) {\n                        node.timestamp = attr.timestamp;\n                    }\n                    if (attr.size !== undefined) {\n                        MEMFS.resizeFileStorage(node, attr.size);\n                    }\n                },\n                lookup: function (parent, name) {\n                    throw FS.genericErrors[44];\n                },\n                mknod: function (parent, name, mode, dev) {\n                    return MEMFS.createNode(parent, name, mode, dev);\n                },\n                rename: function (old_node, new_dir, new_name) {\n                    if (FS.isDir(old_node.mode)) {\n                        var new_node;\n                        try {\n                            new_node = FS.lookupNode(new_dir, new_name);\n                        } catch (e) {}\n                        if (new_node) {\n                            for (var i in new_node.contents) {\n                                throw new FS.ErrnoError(55);\n                            }\n                        }\n                    }\n                    delete old_node.parent.contents[old_node.name];\n                    old_node.parent.timestamp = Date.now();\n                    old_node.name = new_name;\n                    new_dir.contents[new_name] = old_node;\n                    new_dir.timestamp = old_node.parent.timestamp;\n                    old_node.parent = new_dir;\n                },\n                unlink: function (parent, name) {\n                    delete parent.contents[name];\n                    parent.timestamp = Date.now();\n                },\n                rmdir: function (parent, name) {\n                    var node = FS.lookupNode(parent, name);\n                    for (var i in node.contents) {\n                        throw new FS.ErrnoError(55);\n                    }\n                    delete parent.contents[name];\n                    parent.timestamp = Date.now();\n                },\n                readdir: function (node) {\n                    var entries = ['.', '..'];\n                    for (var key in node.contents) {\n                        if (!node.contents.hasOwnProperty(key)) {\n                            continue;\n                        }\n                        entries.push(key);\n                    }\n                    return entries;\n                },\n                symlink: function (parent, newname, oldpath) {\n                    var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n                    node.link = oldpath;\n                    return node;\n                },\n                readlink: function (node) {\n                    if (!FS.isLink(node.mode)) {\n                        throw new FS.ErrnoError(28);\n                    }\n                    return node.link;\n                },\n            },\n            stream_ops: {\n                read: function (stream, buffer, offset, length, position) {\n                    var contents = stream.node.contents;\n                    if (position >= stream.node.usedBytes) return 0;\n                    var size = Math.min(stream.node.usedBytes - position, length);\n                    if (size > 8 && contents.subarray) {\n                        buffer.set(contents.subarray(position, position + size), offset);\n                    } else {\n                        for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n                    }\n                    return size;\n                },\n                write: function (stream, buffer, offset, length, position, canOwn) {\n                    if (!length) return 0;\n                    var node = stream.node;\n                    node.timestamp = Date.now();\n                    if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                        if (canOwn) {\n                            node.contents = buffer.subarray(offset, offset + length);\n                            node.usedBytes = length;\n                            return length;\n                        } else if (node.usedBytes === 0 && position === 0) {\n                            node.contents = buffer.slice(offset, offset + length);\n                            node.usedBytes = length;\n                            return length;\n                        } else if (position + length <= node.usedBytes) {\n                            node.contents.set(buffer.subarray(offset, offset + length), position);\n                            return length;\n                        }\n                    }\n                    MEMFS.expandFileStorage(node, position + length);\n                    if (node.contents.subarray && buffer.subarray) {\n                        node.contents.set(buffer.subarray(offset, offset + length), position);\n                    } else {\n                        for (var i = 0; i < length; i++) {\n                            node.contents[position + i] = buffer[offset + i];\n                        }\n                    }\n                    node.usedBytes = Math.max(node.usedBytes, position + length);\n                    return length;\n                },\n                llseek: function (stream, offset, whence) {\n                    var position = offset;\n                    if (whence === 1) {\n                        position += stream.position;\n                    } else if (whence === 2) {\n                        if (FS.isFile(stream.node.mode)) {\n                            position += stream.node.usedBytes;\n                        }\n                    }\n                    if (position < 0) {\n                        throw new FS.ErrnoError(28);\n                    }\n                    return position;\n                },\n                allocate: function (stream, offset, length) {\n                    MEMFS.expandFileStorage(stream.node, offset + length);\n                    stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n                },\n                mmap: function (stream, length, position, prot, flags) {\n                    if (!FS.isFile(stream.node.mode)) {\n                        throw new FS.ErrnoError(43);\n                    }\n                    var ptr;\n                    var allocated;\n                    var contents = stream.node.contents;\n                    if (!(flags & 2) && contents.buffer === buffer) {\n                        allocated = false;\n                        ptr = contents.byteOffset;\n                    } else {\n                        if (position > 0 || position + length < contents.length) {\n                            if (contents.subarray) {\n                                contents = contents.subarray(position, position + length);\n                            } else {\n                                contents = Array.prototype.slice.call(contents, position, position + length);\n                            }\n                        }\n                        allocated = true;\n                        ptr = mmapAlloc(length);\n                        if (!ptr) {\n                            throw new FS.ErrnoError(48);\n                        }\n                        HEAP8.set(contents, ptr);\n                    }\n                    return { ptr: ptr, allocated: allocated };\n                },\n                msync: function (stream, buffer, offset, length, mmapFlags) {\n                    if (!FS.isFile(stream.node.mode)) {\n                        throw new FS.ErrnoError(43);\n                    }\n                    if (mmapFlags & 2) {\n                        return 0;\n                    }\n                    var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n                    return 0;\n                },\n            },\n        };\n        function asyncLoad(url, onload, onerror, noRunDep) {\n            var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n            readAsync(\n                url,\n                (arrayBuffer) => {\n                    assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n                    onload(new Uint8Array(arrayBuffer));\n                    if (dep) removeRunDependency(dep);\n                },\n                (event) => {\n                    if (onerror) {\n                        onerror();\n                    } else {\n                        throw 'Loading data file \"' + url + '\" failed.';\n                    }\n                },\n            );\n            if (dep) addRunDependency(dep);\n        }\n        var FS = {\n            root: null,\n            mounts: [],\n            devices: {},\n            streams: [],\n            nextInode: 1,\n            nameTable: null,\n            currentPath: '/',\n            initialized: false,\n            ignorePermissions: true,\n            ErrnoError: null,\n            genericErrors: {},\n            filesystems: null,\n            syncFSRequests: 0,\n            lookupPath: (path, opts = {}) => {\n                path = PATH_FS.resolve(FS.cwd(), path);\n                if (!path) return { path: '', node: null };\n                var defaults = { follow_mount: true, recurse_count: 0 };\n                opts = Object.assign(defaults, opts);\n                if (opts.recurse_count > 8) {\n                    throw new FS.ErrnoError(32);\n                }\n                var parts = PATH.normalizeArray(\n                    path.split('/').filter((p) => !!p),\n                    false,\n                );\n                var current = FS.root;\n                var current_path = '/';\n                for (var i = 0; i < parts.length; i++) {\n                    var islast = i === parts.length - 1;\n                    if (islast && opts.parent) {\n                        break;\n                    }\n                    current = FS.lookupNode(current, parts[i]);\n                    current_path = PATH.join2(current_path, parts[i]);\n                    if (FS.isMountpoint(current)) {\n                        if (!islast || (islast && opts.follow_mount)) {\n                            current = current.mounted.root;\n                        }\n                    }\n                    if (!islast || opts.follow) {\n                        var count = 0;\n                        while (FS.isLink(current.mode)) {\n                            var link = FS.readlink(current_path);\n                            current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                            var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\n                            current = lookup.node;\n                            if (count++ > 40) {\n                                throw new FS.ErrnoError(32);\n                            }\n                        }\n                    }\n                }\n                return { path: current_path, node: current };\n            },\n            getPath: (node) => {\n                var path;\n                while (true) {\n                    if (FS.isRoot(node)) {\n                        var mount = node.mount.mountpoint;\n                        if (!path) return mount;\n                        return mount[mount.length - 1] !== '/' ? mount + '/' + path : mount + path;\n                    }\n                    path = path ? node.name + '/' + path : node.name;\n                    node = node.parent;\n                }\n            },\n            hashName: (parentid, name) => {\n                var hash = 0;\n                for (var i = 0; i < name.length; i++) {\n                    hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n                }\n                return ((parentid + hash) >>> 0) % FS.nameTable.length;\n            },\n            hashAddNode: (node) => {\n                var hash = FS.hashName(node.parent.id, node.name);\n                node.name_next = FS.nameTable[hash];\n                FS.nameTable[hash] = node;\n            },\n            hashRemoveNode: (node) => {\n                var hash = FS.hashName(node.parent.id, node.name);\n                if (FS.nameTable[hash] === node) {\n                    FS.nameTable[hash] = node.name_next;\n                } else {\n                    var current = FS.nameTable[hash];\n                    while (current) {\n                        if (current.name_next === node) {\n                            current.name_next = node.name_next;\n                            break;\n                        }\n                        current = current.name_next;\n                    }\n                }\n            },\n            lookupNode: (parent, name) => {\n                var errCode = FS.mayLookup(parent);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode, parent);\n                }\n                var hash = FS.hashName(parent.id, name);\n                for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n                    var nodeName = node.name;\n                    if (node.parent.id === parent.id && nodeName === name) {\n                        return node;\n                    }\n                }\n                return FS.lookup(parent, name);\n            },\n            createNode: (parent, name, mode, rdev) => {\n                var node = new FS.FSNode(parent, name, mode, rdev);\n                FS.hashAddNode(node);\n                return node;\n            },\n            destroyNode: (node) => {\n                FS.hashRemoveNode(node);\n            },\n            isRoot: (node) => {\n                return node === node.parent;\n            },\n            isMountpoint: (node) => {\n                return !!node.mounted;\n            },\n            isFile: (mode) => {\n                return (mode & 61440) === 32768;\n            },\n            isDir: (mode) => {\n                return (mode & 61440) === 16384;\n            },\n            isLink: (mode) => {\n                return (mode & 61440) === 40960;\n            },\n            isChrdev: (mode) => {\n                return (mode & 61440) === 8192;\n            },\n            isBlkdev: (mode) => {\n                return (mode & 61440) === 24576;\n            },\n            isFIFO: (mode) => {\n                return (mode & 61440) === 4096;\n            },\n            isSocket: (mode) => {\n                return (mode & 49152) === 49152;\n            },\n            flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n            modeStringToFlags: (str) => {\n                var flags = FS.flagModes[str];\n                if (typeof flags == 'undefined') {\n                    throw new Error('Unknown file open mode: ' + str);\n                }\n                return flags;\n            },\n            flagsToPermissionString: (flag) => {\n                var perms = ['r', 'w', 'rw'][flag & 3];\n                if (flag & 512) {\n                    perms += 'w';\n                }\n                return perms;\n            },\n            nodePermissions: (node, perms) => {\n                if (FS.ignorePermissions) {\n                    return 0;\n                }\n                if (perms.includes('r') && !(node.mode & 292)) {\n                    return 2;\n                } else if (perms.includes('w') && !(node.mode & 146)) {\n                    return 2;\n                } else if (perms.includes('x') && !(node.mode & 73)) {\n                    return 2;\n                }\n                return 0;\n            },\n            mayLookup: (dir) => {\n                var errCode = FS.nodePermissions(dir, 'x');\n                if (errCode) return errCode;\n                if (!dir.node_ops.lookup) return 2;\n                return 0;\n            },\n            mayCreate: (dir, name) => {\n                try {\n                    var node = FS.lookupNode(dir, name);\n                    return 20;\n                } catch (e) {}\n                return FS.nodePermissions(dir, 'wx');\n            },\n            mayDelete: (dir, name, isdir) => {\n                var node;\n                try {\n                    node = FS.lookupNode(dir, name);\n                } catch (e) {\n                    return e.errno;\n                }\n                var errCode = FS.nodePermissions(dir, 'wx');\n                if (errCode) {\n                    return errCode;\n                }\n                if (isdir) {\n                    if (!FS.isDir(node.mode)) {\n                        return 54;\n                    }\n                    if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n                        return 10;\n                    }\n                } else {\n                    if (FS.isDir(node.mode)) {\n                        return 31;\n                    }\n                }\n                return 0;\n            },\n            mayOpen: (node, flags) => {\n                if (!node) {\n                    return 44;\n                }\n                if (FS.isLink(node.mode)) {\n                    return 32;\n                } else if (FS.isDir(node.mode)) {\n                    if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n                        return 31;\n                    }\n                }\n                return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n            },\n            MAX_OPEN_FDS: 4096,\n            nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n                for (var fd = fd_start; fd <= fd_end; fd++) {\n                    if (!FS.streams[fd]) {\n                        return fd;\n                    }\n                }\n                throw new FS.ErrnoError(33);\n            },\n            getStream: (fd) => FS.streams[fd],\n            createStream: (stream, fd_start, fd_end) => {\n                if (!FS.FSStream) {\n                    FS.FSStream = function () {\n                        this.shared = {};\n                    };\n                    FS.FSStream.prototype = {};\n                    Object.defineProperties(FS.FSStream.prototype, {\n                        object: {\n                            get: function () {\n                                return this.node;\n                            },\n                            set: function (val) {\n                                this.node = val;\n                            },\n                        },\n                        isRead: {\n                            get: function () {\n                                return (this.flags & 2097155) !== 1;\n                            },\n                        },\n                        isWrite: {\n                            get: function () {\n                                return (this.flags & 2097155) !== 0;\n                            },\n                        },\n                        isAppend: {\n                            get: function () {\n                                return this.flags & 1024;\n                            },\n                        },\n                        flags: {\n                            get: function () {\n                                return this.shared.flags;\n                            },\n                            set: function (val) {\n                                this.shared.flags = val;\n                            },\n                        },\n                        position: {\n                            get: function () {\n                                return this.shared.position;\n                            },\n                            set: function (val) {\n                                this.shared.position = val;\n                            },\n                        },\n                    });\n                }\n                stream = Object.assign(new FS.FSStream(), stream);\n                var fd = FS.nextfd(fd_start, fd_end);\n                stream.fd = fd;\n                FS.streams[fd] = stream;\n                return stream;\n            },\n            closeStream: (fd) => {\n                FS.streams[fd] = null;\n            },\n            chrdev_stream_ops: {\n                open: (stream) => {\n                    var device = FS.getDevice(stream.node.rdev);\n                    stream.stream_ops = device.stream_ops;\n                    if (stream.stream_ops.open) {\n                        stream.stream_ops.open(stream);\n                    }\n                },\n                llseek: () => {\n                    throw new FS.ErrnoError(70);\n                },\n            },\n            major: (dev) => dev >> 8,\n            minor: (dev) => dev & 255,\n            makedev: (ma, mi) => (ma << 8) | mi,\n            registerDevice: (dev, ops) => {\n                FS.devices[dev] = { stream_ops: ops };\n            },\n            getDevice: (dev) => FS.devices[dev],\n            getMounts: (mount) => {\n                var mounts = [];\n                var check = [mount];\n                while (check.length) {\n                    var m = check.pop();\n                    mounts.push(m);\n                    check.push.apply(check, m.mounts);\n                }\n                return mounts;\n            },\n            syncfs: (populate, callback) => {\n                if (typeof populate == 'function') {\n                    callback = populate;\n                    populate = false;\n                }\n                FS.syncFSRequests++;\n                if (FS.syncFSRequests > 1) {\n                    err(\n                        'warning: ' +\n                            FS.syncFSRequests +\n                            ' FS.syncfs operations in flight at once, probably just doing extra work',\n                    );\n                }\n                var mounts = FS.getMounts(FS.root.mount);\n                var completed = 0;\n                function doCallback(errCode) {\n                    FS.syncFSRequests--;\n                    return callback(errCode);\n                }\n                function done(errCode) {\n                    if (errCode) {\n                        if (!done.errored) {\n                            done.errored = true;\n                            return doCallback(errCode);\n                        }\n                        return;\n                    }\n                    if (++completed >= mounts.length) {\n                        doCallback(null);\n                    }\n                }\n                mounts.forEach((mount) => {\n                    if (!mount.type.syncfs) {\n                        return done(null);\n                    }\n                    mount.type.syncfs(mount, populate, done);\n                });\n            },\n            mount: (type, opts, mountpoint) => {\n                var root = mountpoint === '/';\n                var pseudo = !mountpoint;\n                var node;\n                if (root && FS.root) {\n                    throw new FS.ErrnoError(10);\n                } else if (!root && !pseudo) {\n                    var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n                    mountpoint = lookup.path;\n                    node = lookup.node;\n                    if (FS.isMountpoint(node)) {\n                        throw new FS.ErrnoError(10);\n                    }\n                    if (!FS.isDir(node.mode)) {\n                        throw new FS.ErrnoError(54);\n                    }\n                }\n                var mount = { type: type, opts: opts, mountpoint: mountpoint, mounts: [] };\n                var mountRoot = type.mount(mount);\n                mountRoot.mount = mount;\n                mount.root = mountRoot;\n                if (root) {\n                    FS.root = mountRoot;\n                } else if (node) {\n                    node.mounted = mount;\n                    if (node.mount) {\n                        node.mount.mounts.push(mount);\n                    }\n                }\n                return mountRoot;\n            },\n            unmount: (mountpoint) => {\n                var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n                if (!FS.isMountpoint(lookup.node)) {\n                    throw new FS.ErrnoError(28);\n                }\n                var node = lookup.node;\n                var mount = node.mounted;\n                var mounts = FS.getMounts(mount);\n                Object.keys(FS.nameTable).forEach((hash) => {\n                    var current = FS.nameTable[hash];\n                    while (current) {\n                        var next = current.name_next;\n                        if (mounts.includes(current.mount)) {\n                            FS.destroyNode(current);\n                        }\n                        current = next;\n                    }\n                });\n                node.mounted = null;\n                var idx = node.mount.mounts.indexOf(mount);\n                node.mount.mounts.splice(idx, 1);\n            },\n            lookup: (parent, name) => {\n                return parent.node_ops.lookup(parent, name);\n            },\n            mknod: (path, mode, dev) => {\n                var lookup = FS.lookupPath(path, { parent: true });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                if (!name || name === '.' || name === '..') {\n                    throw new FS.ErrnoError(28);\n                }\n                var errCode = FS.mayCreate(parent, name);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!parent.node_ops.mknod) {\n                    throw new FS.ErrnoError(63);\n                }\n                return parent.node_ops.mknod(parent, name, mode, dev);\n            },\n            create: (path, mode) => {\n                mode = mode !== undefined ? mode : 438;\n                mode &= 4095;\n                mode |= 32768;\n                return FS.mknod(path, mode, 0);\n            },\n            mkdir: (path, mode) => {\n                mode = mode !== undefined ? mode : 511;\n                mode &= 511 | 512;\n                mode |= 16384;\n                return FS.mknod(path, mode, 0);\n            },\n            mkdirTree: (path, mode) => {\n                var dirs = path.split('/');\n                var d = '';\n                for (var i = 0; i < dirs.length; ++i) {\n                    if (!dirs[i]) continue;\n                    d += '/' + dirs[i];\n                    try {\n                        FS.mkdir(d, mode);\n                    } catch (e) {\n                        if (e.errno != 20) throw e;\n                    }\n                }\n            },\n            mkdev: (path, mode, dev) => {\n                if (typeof dev == 'undefined') {\n                    dev = mode;\n                    mode = 438;\n                }\n                mode |= 8192;\n                return FS.mknod(path, mode, dev);\n            },\n            symlink: (oldpath, newpath) => {\n                if (!PATH_FS.resolve(oldpath)) {\n                    throw new FS.ErrnoError(44);\n                }\n                var lookup = FS.lookupPath(newpath, { parent: true });\n                var parent = lookup.node;\n                if (!parent) {\n                    throw new FS.ErrnoError(44);\n                }\n                var newname = PATH.basename(newpath);\n                var errCode = FS.mayCreate(parent, newname);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!parent.node_ops.symlink) {\n                    throw new FS.ErrnoError(63);\n                }\n                return parent.node_ops.symlink(parent, newname, oldpath);\n            },\n            rename: (old_path, new_path) => {\n                var old_dirname = PATH.dirname(old_path);\n                var new_dirname = PATH.dirname(new_path);\n                var old_name = PATH.basename(old_path);\n                var new_name = PATH.basename(new_path);\n                var lookup, old_dir, new_dir;\n                lookup = FS.lookupPath(old_path, { parent: true });\n                old_dir = lookup.node;\n                lookup = FS.lookupPath(new_path, { parent: true });\n                new_dir = lookup.node;\n                if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n                if (old_dir.mount !== new_dir.mount) {\n                    throw new FS.ErrnoError(75);\n                }\n                var old_node = FS.lookupNode(old_dir, old_name);\n                var relative = PATH_FS.relative(old_path, new_dirname);\n                if (relative.charAt(0) !== '.') {\n                    throw new FS.ErrnoError(28);\n                }\n                relative = PATH_FS.relative(new_path, old_dirname);\n                if (relative.charAt(0) !== '.') {\n                    throw new FS.ErrnoError(55);\n                }\n                var new_node;\n                try {\n                    new_node = FS.lookupNode(new_dir, new_name);\n                } catch (e) {}\n                if (old_node === new_node) {\n                    return;\n                }\n                var isdir = FS.isDir(old_node.mode);\n                var errCode = FS.mayDelete(old_dir, old_name, isdir);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!old_dir.node_ops.rename) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n                    throw new FS.ErrnoError(10);\n                }\n                if (new_dir !== old_dir) {\n                    errCode = FS.nodePermissions(old_dir, 'w');\n                    if (errCode) {\n                        throw new FS.ErrnoError(errCode);\n                    }\n                }\n                FS.hashRemoveNode(old_node);\n                try {\n                    old_dir.node_ops.rename(old_node, new_dir, new_name);\n                } catch (e) {\n                    throw e;\n                } finally {\n                    FS.hashAddNode(old_node);\n                }\n            },\n            rmdir: (path) => {\n                var lookup = FS.lookupPath(path, { parent: true });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, true);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!parent.node_ops.rmdir) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (FS.isMountpoint(node)) {\n                    throw new FS.ErrnoError(10);\n                }\n                parent.node_ops.rmdir(parent, name);\n                FS.destroyNode(node);\n            },\n            readdir: (path) => {\n                var lookup = FS.lookupPath(path, { follow: true });\n                var node = lookup.node;\n                if (!node.node_ops.readdir) {\n                    throw new FS.ErrnoError(54);\n                }\n                return node.node_ops.readdir(node);\n            },\n            unlink: (path) => {\n                var lookup = FS.lookupPath(path, { parent: true });\n                var parent = lookup.node;\n                if (!parent) {\n                    throw new FS.ErrnoError(44);\n                }\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, false);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!parent.node_ops.unlink) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (FS.isMountpoint(node)) {\n                    throw new FS.ErrnoError(10);\n                }\n                parent.node_ops.unlink(parent, name);\n                FS.destroyNode(node);\n            },\n            readlink: (path) => {\n                var lookup = FS.lookupPath(path);\n                var link = lookup.node;\n                if (!link) {\n                    throw new FS.ErrnoError(44);\n                }\n                if (!link.node_ops.readlink) {\n                    throw new FS.ErrnoError(28);\n                }\n                return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n            },\n            stat: (path, dontFollow) => {\n                var lookup = FS.lookupPath(path, { follow: !dontFollow });\n                var node = lookup.node;\n                if (!node) {\n                    throw new FS.ErrnoError(44);\n                }\n                if (!node.node_ops.getattr) {\n                    throw new FS.ErrnoError(63);\n                }\n                return node.node_ops.getattr(node);\n            },\n            lstat: (path) => {\n                return FS.stat(path, true);\n            },\n            chmod: (path, mode, dontFollow) => {\n                var node;\n                if (typeof path == 'string') {\n                    var lookup = FS.lookupPath(path, { follow: !dontFollow });\n                    node = lookup.node;\n                } else {\n                    node = path;\n                }\n                if (!node.node_ops.setattr) {\n                    throw new FS.ErrnoError(63);\n                }\n                node.node_ops.setattr(node, { mode: (mode & 4095) | (node.mode & ~4095), timestamp: Date.now() });\n            },\n            lchmod: (path, mode) => {\n                FS.chmod(path, mode, true);\n            },\n            fchmod: (fd, mode) => {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                    throw new FS.ErrnoError(8);\n                }\n                FS.chmod(stream.node, mode);\n            },\n            chown: (path, uid, gid, dontFollow) => {\n                var node;\n                if (typeof path == 'string') {\n                    var lookup = FS.lookupPath(path, { follow: !dontFollow });\n                    node = lookup.node;\n                } else {\n                    node = path;\n                }\n                if (!node.node_ops.setattr) {\n                    throw new FS.ErrnoError(63);\n                }\n                node.node_ops.setattr(node, { timestamp: Date.now() });\n            },\n            lchown: (path, uid, gid) => {\n                FS.chown(path, uid, gid, true);\n            },\n            fchown: (fd, uid, gid) => {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                    throw new FS.ErrnoError(8);\n                }\n                FS.chown(stream.node, uid, gid);\n            },\n            truncate: (path, len) => {\n                if (len < 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                var node;\n                if (typeof path == 'string') {\n                    var lookup = FS.lookupPath(path, { follow: true });\n                    node = lookup.node;\n                } else {\n                    node = path;\n                }\n                if (!node.node_ops.setattr) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (FS.isDir(node.mode)) {\n                    throw new FS.ErrnoError(31);\n                }\n                if (!FS.isFile(node.mode)) {\n                    throw new FS.ErrnoError(28);\n                }\n                var errCode = FS.nodePermissions(node, 'w');\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n            },\n            ftruncate: (fd, len) => {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                    throw new FS.ErrnoError(8);\n                }\n                if ((stream.flags & 2097155) === 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                FS.truncate(stream.node, len);\n            },\n            utime: (path, atime, mtime) => {\n                var lookup = FS.lookupPath(path, { follow: true });\n                var node = lookup.node;\n                node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n            },\n            open: (path, flags, mode) => {\n                if (path === '') {\n                    throw new FS.ErrnoError(44);\n                }\n                flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n                mode = typeof mode == 'undefined' ? 438 : mode;\n                if (flags & 64) {\n                    mode = (mode & 4095) | 32768;\n                } else {\n                    mode = 0;\n                }\n                var node;\n                if (typeof path == 'object') {\n                    node = path;\n                } else {\n                    path = PATH.normalize(path);\n                    try {\n                        var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n                        node = lookup.node;\n                    } catch (e) {}\n                }\n                var created = false;\n                if (flags & 64) {\n                    if (node) {\n                        if (flags & 128) {\n                            throw new FS.ErrnoError(20);\n                        }\n                    } else {\n                        node = FS.mknod(path, mode, 0);\n                        created = true;\n                    }\n                }\n                if (!node) {\n                    throw new FS.ErrnoError(44);\n                }\n                if (FS.isChrdev(node.mode)) {\n                    flags &= ~512;\n                }\n                if (flags & 65536 && !FS.isDir(node.mode)) {\n                    throw new FS.ErrnoError(54);\n                }\n                if (!created) {\n                    var errCode = FS.mayOpen(node, flags);\n                    if (errCode) {\n                        throw new FS.ErrnoError(errCode);\n                    }\n                }\n                if (flags & 512 && !created) {\n                    FS.truncate(node, 0);\n                }\n                flags &= ~(128 | 512 | 131072);\n                var stream = FS.createStream({\n                    node: node,\n                    path: FS.getPath(node),\n                    flags: flags,\n                    seekable: true,\n                    position: 0,\n                    stream_ops: node.stream_ops,\n                    ungotten: [],\n                    error: false,\n                });\n                if (stream.stream_ops.open) {\n                    stream.stream_ops.open(stream);\n                }\n                if (Module['logReadFiles'] && !(flags & 1)) {\n                    if (!FS.readFiles) FS.readFiles = {};\n                    if (!(path in FS.readFiles)) {\n                        FS.readFiles[path] = 1;\n                    }\n                }\n                return stream;\n            },\n            close: (stream) => {\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (stream.getdents) stream.getdents = null;\n                try {\n                    if (stream.stream_ops.close) {\n                        stream.stream_ops.close(stream);\n                    }\n                } catch (e) {\n                    throw e;\n                } finally {\n                    FS.closeStream(stream.fd);\n                }\n                stream.fd = null;\n            },\n            isClosed: (stream) => {\n                return stream.fd === null;\n            },\n            llseek: (stream, offset, whence) => {\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (!stream.seekable || !stream.stream_ops.llseek) {\n                    throw new FS.ErrnoError(70);\n                }\n                if (whence != 0 && whence != 1 && whence != 2) {\n                    throw new FS.ErrnoError(28);\n                }\n                stream.position = stream.stream_ops.llseek(stream, offset, whence);\n                stream.ungotten = [];\n                return stream.position;\n            },\n            read: (stream, buffer, offset, length, position) => {\n                if (length < 0 || position < 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if ((stream.flags & 2097155) === 1) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (FS.isDir(stream.node.mode)) {\n                    throw new FS.ErrnoError(31);\n                }\n                if (!stream.stream_ops.read) {\n                    throw new FS.ErrnoError(28);\n                }\n                var seeking = typeof position != 'undefined';\n                if (!seeking) {\n                    position = stream.position;\n                } else if (!stream.seekable) {\n                    throw new FS.ErrnoError(70);\n                }\n                var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n                if (!seeking) stream.position += bytesRead;\n                return bytesRead;\n            },\n            write: (stream, buffer, offset, length, position, canOwn) => {\n                if (length < 0 || position < 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if ((stream.flags & 2097155) === 0) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (FS.isDir(stream.node.mode)) {\n                    throw new FS.ErrnoError(31);\n                }\n                if (!stream.stream_ops.write) {\n                    throw new FS.ErrnoError(28);\n                }\n                if (stream.seekable && stream.flags & 1024) {\n                    FS.llseek(stream, 0, 2);\n                }\n                var seeking = typeof position != 'undefined';\n                if (!seeking) {\n                    position = stream.position;\n                } else if (!stream.seekable) {\n                    throw new FS.ErrnoError(70);\n                }\n                var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n                if (!seeking) stream.position += bytesWritten;\n                return bytesWritten;\n            },\n            allocate: (stream, offset, length) => {\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (offset < 0 || length <= 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                if ((stream.flags & 2097155) === 0) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n                    throw new FS.ErrnoError(43);\n                }\n                if (!stream.stream_ops.allocate) {\n                    throw new FS.ErrnoError(138);\n                }\n                stream.stream_ops.allocate(stream, offset, length);\n            },\n            mmap: (stream, length, position, prot, flags) => {\n                if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n                    throw new FS.ErrnoError(2);\n                }\n                if ((stream.flags & 2097155) === 1) {\n                    throw new FS.ErrnoError(2);\n                }\n                if (!stream.stream_ops.mmap) {\n                    throw new FS.ErrnoError(43);\n                }\n                return stream.stream_ops.mmap(stream, length, position, prot, flags);\n            },\n            msync: (stream, buffer, offset, length, mmapFlags) => {\n                if (!stream || !stream.stream_ops.msync) {\n                    return 0;\n                }\n                return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n            },\n            munmap: (stream) => 0,\n            ioctl: (stream, cmd, arg) => {\n                if (!stream.stream_ops.ioctl) {\n                    throw new FS.ErrnoError(59);\n                }\n                return stream.stream_ops.ioctl(stream, cmd, arg);\n            },\n            readFile: (path, opts = {}) => {\n                opts.flags = opts.flags || 0;\n                opts.encoding = opts.encoding || 'binary';\n                if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n                    throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n                }\n                var ret;\n                var stream = FS.open(path, opts.flags);\n                var stat = FS.stat(path);\n                var length = stat.size;\n                var buf = new Uint8Array(length);\n                FS.read(stream, buf, 0, length, 0);\n                if (opts.encoding === 'utf8') {\n                    ret = UTF8ArrayToString(buf, 0);\n                } else if (opts.encoding === 'binary') {\n                    ret = buf;\n                }\n                FS.close(stream);\n                return ret;\n            },\n            writeFile: (path, data, opts = {}) => {\n                opts.flags = opts.flags || 577;\n                var stream = FS.open(path, opts.flags, opts.mode);\n                if (typeof data == 'string') {\n                    var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n                    var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n                    FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n                } else if (ArrayBuffer.isView(data)) {\n                    FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n                } else {\n                    throw new Error('Unsupported data type');\n                }\n                FS.close(stream);\n            },\n            cwd: () => FS.currentPath,\n            chdir: (path) => {\n                var lookup = FS.lookupPath(path, { follow: true });\n                if (lookup.node === null) {\n                    throw new FS.ErrnoError(44);\n                }\n                if (!FS.isDir(lookup.node.mode)) {\n                    throw new FS.ErrnoError(54);\n                }\n                var errCode = FS.nodePermissions(lookup.node, 'x');\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                FS.currentPath = lookup.path;\n            },\n            createDefaultDirectories: () => {\n                FS.mkdir('/tmp');\n                FS.mkdir('/home');\n                FS.mkdir('/home/web_user');\n            },\n            createDefaultDevices: () => {\n                FS.mkdir('/dev');\n                FS.registerDevice(FS.makedev(1, 3), {\n                    read: () => 0,\n                    write: (stream, buffer, offset, length, pos) => length,\n                });\n                FS.mkdev('/dev/null', FS.makedev(1, 3));\n                TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n                TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n                FS.mkdev('/dev/tty', FS.makedev(5, 0));\n                FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n                var random_device = getRandomDevice();\n                FS.createDevice('/dev', 'random', random_device);\n                FS.createDevice('/dev', 'urandom', random_device);\n                FS.mkdir('/dev/shm');\n                FS.mkdir('/dev/shm/tmp');\n            },\n            createSpecialDirectories: () => {\n                FS.mkdir('/proc');\n                var proc_self = FS.mkdir('/proc/self');\n                FS.mkdir('/proc/self/fd');\n                FS.mount(\n                    {\n                        mount: () => {\n                            var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n                            node.node_ops = {\n                                lookup: (parent, name) => {\n                                    var fd = +name;\n                                    var stream = FS.getStream(fd);\n                                    if (!stream) throw new FS.ErrnoError(8);\n                                    var ret = {\n                                        parent: null,\n                                        mount: { mountpoint: 'fake' },\n                                        node_ops: { readlink: () => stream.path },\n                                    };\n                                    ret.parent = ret;\n                                    return ret;\n                                },\n                            };\n                            return node;\n                        },\n                    },\n                    {},\n                    '/proc/self/fd',\n                );\n            },\n            createStandardStreams: () => {\n                if (Module['stdin']) {\n                    FS.createDevice('/dev', 'stdin', Module['stdin']);\n                } else {\n                    FS.symlink('/dev/tty', '/dev/stdin');\n                }\n                if (Module['stdout']) {\n                    FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n                } else {\n                    FS.symlink('/dev/tty', '/dev/stdout');\n                }\n                if (Module['stderr']) {\n                    FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n                } else {\n                    FS.symlink('/dev/tty1', '/dev/stderr');\n                }\n                var stdin = FS.open('/dev/stdin', 0);\n                var stdout = FS.open('/dev/stdout', 1);\n                var stderr = FS.open('/dev/stderr', 1);\n            },\n            ensureErrnoError: () => {\n                if (FS.ErrnoError) return;\n                FS.ErrnoError = function ErrnoError(errno, node) {\n                    this.node = node;\n                    this.setErrno = function (errno) {\n                        this.errno = errno;\n                    };\n                    this.setErrno(errno);\n                    this.message = 'FS error';\n                };\n                FS.ErrnoError.prototype = new Error();\n                FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n                [44].forEach((code) => {\n                    FS.genericErrors[code] = new FS.ErrnoError(code);\n                    FS.genericErrors[code].stack = '<generic error, no stack>';\n                });\n            },\n            staticInit: () => {\n                FS.ensureErrnoError();\n                FS.nameTable = new Array(4096);\n                FS.mount(MEMFS, {}, '/');\n                FS.createDefaultDirectories();\n                FS.createDefaultDevices();\n                FS.createSpecialDirectories();\n                FS.filesystems = { MEMFS: MEMFS };\n            },\n            init: (input, output, error) => {\n                FS.init.initialized = true;\n                FS.ensureErrnoError();\n                Module['stdin'] = input || Module['stdin'];\n                Module['stdout'] = output || Module['stdout'];\n                Module['stderr'] = error || Module['stderr'];\n                FS.createStandardStreams();\n            },\n            quit: () => {\n                FS.init.initialized = false;\n                for (var i = 0; i < FS.streams.length; i++) {\n                    var stream = FS.streams[i];\n                    if (!stream) {\n                        continue;\n                    }\n                    FS.close(stream);\n                }\n            },\n            getMode: (canRead, canWrite) => {\n                var mode = 0;\n                if (canRead) mode |= 292 | 73;\n                if (canWrite) mode |= 146;\n                return mode;\n            },\n            findObject: (path, dontResolveLastLink) => {\n                var ret = FS.analyzePath(path, dontResolveLastLink);\n                if (!ret.exists) {\n                    return null;\n                }\n                return ret.object;\n            },\n            analyzePath: (path, dontResolveLastLink) => {\n                try {\n                    var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n                    path = lookup.path;\n                } catch (e) {}\n                var ret = {\n                    isRoot: false,\n                    exists: false,\n                    error: 0,\n                    name: null,\n                    path: null,\n                    object: null,\n                    parentExists: false,\n                    parentPath: null,\n                    parentObject: null,\n                };\n                try {\n                    var lookup = FS.lookupPath(path, { parent: true });\n                    ret.parentExists = true;\n                    ret.parentPath = lookup.path;\n                    ret.parentObject = lookup.node;\n                    ret.name = PATH.basename(path);\n                    lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n                    ret.exists = true;\n                    ret.path = lookup.path;\n                    ret.object = lookup.node;\n                    ret.name = lookup.node.name;\n                    ret.isRoot = lookup.path === '/';\n                } catch (e) {\n                    ret.error = e.errno;\n                }\n                return ret;\n            },\n            createPath: (parent, path, canRead, canWrite) => {\n                parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n                var parts = path.split('/').reverse();\n                while (parts.length) {\n                    var part = parts.pop();\n                    if (!part) continue;\n                    var current = PATH.join2(parent, part);\n                    try {\n                        FS.mkdir(current);\n                    } catch (e) {}\n                    parent = current;\n                }\n                return current;\n            },\n            createFile: (parent, name, properties, canRead, canWrite) => {\n                var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(canRead, canWrite);\n                return FS.create(path, mode);\n            },\n            createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n                var path = name;\n                if (parent) {\n                    parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n                    path = name ? PATH.join2(parent, name) : parent;\n                }\n                var mode = FS.getMode(canRead, canWrite);\n                var node = FS.create(path, mode);\n                if (data) {\n                    if (typeof data == 'string') {\n                        var arr = new Array(data.length);\n                        for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n                        data = arr;\n                    }\n                    FS.chmod(node, mode | 146);\n                    var stream = FS.open(node, 577);\n                    FS.write(stream, data, 0, data.length, 0, canOwn);\n                    FS.close(stream);\n                    FS.chmod(node, mode);\n                }\n                return node;\n            },\n            createDevice: (parent, name, input, output) => {\n                var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(!!input, !!output);\n                if (!FS.createDevice.major) FS.createDevice.major = 64;\n                var dev = FS.makedev(FS.createDevice.major++, 0);\n                FS.registerDevice(dev, {\n                    open: (stream) => {\n                        stream.seekable = false;\n                    },\n                    close: (stream) => {\n                        if (output && output.buffer && output.buffer.length) {\n                            output(10);\n                        }\n                    },\n                    read: (stream, buffer, offset, length, pos) => {\n                        var bytesRead = 0;\n                        for (var i = 0; i < length; i++) {\n                            var result;\n                            try {\n                                result = input();\n                            } catch (e) {\n                                throw new FS.ErrnoError(29);\n                            }\n                            if (result === undefined && bytesRead === 0) {\n                                throw new FS.ErrnoError(6);\n                            }\n                            if (result === null || result === undefined) break;\n                            bytesRead++;\n                            buffer[offset + i] = result;\n                        }\n                        if (bytesRead) {\n                            stream.node.timestamp = Date.now();\n                        }\n                        return bytesRead;\n                    },\n                    write: (stream, buffer, offset, length, pos) => {\n                        for (var i = 0; i < length; i++) {\n                            try {\n                                output(buffer[offset + i]);\n                            } catch (e) {\n                                throw new FS.ErrnoError(29);\n                            }\n                        }\n                        if (length) {\n                            stream.node.timestamp = Date.now();\n                        }\n                        return i;\n                    },\n                });\n                return FS.mkdev(path, mode, dev);\n            },\n            forceLoadFile: (obj) => {\n                if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n                if (typeof XMLHttpRequest != 'undefined') {\n                    throw new Error(\n                        'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n                    );\n                } else if (read_) {\n                    try {\n                        obj.contents = intArrayFromString(read_(obj.url), true);\n                        obj.usedBytes = obj.contents.length;\n                    } catch (e) {\n                        throw new FS.ErrnoError(29);\n                    }\n                } else {\n                    throw new Error('Cannot load without read() or XMLHttpRequest.');\n                }\n            },\n            createLazyFile: (parent, name, url, canRead, canWrite) => {\n                function LazyUint8Array() {\n                    this.lengthKnown = false;\n                    this.chunks = [];\n                }\n                LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n                    if (idx > this.length - 1 || idx < 0) {\n                        return undefined;\n                    }\n                    var chunkOffset = idx % this.chunkSize;\n                    var chunkNum = (idx / this.chunkSize) | 0;\n                    return this.getter(chunkNum)[chunkOffset];\n                };\n                LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n                    this.getter = getter;\n                };\n                LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('HEAD', url, false);\n                    xhr.send(null);\n                    if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\n                        throw new Error(\"Couldn't load \" + url + '. Status: ' + xhr.status);\n                    var datalength = Number(xhr.getResponseHeader('Content-length'));\n                    var header;\n                    var hasByteServing = (header = xhr.getResponseHeader('Accept-Ranges')) && header === 'bytes';\n                    var usesGzip = (header = xhr.getResponseHeader('Content-Encoding')) && header === 'gzip';\n                    var chunkSize = 1024 * 1024;\n                    if (!hasByteServing) chunkSize = datalength;\n                    var doXHR = (from, to) => {\n                        if (from > to)\n                            throw new Error('invalid range (' + from + ', ' + to + ') or no bytes requested!');\n                        if (to > datalength - 1)\n                            throw new Error('only ' + datalength + ' bytes available! programmer error!');\n                        var xhr = new XMLHttpRequest();\n                        xhr.open('GET', url, false);\n                        if (datalength !== chunkSize) xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n                        xhr.responseType = 'arraybuffer';\n                        if (xhr.overrideMimeType) {\n                            xhr.overrideMimeType('text/plain; charset=x-user-defined');\n                        }\n                        xhr.send(null);\n                        if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\n                            throw new Error(\"Couldn't load \" + url + '. Status: ' + xhr.status);\n                        if (xhr.response !== undefined) {\n                            return new Uint8Array(xhr.response || []);\n                        }\n                        return intArrayFromString(xhr.responseText || '', true);\n                    };\n                    var lazyArray = this;\n                    lazyArray.setDataGetter((chunkNum) => {\n                        var start = chunkNum * chunkSize;\n                        var end = (chunkNum + 1) * chunkSize - 1;\n                        end = Math.min(end, datalength - 1);\n                        if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                            lazyArray.chunks[chunkNum] = doXHR(start, end);\n                        }\n                        if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n                        return lazyArray.chunks[chunkNum];\n                    });\n                    if (usesGzip || !datalength) {\n                        chunkSize = datalength = 1;\n                        datalength = this.getter(0).length;\n                        chunkSize = datalength;\n                        out('LazyFiles on gzip forces download of the whole file when length is accessed');\n                    }\n                    this._length = datalength;\n                    this._chunkSize = chunkSize;\n                    this.lengthKnown = true;\n                };\n                if (typeof XMLHttpRequest != 'undefined') {\n                    if (!ENVIRONMENT_IS_WORKER)\n                        throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n                    var lazyArray = new LazyUint8Array();\n                    Object.defineProperties(lazyArray, {\n                        length: {\n                            get: function () {\n                                if (!this.lengthKnown) {\n                                    this.cacheLength();\n                                }\n                                return this._length;\n                            },\n                        },\n                        chunkSize: {\n                            get: function () {\n                                if (!this.lengthKnown) {\n                                    this.cacheLength();\n                                }\n                                return this._chunkSize;\n                            },\n                        },\n                    });\n                    var properties = { isDevice: false, contents: lazyArray };\n                } else {\n                    var properties = { isDevice: false, url: url };\n                }\n                var node = FS.createFile(parent, name, properties, canRead, canWrite);\n                if (properties.contents) {\n                    node.contents = properties.contents;\n                } else if (properties.url) {\n                    node.contents = null;\n                    node.url = properties.url;\n                }\n                Object.defineProperties(node, {\n                    usedBytes: {\n                        get: function () {\n                            return this.contents.length;\n                        },\n                    },\n                });\n                var stream_ops = {};\n                var keys = Object.keys(node.stream_ops);\n                keys.forEach((key) => {\n                    var fn = node.stream_ops[key];\n                    stream_ops[key] = function forceLoadLazyFile() {\n                        FS.forceLoadFile(node);\n                        return fn.apply(null, arguments);\n                    };\n                });\n                function writeChunks(stream, buffer, offset, length, position) {\n                    var contents = stream.node.contents;\n                    if (position >= contents.length) return 0;\n                    var size = Math.min(contents.length - position, length);\n                    if (contents.slice) {\n                        for (var i = 0; i < size; i++) {\n                            buffer[offset + i] = contents[position + i];\n                        }\n                    } else {\n                        for (var i = 0; i < size; i++) {\n                            buffer[offset + i] = contents.get(position + i);\n                        }\n                    }\n                    return size;\n                }\n                stream_ops.read = (stream, buffer, offset, length, position) => {\n                    FS.forceLoadFile(node);\n                    return writeChunks(stream, buffer, offset, length, position);\n                };\n                stream_ops.mmap = (stream, length, position, prot, flags) => {\n                    FS.forceLoadFile(node);\n                    var ptr = mmapAlloc(length);\n                    if (!ptr) {\n                        throw new FS.ErrnoError(48);\n                    }\n                    writeChunks(stream, HEAP8, ptr, length, position);\n                    return { ptr: ptr, allocated: true };\n                };\n                node.stream_ops = stream_ops;\n                return node;\n            },\n            createPreloadedFile: (\n                parent,\n                name,\n                url,\n                canRead,\n                canWrite,\n                onload,\n                onerror,\n                dontCreateFile,\n                canOwn,\n                preFinish,\n            ) => {\n                var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n                var dep = getUniqueRunDependency('cp ' + fullname);\n                function processData(byteArray) {\n                    function finish(byteArray) {\n                        if (preFinish) preFinish();\n                        if (!dontCreateFile) {\n                            FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n                        }\n                        if (onload) onload();\n                        removeRunDependency(dep);\n                    }\n                    if (\n                        Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n                            if (onerror) onerror();\n                            removeRunDependency(dep);\n                        })\n                    ) {\n                        return;\n                    }\n                    finish(byteArray);\n                }\n                addRunDependency(dep);\n                if (typeof url == 'string') {\n                    asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n                } else {\n                    processData(url);\n                }\n            },\n            indexedDB: () => {\n                return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n            },\n            DB_NAME: () => {\n                return 'EM_FS_' + window.location.pathname;\n            },\n            DB_VERSION: 20,\n            DB_STORE_NAME: 'FILE_DATA',\n            saveFilesToDB: (paths, onload, onerror) => {\n                onload = onload || (() => {});\n                onerror = onerror || (() => {});\n                var indexedDB = FS.indexedDB();\n                try {\n                    var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n                } catch (e) {\n                    return onerror(e);\n                }\n                openRequest.onupgradeneeded = () => {\n                    out('creating db');\n                    var db = openRequest.result;\n                    db.createObjectStore(FS.DB_STORE_NAME);\n                };\n                openRequest.onsuccess = () => {\n                    var db = openRequest.result;\n                    var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n                    var files = transaction.objectStore(FS.DB_STORE_NAME);\n                    var ok = 0,\n                        fail = 0,\n                        total = paths.length;\n                    function finish() {\n                        if (fail == 0) onload();\n                        else onerror();\n                    }\n                    paths.forEach((path) => {\n                        var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n                        putRequest.onsuccess = () => {\n                            ok++;\n                            if (ok + fail == total) finish();\n                        };\n                        putRequest.onerror = () => {\n                            fail++;\n                            if (ok + fail == total) finish();\n                        };\n                    });\n                    transaction.onerror = onerror;\n                };\n                openRequest.onerror = onerror;\n            },\n            loadFilesFromDB: (paths, onload, onerror) => {\n                onload = onload || (() => {});\n                onerror = onerror || (() => {});\n                var indexedDB = FS.indexedDB();\n                try {\n                    var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n                } catch (e) {\n                    return onerror(e);\n                }\n                openRequest.onupgradeneeded = onerror;\n                openRequest.onsuccess = () => {\n                    var db = openRequest.result;\n                    try {\n                        var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n                    } catch (e) {\n                        onerror(e);\n                        return;\n                    }\n                    var files = transaction.objectStore(FS.DB_STORE_NAME);\n                    var ok = 0,\n                        fail = 0,\n                        total = paths.length;\n                    function finish() {\n                        if (fail == 0) onload();\n                        else onerror();\n                    }\n                    paths.forEach((path) => {\n                        var getRequest = files.get(path);\n                        getRequest.onsuccess = () => {\n                            if (FS.analyzePath(path).exists) {\n                                FS.unlink(path);\n                            }\n                            FS.createDataFile(\n                                PATH.dirname(path),\n                                PATH.basename(path),\n                                getRequest.result,\n                                true,\n                                true,\n                                true,\n                            );\n                            ok++;\n                            if (ok + fail == total) finish();\n                        };\n                        getRequest.onerror = () => {\n                            fail++;\n                            if (ok + fail == total) finish();\n                        };\n                    });\n                    transaction.onerror = onerror;\n                };\n                openRequest.onerror = onerror;\n            },\n        };\n        var SYSCALLS = {\n            DEFAULT_POLLMASK: 5,\n            calculateAt: function (dirfd, path, allowEmpty) {\n                if (PATH.isAbs(path)) {\n                    return path;\n                }\n                var dir;\n                if (dirfd === -100) {\n                    dir = FS.cwd();\n                } else {\n                    var dirstream = FS.getStream(dirfd);\n                    if (!dirstream) throw new FS.ErrnoError(8);\n                    dir = dirstream.path;\n                }\n                if (path.length == 0) {\n                    if (!allowEmpty) {\n                        throw new FS.ErrnoError(44);\n                    }\n                    return dir;\n                }\n                return PATH.join2(dir, path);\n            },\n            doStat: function (func, path, buf) {\n                try {\n                    var stat = func(path);\n                } catch (e) {\n                    if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n                        return -54;\n                    }\n                    throw e;\n                }\n                HEAP32[buf >> 2] = stat.dev;\n                HEAP32[(buf + 8) >> 2] = stat.ino;\n                HEAP32[(buf + 12) >> 2] = stat.mode;\n                HEAP32[(buf + 16) >> 2] = stat.nlink;\n                HEAP32[(buf + 20) >> 2] = stat.uid;\n                HEAP32[(buf + 24) >> 2] = stat.gid;\n                HEAP32[(buf + 28) >> 2] = stat.rdev;\n                (tempI64 = [\n                    stat.size >>> 0,\n                    ((tempDouble = stat.size),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n                    (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n                HEAP32[(buf + 48) >> 2] = 4096;\n                HEAP32[(buf + 52) >> 2] = stat.blocks;\n                (tempI64 = [\n                    Math.floor(stat.atime.getTime() / 1e3) >>> 0,\n                    ((tempDouble = Math.floor(stat.atime.getTime() / 1e3)),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n                    (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n                HEAP32[(buf + 64) >> 2] = 0;\n                (tempI64 = [\n                    Math.floor(stat.mtime.getTime() / 1e3) >>> 0,\n                    ((tempDouble = Math.floor(stat.mtime.getTime() / 1e3)),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n                    (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n                HEAP32[(buf + 80) >> 2] = 0;\n                (tempI64 = [\n                    Math.floor(stat.ctime.getTime() / 1e3) >>> 0,\n                    ((tempDouble = Math.floor(stat.ctime.getTime() / 1e3)),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n                    (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n                HEAP32[(buf + 96) >> 2] = 0;\n                (tempI64 = [\n                    stat.ino >>> 0,\n                    ((tempDouble = stat.ino),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[(buf + 104) >> 2] = tempI64[0]),\n                    (HEAP32[(buf + 108) >> 2] = tempI64[1]);\n                return 0;\n            },\n            doMsync: function (addr, stream, len, flags, offset) {\n                var buffer = HEAPU8.slice(addr, addr + len);\n                FS.msync(stream, buffer, offset, len, flags);\n            },\n            varargs: undefined,\n            get: function () {\n                SYSCALLS.varargs += 4;\n                var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n                return ret;\n            },\n            getStr: function (ptr) {\n                var ret = UTF8ToString(ptr);\n                return ret;\n            },\n            getStreamFromFD: function (fd) {\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                return stream;\n            },\n        };\n        function setErrNo(value) {\n            HEAP32[___errno_location() >> 2] = value;\n            return value;\n        }\n        function ___syscall_fcntl64(fd, cmd, varargs) {\n            SYSCALLS.varargs = varargs;\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                switch (cmd) {\n                    case 0: {\n                        var arg = SYSCALLS.get();\n                        if (arg < 0) {\n                            return -28;\n                        }\n                        var newStream;\n                        newStream = FS.createStream(stream, arg);\n                        return newStream.fd;\n                    }\n                    case 1:\n                    case 2:\n                        return 0;\n                    case 3:\n                        return stream.flags;\n                    case 4: {\n                        var arg = SYSCALLS.get();\n                        stream.flags |= arg;\n                        return 0;\n                    }\n                    case 5: {\n                        var arg = SYSCALLS.get();\n                        var offset = 0;\n                        HEAP16[(arg + offset) >> 1] = 2;\n                        return 0;\n                    }\n                    case 6:\n                    case 7:\n                        return 0;\n                    case 16:\n                    case 8:\n                        return -28;\n                    case 9:\n                        setErrNo(28);\n                        return -1;\n                    default: {\n                        return -28;\n                    }\n                }\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_ioctl(fd, op, varargs) {\n            SYSCALLS.varargs = varargs;\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                switch (op) {\n                    case 21509:\n                    case 21505: {\n                        if (!stream.tty) return -59;\n                        return 0;\n                    }\n                    case 21510:\n                    case 21511:\n                    case 21512:\n                    case 21506:\n                    case 21507:\n                    case 21508: {\n                        if (!stream.tty) return -59;\n                        return 0;\n                    }\n                    case 21519: {\n                        if (!stream.tty) return -59;\n                        var argp = SYSCALLS.get();\n                        HEAP32[argp >> 2] = 0;\n                        return 0;\n                    }\n                    case 21520: {\n                        if (!stream.tty) return -59;\n                        return -28;\n                    }\n                    case 21531: {\n                        var argp = SYSCALLS.get();\n                        return FS.ioctl(stream, op, argp);\n                    }\n                    case 21523: {\n                        if (!stream.tty) return -59;\n                        return 0;\n                    }\n                    case 21524: {\n                        if (!stream.tty) return -59;\n                        return 0;\n                    }\n                    default:\n                        return -28;\n                }\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_openat(dirfd, path, flags, varargs) {\n            SYSCALLS.varargs = varargs;\n            try {\n                path = SYSCALLS.getStr(path);\n                path = SYSCALLS.calculateAt(dirfd, path);\n                var mode = varargs ? SYSCALLS.get() : 0;\n                return FS.open(path, flags, mode).fd;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        var PIPEFS = {\n            BUCKET_BUFFER_SIZE: 8192,\n            mount: function (mount) {\n                return FS.createNode(null, '/', 16384 | 511, 0);\n            },\n            createPipe: function () {\n                var pipe = { buckets: [], refcnt: 2 };\n                pipe.buckets.push({ buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE), offset: 0, roffset: 0 });\n                var rName = PIPEFS.nextname();\n                var wName = PIPEFS.nextname();\n                var rNode = FS.createNode(PIPEFS.root, rName, 4096, 0);\n                var wNode = FS.createNode(PIPEFS.root, wName, 4096, 0);\n                rNode.pipe = pipe;\n                wNode.pipe = pipe;\n                var readableStream = FS.createStream({\n                    path: rName,\n                    node: rNode,\n                    flags: 0,\n                    seekable: false,\n                    stream_ops: PIPEFS.stream_ops,\n                });\n                rNode.stream = readableStream;\n                var writableStream = FS.createStream({\n                    path: wName,\n                    node: wNode,\n                    flags: 1,\n                    seekable: false,\n                    stream_ops: PIPEFS.stream_ops,\n                });\n                wNode.stream = writableStream;\n                return { readable_fd: readableStream.fd, writable_fd: writableStream.fd };\n            },\n            stream_ops: {\n                poll: function (stream) {\n                    var pipe = stream.node.pipe;\n                    if ((stream.flags & 2097155) === 1) {\n                        return 256 | 4;\n                    }\n                    if (pipe.buckets.length > 0) {\n                        for (var i = 0; i < pipe.buckets.length; i++) {\n                            var bucket = pipe.buckets[i];\n                            if (bucket.offset - bucket.roffset > 0) {\n                                return 64 | 1;\n                            }\n                        }\n                    }\n                    return 0;\n                },\n                ioctl: function (stream, request, varargs) {\n                    return 28;\n                },\n                fsync: function (stream) {\n                    return 28;\n                },\n                read: function (stream, buffer, offset, length, position) {\n                    var pipe = stream.node.pipe;\n                    var currentLength = 0;\n                    for (var i = 0; i < pipe.buckets.length; i++) {\n                        var bucket = pipe.buckets[i];\n                        currentLength += bucket.offset - bucket.roffset;\n                    }\n                    assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\n                    var data = buffer.subarray(offset, offset + length);\n                    if (length <= 0) {\n                        return 0;\n                    }\n                    if (currentLength == 0) {\n                        throw new FS.ErrnoError(6);\n                    }\n                    var toRead = Math.min(currentLength, length);\n                    var totalRead = toRead;\n                    var toRemove = 0;\n                    for (var i = 0; i < pipe.buckets.length; i++) {\n                        var currBucket = pipe.buckets[i];\n                        var bucketSize = currBucket.offset - currBucket.roffset;\n                        if (toRead <= bucketSize) {\n                            var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\n                            if (toRead < bucketSize) {\n                                tmpSlice = tmpSlice.subarray(0, toRead);\n                                currBucket.roffset += toRead;\n                            } else {\n                                toRemove++;\n                            }\n                            data.set(tmpSlice);\n                            break;\n                        } else {\n                            var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\n                            data.set(tmpSlice);\n                            data = data.subarray(tmpSlice.byteLength);\n                            toRead -= tmpSlice.byteLength;\n                            toRemove++;\n                        }\n                    }\n                    if (toRemove && toRemove == pipe.buckets.length) {\n                        toRemove--;\n                        pipe.buckets[toRemove].offset = 0;\n                        pipe.buckets[toRemove].roffset = 0;\n                    }\n                    pipe.buckets.splice(0, toRemove);\n                    return totalRead;\n                },\n                write: function (stream, buffer, offset, length, position) {\n                    var pipe = stream.node.pipe;\n                    assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\n                    var data = buffer.subarray(offset, offset + length);\n                    var dataLen = data.byteLength;\n                    if (dataLen <= 0) {\n                        return 0;\n                    }\n                    var currBucket = null;\n                    if (pipe.buckets.length == 0) {\n                        currBucket = { buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE), offset: 0, roffset: 0 };\n                        pipe.buckets.push(currBucket);\n                    } else {\n                        currBucket = pipe.buckets[pipe.buckets.length - 1];\n                    }\n                    assert(currBucket.offset <= PIPEFS.BUCKET_BUFFER_SIZE);\n                    var freeBytesInCurrBuffer = PIPEFS.BUCKET_BUFFER_SIZE - currBucket.offset;\n                    if (freeBytesInCurrBuffer >= dataLen) {\n                        currBucket.buffer.set(data, currBucket.offset);\n                        currBucket.offset += dataLen;\n                        return dataLen;\n                    } else if (freeBytesInCurrBuffer > 0) {\n                        currBucket.buffer.set(data.subarray(0, freeBytesInCurrBuffer), currBucket.offset);\n                        currBucket.offset += freeBytesInCurrBuffer;\n                        data = data.subarray(freeBytesInCurrBuffer, data.byteLength);\n                    }\n                    var numBuckets = (data.byteLength / PIPEFS.BUCKET_BUFFER_SIZE) | 0;\n                    var remElements = data.byteLength % PIPEFS.BUCKET_BUFFER_SIZE;\n                    for (var i = 0; i < numBuckets; i++) {\n                        var newBucket = {\n                            buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n                            offset: PIPEFS.BUCKET_BUFFER_SIZE,\n                            roffset: 0,\n                        };\n                        pipe.buckets.push(newBucket);\n                        newBucket.buffer.set(data.subarray(0, PIPEFS.BUCKET_BUFFER_SIZE));\n                        data = data.subarray(PIPEFS.BUCKET_BUFFER_SIZE, data.byteLength);\n                    }\n                    if (remElements > 0) {\n                        var newBucket = {\n                            buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n                            offset: data.byteLength,\n                            roffset: 0,\n                        };\n                        pipe.buckets.push(newBucket);\n                        newBucket.buffer.set(data);\n                    }\n                    return dataLen;\n                },\n                close: function (stream) {\n                    var pipe = stream.node.pipe;\n                    pipe.refcnt--;\n                    if (pipe.refcnt === 0) {\n                        pipe.buckets = null;\n                    }\n                },\n            },\n            nextname: function () {\n                if (!PIPEFS.nextname.current) {\n                    PIPEFS.nextname.current = 0;\n                }\n                return 'pipe[' + PIPEFS.nextname.current++ + ']';\n            },\n        };\n        function ___syscall_pipe(fdPtr) {\n            try {\n                if (fdPtr == 0) {\n                    throw new FS.ErrnoError(21);\n                }\n                var res = PIPEFS.createPipe();\n                HEAP32[fdPtr >> 2] = res.readable_fd;\n                HEAP32[(fdPtr + 4) >> 2] = res.writable_fd;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_rmdir(path) {\n            try {\n                path = SYSCALLS.getStr(path);\n                FS.rmdir(path);\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_stat64(path, buf) {\n            try {\n                path = SYSCALLS.getStr(path);\n                return SYSCALLS.doStat(FS.stat, path, buf);\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_unlinkat(dirfd, path, flags) {\n            try {\n                path = SYSCALLS.getStr(path);\n                path = SYSCALLS.calculateAt(dirfd, path);\n                if (flags === 0) {\n                    FS.unlink(path);\n                } else if (flags === 512) {\n                    FS.rmdir(path);\n                } else {\n                    abort('Invalid flags passed to unlinkat');\n                }\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function __emscripten_date_now() {\n            return Date.now();\n        }\n        var nowIsMonotonic = true;\n        function __emscripten_get_now_is_monotonic() {\n            return nowIsMonotonic;\n        }\n        function _abort() {\n            abort('');\n        }\n        var _emscripten_get_now;\n        _emscripten_get_now = () => performance.now();\n        function _emscripten_memcpy_big(dest, src, num) {\n            HEAPU8.copyWithin(dest, src, src + num);\n        }\n        function abortOnCannotGrowMemory(requestedSize) {\n            abort('OOM');\n        }\n        function _emscripten_resize_heap(requestedSize) {\n            var oldSize = HEAPU8.length;\n            requestedSize = requestedSize >>> 0;\n            abortOnCannotGrowMemory(requestedSize);\n        }\n        var ENV = {};\n        function getExecutableName() {\n            return thisProgram || './this.program';\n        }\n        function getEnvStrings() {\n            if (!getEnvStrings.strings) {\n                var lang =\n                    ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace(\n                        '-',\n                        '_',\n                    ) + '.UTF-8';\n                var env = {\n                    USER: 'web_user',\n                    LOGNAME: 'web_user',\n                    PATH: '/',\n                    PWD: '/',\n                    HOME: '/home/web_user',\n                    LANG: lang,\n                    _: getExecutableName(),\n                };\n                for (var x in ENV) {\n                    if (ENV[x] === undefined) delete env[x];\n                    else env[x] = ENV[x];\n                }\n                var strings = [];\n                for (var x in env) {\n                    strings.push(x + '=' + env[x]);\n                }\n                getEnvStrings.strings = strings;\n            }\n            return getEnvStrings.strings;\n        }\n        function writeAsciiToMemory(str, buffer, dontAddNull) {\n            for (var i = 0; i < str.length; ++i) {\n                HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n            }\n            if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n        }\n        function _environ_get(__environ, environ_buf) {\n            var bufSize = 0;\n            getEnvStrings().forEach(function (string, i) {\n                var ptr = environ_buf + bufSize;\n                HEAPU32[(__environ + i * 4) >> 2] = ptr;\n                writeAsciiToMemory(string, ptr);\n                bufSize += string.length + 1;\n            });\n            return 0;\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n            var strings = getEnvStrings();\n            HEAPU32[penviron_count >> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function (string) {\n                bufSize += string.length + 1;\n            });\n            HEAPU32[penviron_buf_size >> 2] = bufSize;\n            return 0;\n        }\n        function _proc_exit(code) {\n            EXITSTATUS = code;\n            if (!keepRuntimeAlive()) {\n                ABORT = true;\n            }\n            quit_(code, new ExitStatus(code));\n        }\n        function exitJS(status, implicit) {\n            EXITSTATUS = status;\n            _proc_exit(status);\n        }\n        var _exit = exitJS;\n        function _fd_close(fd) {\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                FS.close(stream);\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function _fd_fdstat_get(fd, pbuf) {\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var type = stream.tty ? 2 : FS.isDir(stream.mode) ? 3 : FS.isLink(stream.mode) ? 7 : 4;\n                HEAP8[pbuf >> 0] = type;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function doReadv(stream, iov, iovcnt, offset) {\n            var ret = 0;\n            for (var i = 0; i < iovcnt; i++) {\n                var ptr = HEAPU32[iov >> 2];\n                var len = HEAPU32[(iov + 4) >> 2];\n                iov += 8;\n                var curr = FS.read(stream, HEAP8, ptr, len, offset);\n                if (curr < 0) return -1;\n                ret += curr;\n                if (curr < len) break;\n            }\n            return ret;\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = doReadv(stream, iov, iovcnt);\n                HEAP32[pnum >> 2] = num;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function convertI32PairToI53Checked(lo, hi) {\n            return (hi + 2097152) >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n            try {\n                var offset = convertI32PairToI53Checked(offset_low, offset_high);\n                if (isNaN(offset)) return 61;\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                FS.llseek(stream, offset, whence);\n                (tempI64 = [\n                    stream.position >>> 0,\n                    ((tempDouble = stream.position),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[newOffset >> 2] = tempI64[0]),\n                    (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n                if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function doWritev(stream, iov, iovcnt, offset) {\n            var ret = 0;\n            for (var i = 0; i < iovcnt; i++) {\n                var ptr = HEAPU32[iov >> 2];\n                var len = HEAPU32[(iov + 4) >> 2];\n                iov += 8;\n                var curr = FS.write(stream, HEAP8, ptr, len, offset);\n                if (curr < 0) return -1;\n                ret += curr;\n            }\n            return ret;\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = doWritev(stream, iov, iovcnt);\n                HEAPU32[pnum >> 2] = num;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function __isLeapYear(year) {\n            return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n            var sum = 0;\n            for (var i = 0; i <= index; sum += array[i++]) {}\n            return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n            var newDate = new Date(date.getTime());\n            while (days > 0) {\n                var leap = __isLeapYear(newDate.getFullYear());\n                var currentMonth = newDate.getMonth();\n                var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n                if (days > daysInCurrentMonth - newDate.getDate()) {\n                    days -= daysInCurrentMonth - newDate.getDate() + 1;\n                    newDate.setDate(1);\n                    if (currentMonth < 11) {\n                        newDate.setMonth(currentMonth + 1);\n                    } else {\n                        newDate.setMonth(0);\n                        newDate.setFullYear(newDate.getFullYear() + 1);\n                    }\n                } else {\n                    newDate.setDate(newDate.getDate() + days);\n                    return newDate;\n                }\n            }\n            return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n            var tm_zone = HEAP32[(tm + 40) >> 2];\n            var date = {\n                tm_sec: HEAP32[tm >> 2],\n                tm_min: HEAP32[(tm + 4) >> 2],\n                tm_hour: HEAP32[(tm + 8) >> 2],\n                tm_mday: HEAP32[(tm + 12) >> 2],\n                tm_mon: HEAP32[(tm + 16) >> 2],\n                tm_year: HEAP32[(tm + 20) >> 2],\n                tm_wday: HEAP32[(tm + 24) >> 2],\n                tm_yday: HEAP32[(tm + 28) >> 2],\n                tm_isdst: HEAP32[(tm + 32) >> 2],\n                tm_gmtoff: HEAP32[(tm + 36) >> 2],\n                tm_zone: tm_zone ? UTF8ToString(tm_zone) : '',\n            };\n            var pattern = UTF8ToString(format);\n            var EXPANSION_RULES_1 = {\n                '%c': '%a %b %d %H:%M:%S %Y',\n                '%D': '%m/%d/%y',\n                '%F': '%Y-%m-%d',\n                '%h': '%b',\n                '%r': '%I:%M:%S %p',\n                '%R': '%H:%M',\n                '%T': '%H:%M:%S',\n                '%x': '%m/%d/%y',\n                '%X': '%H:%M:%S',\n                '%Ec': '%c',\n                '%EC': '%C',\n                '%Ex': '%m/%d/%y',\n                '%EX': '%H:%M:%S',\n                '%Ey': '%y',\n                '%EY': '%Y',\n                '%Od': '%d',\n                '%Oe': '%e',\n                '%OH': '%H',\n                '%OI': '%I',\n                '%Om': '%m',\n                '%OM': '%M',\n                '%OS': '%S',\n                '%Ou': '%u',\n                '%OU': '%U',\n                '%OV': '%V',\n                '%Ow': '%w',\n                '%OW': '%W',\n                '%Oy': '%y',\n            };\n            for (var rule in EXPANSION_RULES_1) {\n                pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\n            }\n            var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n            var MONTHS = [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December',\n            ];\n            function leadingSomething(value, digits, character) {\n                var str = typeof value == 'number' ? value.toString() : value || '';\n                while (str.length < digits) {\n                    str = character[0] + str;\n                }\n                return str;\n            }\n            function leadingNulls(value, digits) {\n                return leadingSomething(value, digits, '0');\n            }\n            function compareByDay(date1, date2) {\n                function sgn(value) {\n                    return value < 0 ? -1 : value > 0 ? 1 : 0;\n                }\n                var compare;\n                if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n                    if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                        compare = sgn(date1.getDate() - date2.getDate());\n                    }\n                }\n                return compare;\n            }\n            function getFirstWeekStartDate(janFourth) {\n                switch (janFourth.getDay()) {\n                    case 0:\n                        return new Date(janFourth.getFullYear() - 1, 11, 29);\n                    case 1:\n                        return janFourth;\n                    case 2:\n                        return new Date(janFourth.getFullYear(), 0, 3);\n                    case 3:\n                        return new Date(janFourth.getFullYear(), 0, 2);\n                    case 4:\n                        return new Date(janFourth.getFullYear(), 0, 1);\n                    case 5:\n                        return new Date(janFourth.getFullYear() - 1, 11, 31);\n                    case 6:\n                        return new Date(janFourth.getFullYear() - 1, 11, 30);\n                }\n            }\n            function getWeekBasedYear(date) {\n                var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n                var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n                var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n                var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n                    if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                        return thisDate.getFullYear() + 1;\n                    }\n                    return thisDate.getFullYear();\n                }\n                return thisDate.getFullYear() - 1;\n            }\n            var EXPANSION_RULES_2 = {\n                '%a': function (date) {\n                    return WEEKDAYS[date.tm_wday].substring(0, 3);\n                },\n                '%A': function (date) {\n                    return WEEKDAYS[date.tm_wday];\n                },\n                '%b': function (date) {\n                    return MONTHS[date.tm_mon].substring(0, 3);\n                },\n                '%B': function (date) {\n                    return MONTHS[date.tm_mon];\n                },\n                '%C': function (date) {\n                    var year = date.tm_year + 1900;\n                    return leadingNulls((year / 100) | 0, 2);\n                },\n                '%d': function (date) {\n                    return leadingNulls(date.tm_mday, 2);\n                },\n                '%e': function (date) {\n                    return leadingSomething(date.tm_mday, 2, ' ');\n                },\n                '%g': function (date) {\n                    return getWeekBasedYear(date).toString().substring(2);\n                },\n                '%G': function (date) {\n                    return getWeekBasedYear(date);\n                },\n                '%H': function (date) {\n                    return leadingNulls(date.tm_hour, 2);\n                },\n                '%I': function (date) {\n                    var twelveHour = date.tm_hour;\n                    if (twelveHour == 0) twelveHour = 12;\n                    else if (twelveHour > 12) twelveHour -= 12;\n                    return leadingNulls(twelveHour, 2);\n                },\n                '%j': function (date) {\n                    return leadingNulls(\n                        date.tm_mday +\n                            __arraySum(\n                                __isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR,\n                                date.tm_mon - 1,\n                            ),\n                        3,\n                    );\n                },\n                '%m': function (date) {\n                    return leadingNulls(date.tm_mon + 1, 2);\n                },\n                '%M': function (date) {\n                    return leadingNulls(date.tm_min, 2);\n                },\n                '%n': function () {\n                    return '\\n';\n                },\n                '%p': function (date) {\n                    if (date.tm_hour >= 0 && date.tm_hour < 12) {\n                        return 'AM';\n                    }\n                    return 'PM';\n                },\n                '%S': function (date) {\n                    return leadingNulls(date.tm_sec, 2);\n                },\n                '%t': function () {\n                    return '\\t';\n                },\n                '%u': function (date) {\n                    return date.tm_wday || 7;\n                },\n                '%U': function (date) {\n                    var days = date.tm_yday + 7 - date.tm_wday;\n                    return leadingNulls(Math.floor(days / 7), 2);\n                },\n                '%V': function (date) {\n                    var val = Math.floor((date.tm_yday + 7 - ((date.tm_wday + 6) % 7)) / 7);\n                    if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n                        val++;\n                    }\n                    if (!val) {\n                        val = 52;\n                        var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n                        if (dec31 == 4 || (dec31 == 5 && __isLeapYear((date.tm_year % 400) - 1))) {\n                            val++;\n                        }\n                    } else if (val == 53) {\n                        var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n                        if (jan1 != 4 && (jan1 != 3 || !__isLeapYear(date.tm_year))) val = 1;\n                    }\n                    return leadingNulls(val, 2);\n                },\n                '%w': function (date) {\n                    return date.tm_wday;\n                },\n                '%W': function (date) {\n                    var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n                    return leadingNulls(Math.floor(days / 7), 2);\n                },\n                '%y': function (date) {\n                    return (date.tm_year + 1900).toString().substring(2);\n                },\n                '%Y': function (date) {\n                    return date.tm_year + 1900;\n                },\n                '%z': function (date) {\n                    var off = date.tm_gmtoff;\n                    var ahead = off >= 0;\n                    off = Math.abs(off) / 60;\n                    off = (off / 60) * 100 + (off % 60);\n                    return (ahead ? '+' : '-') + String('0000' + off).slice(-4);\n                },\n                '%Z': function (date) {\n                    return date.tm_zone;\n                },\n                '%%': function () {\n                    return '%';\n                },\n            };\n            pattern = pattern.replace(/%%/g, '\\0\\0');\n            for (var rule in EXPANSION_RULES_2) {\n                if (pattern.includes(rule)) {\n                    pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\n                }\n            }\n            pattern = pattern.replace(/\\0\\0/g, '%');\n            var bytes = intArrayFromString(pattern, false);\n            if (bytes.length > maxsize) {\n                return 0;\n            }\n            writeArrayToMemory(bytes, s);\n            return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n            return _strftime(s, maxsize, format, tm);\n        }\n        function allocateUTF8OnStack(str) {\n            var size = lengthBytesUTF8(str) + 1;\n            var ret = stackAlloc(size);\n            stringToUTF8Array(str, HEAP8, ret, size);\n            return ret;\n        }\n        var FSNode = function (parent, name, mode, rdev) {\n            if (!parent) {\n                parent = this;\n            }\n            this.parent = parent;\n            this.mount = parent.mount;\n            this.mounted = null;\n            this.id = FS.nextInode++;\n            this.name = name;\n            this.mode = mode;\n            this.node_ops = {};\n            this.stream_ops = {};\n            this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, {\n            read: {\n                get: function () {\n                    return (this.mode & readMode) === readMode;\n                },\n                set: function (val) {\n                    val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n                },\n            },\n            write: {\n                get: function () {\n                    return (this.mode & writeMode) === writeMode;\n                },\n                set: function (val) {\n                    val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n                },\n            },\n            isFolder: {\n                get: function () {\n                    return FS.isDir(this.mode);\n                },\n            },\n            isDevice: {\n                get: function () {\n                    return FS.isChrdev(this.mode);\n                },\n            },\n        });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        var asmLibraryArg = {\n            s: ___call_sighandler,\n            a: ___cxa_allocate_exception,\n            b: ___cxa_throw,\n            h: ___syscall_fcntl64,\n            y: ___syscall_ioctl,\n            z: ___syscall_openat,\n            t: ___syscall_pipe,\n            q: ___syscall_rmdir,\n            p: ___syscall_stat64,\n            r: ___syscall_unlinkat,\n            e: __emscripten_date_now,\n            j: __emscripten_get_now_is_monotonic,\n            c: _abort,\n            i: _emscripten_get_now,\n            k: _emscripten_memcpy_big,\n            o: _emscripten_resize_heap,\n            v: _environ_get,\n            w: _environ_sizes_get,\n            d: _exit,\n            g: _fd_close,\n            u: _fd_fdstat_get,\n            x: _fd_read,\n            m: _fd_seek,\n            f: _fd_write,\n            l: _proc_exit,\n            n: _strftime_l,\n        };\n        var asm = createWasm();\n        var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n            return (___wasm_call_ctors = Module['___wasm_call_ctors'] = Module['asm']['B']).apply(null, arguments);\n        });\n        var _main = (Module['_main'] = function () {\n            return (_main = Module['_main'] = Module['asm']['D']).apply(null, arguments);\n        });\n        var ___errno_location = (Module['___errno_location'] = function () {\n            return (___errno_location = Module['___errno_location'] = Module['asm']['E']).apply(null, arguments);\n        });\n        var _malloc = (Module['_malloc'] = function () {\n            return (_malloc = Module['_malloc'] = Module['asm']['F']).apply(null, arguments);\n        });\n        var stackAlloc = (Module['stackAlloc'] = function () {\n            return (stackAlloc = Module['stackAlloc'] = Module['asm']['G']).apply(null, arguments);\n        });\n        var ___cxa_is_pointer_type = (Module['___cxa_is_pointer_type'] = function () {\n            return (___cxa_is_pointer_type = Module['___cxa_is_pointer_type'] = Module['asm']['H']).apply(\n                null,\n                arguments,\n            );\n        });\n        var calledRun;\n        dependenciesFulfilled = function runCaller() {\n            if (!calledRun) run();\n            if (!calledRun) dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n            var entryFunction = Module['_main'];\n            args = args || [];\n            args.unshift(thisProgram);\n            var argc = args.length;\n            var argv = stackAlloc((argc + 1) * 4);\n            var argv_ptr = argv >> 2;\n            args.forEach((arg) => {\n                HEAP32[argv_ptr++] = allocateUTF8OnStack(arg);\n            });\n            HEAP32[argv_ptr] = 0;\n            try {\n                var ret = entryFunction(argc, argv);\n                exitJS(ret, true);\n                return ret;\n            } catch (e) {\n                return handleException(e);\n            }\n        }\n        // Function responsable for running the cvc5 web assembly code with the\n        //  arguments passed to the Module.\n        function run(args) {\n            // Get the arguments passed to the Module (an array of strings)\n            args = args || arguments_;\n            if (runDependencies > 0) {\n                return;\n            }\n            preRun();\n            if (runDependencies > 0) {\n                return;\n            }\n            function doRun() {\n                if (calledRun) return;\n                calledRun = true;\n                Module['calledRun'] = true;\n                if (ABORT) return;\n                initRuntime();\n                preMain();\n                readyPromiseResolve(Module);\n                // Call the execution of the main function\n                if (shouldRunNow) callMain(args);\n                // Call the post run function when no error happen\n                postRun();\n            }\n            {\n                doRun();\n            }\n        }\n        var shouldRunNow = true;\n        run();\n\n        return Module.ready;\n    };\n})();\nif (typeof exports === 'object' && typeof module === 'object') module.exports = Module;\nelse if (typeof define === 'function' && define['amd'])\n    define([], function () {\n        return Module;\n    });\nelse if (typeof exports === 'object') exports['Module'] = Module;\n","export enum drawerHelpersKind {\r\n    RULE,\r\n    ARGS,\r\n    CONC,\r\n    ALL,\r\n}\r\n\r\nexport enum renderLetKind {\r\n    EXPAND,\r\n    REVERT,\r\n}\r\n\r\nexport enum ClusterKind {\r\n    NONE,\r\n    SAT,\r\n    CNF,\r\n    TL,\r\n    PP,\r\n    IN,\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport { FileState } from '../../../interfaces/interfaces';\r\n\r\nconst initialState: FileState = {\r\n    name: 'ex.smt2',\r\n    value: 'digraph proof {\\n\\trankdir=\"BT\";\\n\\tnode [shape=record];\\n\\t0 [label=\"{SCOPE((not a), a)|(not (and (not a) a))}\", class = \" basic \", comment = \"{\\'subProofQty\\':1}\" ];\\n\\t1 [label=\"{CHAIN_RESOLUTION(true, a)|false}\", class = \" propositional \", comment = \"{\\'subProofQty\\':2}\" ];\\n\\t2 [label=\"{ASSUME(a)|a}\", comment = \"{\\'subProofQty\\':0}\"];\\n\\t3 [label=\"{ASSUME((not a))|(not a)}\", comment = \"{\\'subProofQty\\':0}\"];\\n\\t1->0;\\n\\t2->1;\\n\\t3->1;\\n}',\r\n    filesCount: 0,\r\n};\r\n\r\nexport const fileSlice = createSlice({\r\n    name: 'file',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        set: (state, action: PayloadAction<{ name: string; value: string }>) => {\r\n            state.name = action.payload.name;\r\n            if (state.value !== action.payload.value) {\r\n                state.value = action.payload.value;\r\n                state.filesCount++;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const { set } = fileSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectFileName = (state: RootState): string => state.file.name;\r\n\r\nexport const selectFileExtension = (state: RootState): string => {\r\n    const ext = state.file.name.split('.').pop();\r\n    return ext ? ext : '';\r\n};\r\n\r\nexport const selectDot = (state: RootState): string =>\r\n    state.file.name.split('.').pop() === 'json' ? JSON.parse(state.file.value).dot : state.file.value;\r\n\r\nexport const selectFile = (state: RootState): string => state.file.value;\r\n\r\nexport const selectFileCount = (state: RootState): number => state.file.filesCount;\r\n\r\nexport default fileSlice.reducer;\r\n","import { ClusterKind } from '../../../interfaces/enum';\r\nimport { NodeInterface, ProofState } from '../../../interfaces/interfaces';\r\n\r\ninterface ClusterColorMap {\r\n    [type: number]: string;\r\n}\r\n\r\nfunction removeEscapedCharacters(s: string): string {\r\n    let newS = '';\r\n    for (let i = 0; i < s.length; i += 1) {\r\n        if (\r\n            !(\r\n                s[i] === '\\\\' &&\r\n                (s[i + 1] === '\"' ||\r\n                    s[i + 1] === '>' ||\r\n                    s[i + 1] === '<' ||\r\n                    s[i + 1] === '{' ||\r\n                    s[i + 1] === '}' ||\r\n                    s[i + 1] === '|')\r\n            )\r\n        ) {\r\n            newS += s[i];\r\n        }\r\n    }\r\n\r\n    return newS;\r\n}\r\n\r\nexport function processDot(dot: string): [NodeInterface[], ProofState['letMap'], ClusterColorMap] {\r\n    const nodes: NodeInterface[] = [\r\n        {\r\n            id: 0,\r\n            conclusion: '',\r\n            rule: '',\r\n            args: '',\r\n            children: [],\r\n            parents: [NaN],\r\n            descendants: 0,\r\n            dependencies: [],\r\n            clusterType: ClusterKind.NONE,\r\n        },\r\n    ];\r\n    let comment: string | null = dot.slice(dot.indexOf('comment='));\r\n    comment = comment\r\n        ? removeEscapedCharacters(\r\n              removeEscapedCharacters(comment.slice(comment.indexOf('=') + 2, comment.indexOf(';') - 1)),\r\n          )\r\n        : null;\r\n\r\n    const clustersInfos: ClusterColorMap = {};\r\n    const lines = dot\r\n        .slice(dot.indexOf('{') + 1, dot.lastIndexOf('}') - 2)\r\n        .replace(/(\\n|\\t)/gm, '')\r\n        .split(';');\r\n    lines.forEach((line) => {\r\n        if (line.search('subgraph') !== -1) {\r\n            // Get the label of this node subgraph\r\n            let label = '';\r\n            let idx = line.indexOf('label=\"') + 7;\r\n            while (line[idx] !== '\"') {\r\n                label += line[idx];\r\n                idx++;\r\n            }\r\n\r\n            // Get the label of this node subgraph\r\n            let color = '';\r\n            idx = line.indexOf('bgcolor=\"') + 9;\r\n            while (line[idx] !== '\"') {\r\n                color += line[idx];\r\n                idx++;\r\n            }\r\n\r\n            // Get the nodes ID's\r\n            const numbers = line\r\n                .substring(idx + 1, line.length - 1)\r\n                .split(/\\s/)\r\n                .filter((str) => str.length)\r\n                .map((num) => Number(num));\r\n\r\n            let thisType: ClusterKind;\r\n            switch (label) {\r\n                case 'SAT':\r\n                    thisType = ClusterKind.SAT;\r\n                    break;\r\n                case 'CNF':\r\n                    thisType = ClusterKind.CNF;\r\n                    break;\r\n                case 'TL':\r\n                    thisType = ClusterKind.TL;\r\n                    break;\r\n                case 'PP':\r\n                    thisType = ClusterKind.PP;\r\n                    break;\r\n                case 'IN':\r\n                    thisType = ClusterKind.IN;\r\n                    break;\r\n                default:\r\n                    thisType = ClusterKind.NONE;\r\n            }\r\n\r\n            // Assign the type for each node\r\n            numbers.forEach((num) => {\r\n                nodes[num].clusterType = thisType;\r\n            });\r\n            clustersInfos[thisType] = color;\r\n        } else if (line.search('label') !== -1) {\r\n            const id = parseInt(line.slice(0, line.indexOf('[')).trim());\r\n            const attributes = line.slice(line.indexOf('[') + 1, line.lastIndexOf(']')).trim();\r\n\r\n            let label = attributes.slice(attributes.search(/[^\\\\]\"/) + 3);\r\n            label = label.slice(0, label.search(/[^\\\\]\"/));\r\n            let [conclusion, rule, args] = ['', '', ''];\r\n            [conclusion, rule] = label.split(/\\|/);\r\n            [rule, args] = rule.indexOf(' :args ') != -1 ? rule.split(' :args ') : [rule, ''];\r\n\r\n            const comment: string = removeEscapedCharacters(line.slice(line.indexOf('comment'), line.lastIndexOf('\"')));\r\n            const commentJSON = JSON.parse(comment.slice(comment.indexOf('\"') + 1).replace(/'/g, '\"'));\r\n\r\n            if (!nodes[id]) {\r\n                nodes[id] = {\r\n                    id: id,\r\n                    conclusion: '',\r\n                    rule: '',\r\n                    args: '',\r\n                    children: [],\r\n                    parents: [NaN],\r\n                    descendants: 0,\r\n                    dependencies: [],\r\n                    clusterType: ClusterKind.NONE,\r\n                };\r\n            }\r\n            nodes[id].conclusion = removeEscapedCharacters(conclusion);\r\n            nodes[id].rule = removeEscapedCharacters(rule);\r\n            nodes[id].args = removeEscapedCharacters(args);\r\n            nodes[id].descendants = commentJSON.subProofQty;\r\n        } else if (line.search('->') !== -1) {\r\n            const [child, parent] = line.split('->').map((x) => parseInt(x.trim()));\r\n            nodes[parent].children.push(child);\r\n            // If there isn't a child node\r\n            if (!nodes[child]) {\r\n                nodes[child] = {\r\n                    id: child,\r\n                    conclusion: '',\r\n                    rule: '',\r\n                    args: '',\r\n                    children: [],\r\n                    parents: [],\r\n                    descendants: 0,\r\n                    dependencies: [],\r\n                    clusterType: ClusterKind.NONE,\r\n                };\r\n            }\r\n            // If there is and is an invalid parent\r\n            else if (isNaN(nodes[child].parents[0])) {\r\n                nodes[child].parents = [];\r\n            }\r\n            nodes[child].parents.push(parent);\r\n        }\r\n    });\r\n\r\n    return comment ? [nodes, JSON.parse(comment)['letMap'], clustersInfos] : [nodes, {}, clustersInfos];\r\n}\r\n\r\nexport const piNodeParents = (\r\n    proof: NodeInterface[],\r\n    hiddenNodesArray: number[],\r\n    dependencies: { [parentId: number]: number[] } = {},\r\n): number[] => {\r\n    const parents = hiddenNodesArray\r\n        // Concat all the parents\r\n        .reduce((acc: number[], hiddenNode) => {\r\n            let haveHiddenParent = false;\r\n\r\n            proof[hiddenNode].parents.forEach((parent) => {\r\n                // If this parent is a hidden node\r\n                if (hiddenNodesArray.indexOf(parent) !== -1) {\r\n                    haveHiddenParent = true;\r\n                } else {\r\n                    dependencies[parent]\r\n                        ? dependencies[parent].push(hiddenNode)\r\n                        : (dependencies[parent] = [hiddenNode]);\r\n                }\r\n            });\r\n\r\n            if (haveHiddenParent) return acc;\r\n            return acc.concat(proof[hiddenNode].parents);\r\n        }, [])\r\n        // Filter the duplicated elements\r\n        .filter((parent, i, self) => self.indexOf(parent) === i)\r\n        // Only the parents that aren't in he hidden nodes array remains\r\n        .filter((parent) => hiddenNodesArray.indexOf(parent) === -1);\r\n\r\n    // Removes the pi node parents from the dependencies\r\n    Object.keys(dependencies).forEach((parent) => {\r\n        const n = Number(parent);\r\n        if (parents.indexOf(n) !== -1) delete dependencies[n];\r\n    });\r\n\r\n    return parents;\r\n};\r\n\r\nexport const descendants = (proof: NodeInterface[], nodeId: number): number[] => {\r\n    const validChildren = proof[nodeId].children.filter((node) => !proof[node].isHidden);\r\n    return validChildren.concat(\r\n        validChildren.reduce((acc: number[], childId) => {\r\n            return acc.concat(descendants(proof, childId));\r\n        }, []),\r\n    );\r\n};\r\n\r\nexport const piNodeChildren = (proof: NodeInterface[], hiddenNodesArray: number[]): number[] => {\r\n    const children = hiddenNodesArray\r\n        // Get all the childrens\r\n        .reduce((acc: number[], hiddenNode) => acc.concat(proof[hiddenNode].children), [])\r\n        // Exclude the childrens that are part of the hidden nodes\r\n        .filter((child) => hiddenNodesArray.indexOf(child) === -1);\r\n    return children;\r\n};\r\n\r\nexport const findNodesClusters = (proof: NodeInterface[], hiddenNodesArray: number[]): number[][] => {\r\n    const hiddenNodes = [...hiddenNodesArray];\r\n    const clusters: number[][] = [];\r\n    let clusteredNodes = 0;\r\n    const parents = hiddenNodes.map((hiddenNode) => proof[hiddenNode].parents);\r\n\r\n    // Cluster the nodes based on similiar parents\r\n    parents.forEach((parent, clusterID) => {\r\n        // If not all of the nodes where clustered and is a non empty cluster\r\n        if (clusteredNodes !== parents.length && parents[clusterID].length) {\r\n            clusters.push([]);\r\n            parents.forEach((p, hiddenID) => {\r\n                // If those nodes have some parent in commom and they weren't verified yet\r\n                if (parents[hiddenID].length && parent.some((_p) => p.indexOf(_p) !== -1)) {\r\n                    clusters[clusters.length - 1].push(hiddenNodes[hiddenID]);\r\n                    // Removes these parents from the array, making shure they will not get verified again (already clustered)\r\n                    parents[hiddenID] = [];\r\n                    // Increases the number o clustered nodes\r\n                    clusteredNodes++;\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    let pastCluster: number[][] = [];\r\n    // Cluster the nodes until there aren't changes being made\r\n    while (JSON.stringify(pastCluster) != JSON.stringify(clusters)) {\r\n        pastCluster = [...clusters];\r\n        clusters.forEach((cluster, clusterID) => {\r\n            const clusterParents = proof[cluster[0]].parents;\r\n\r\n            // For each cluster\r\n            clusters.forEach((parentCluster, id) => {\r\n                // If this parentCluster (cluster) is parent of the current cluster\r\n                if (parentCluster.some((hiddenID) => clusterParents.indexOf(hiddenID) !== -1)) {\r\n                    // Group the nodes couple in one single cluster (the parent cluster)\r\n                    clusters[id] = clusters[id].concat(clusters[clusterID]);\r\n                    clusters.splice(clusterID, 1);\r\n                    clusterID--;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Filter the nodes with length 1\r\n    return clusters.filter((cluster) => cluster.length > 1);\r\n};\r\n\r\nexport const groupPiNodeDependencies = (\r\n    proof: NodeInterface[],\r\n    hiddenNodesArray: number[],\r\n): NodeInterface['dependencies'] => {\r\n    const piNodeDependencies: NodeInterface['dependencies'] = [];\r\n    const depMap: { [piID: number]: number } = {};\r\n\r\n    // Copy all the hidden nodes dependencies to the new pi node\r\n    proof.forEach((node) => {\r\n        // Search for all the hidden nodes that have deps\r\n        if (hiddenNodesArray.indexOf(node.id) !== -1 && node.dependencies.length) {\r\n            // For each dependence in this node\r\n            node.dependencies.forEach((dep) => {\r\n                // This pi node dependence wasn't inserted yet\r\n                if (Object.keys(depMap).indexOf(String(dep.piId)) === -1) {\r\n                    piNodeDependencies.push(dep);\r\n                    depMap[dep.piId] = piNodeDependencies.length - 1;\r\n                }\r\n                // Concat the nodes inside the pi node already inserted\r\n                else {\r\n                    piNodeDependencies[depMap[dep.piId]].depsId = piNodeDependencies[depMap[dep.piId]].depsId.concat(\r\n                        dep.depsId,\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return piNodeDependencies;\r\n};\r\n\r\nexport const sliceNodesCluster = (\r\n    proof: NodeInterface[],\r\n    clusterMap: number[],\r\n    nodeId = 0,\r\n    slicedClusters: number[][] = [],\r\n): number[][] => {\r\n    const currentNode = proof[nodeId];\r\n\r\n    // If the node id is valid and wasn't inserted yet\r\n    if (nodeId && clusterMap[currentNode.id] === -1) {\r\n        // Get all parents with the same type\r\n        const parentsClusters: { [parentID: number]: number } = {};\r\n        for (let i = 0; i < currentNode.parents.length; i++) {\r\n            const p = currentNode.parents[i];\r\n            if (proof[p].clusterType === currentNode.clusterType) {\r\n                parentsClusters[p] = clusterMap[p];\r\n                break;\r\n            }\r\n        }\r\n\r\n        const keys = Object.keys(parentsClusters);\r\n\r\n        // If the current node has the same type as (at least) one of it's parents\r\n        if (keys.length) {\r\n            // Put the current node in the cluster of the first parent with the same type\r\n            const target = parentsClusters[Number(keys[0])];\r\n            slicedClusters[target].push(currentNode.id);\r\n            clusterMap[currentNode.id] = target;\r\n        }\r\n        // Parent with different type\r\n        else {\r\n            const clusterID = slicedClusters.length;\r\n            clusterMap[currentNode.id] = clusterID;\r\n            slicedClusters.push([currentNode.id]);\r\n\r\n            // Add the brothers with the same type in the same cluster\r\n            proof[currentNode.parents[0]].children.forEach((c) => {\r\n                // If the brother node has the same type as the current one\r\n                if (proof[c].clusterType === currentNode.clusterType && c !== currentNode.id) {\r\n                    slicedClusters[clusterID].push(c);\r\n                    clusterMap[c] = clusterID;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    currentNode.children.forEach((child) => {\r\n        sliceNodesCluster(proof, clusterMap, child, slicedClusters);\r\n    });\r\n    return slicedClusters;\r\n};\r\n\r\nexport const extractTheoryLemmas = (\r\n    proof: NodeInterface[],\r\n    clusters: ProofState['clustersInfos'],\r\n    haveCluster: boolean,\r\n): ProofState['theoryLemmaMap'] => {\r\n    // If have clusters registered\r\n    if (haveCluster) {\r\n        return [proof[0].conclusion].concat(\r\n            clusters.filter((c) => c.type === ClusterKind.TL).map((c) => proof[c.hiddenNodes[0]].conclusion),\r\n        );\r\n    } else {\r\n        return proof.filter((n) => n.rule === 'SCOPE').map((n) => n.conclusion);\r\n    }\r\n};\r\n","export class BaseUndo {\r\n    nodes: number[];\r\n    name: string;\r\n\r\n    constructor(nodes: number[], name: string) {\r\n        this.nodes = nodes;\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport class MoveUndo extends BaseUndo {\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(nodes: number[], x: number, y: number) {\r\n        super(nodes, 'MoveUndo');\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nexport class ColorUndo extends BaseUndo {\r\n    colorMap: { [color: string]: number[] };\r\n\r\n    constructor(nodes: number[], color: { [color: string]: number[] }) {\r\n        super(nodes, 'ColorUndo');\r\n        this.colorMap = color;\r\n    }\r\n}\r\n\r\nexport class UnfoldUndo extends BaseUndo {\r\n    positions: { id: number; x: number; y: number }[];\r\n    colors: { id: number; color: string }[];\r\n\r\n    constructor(\r\n        nodes: number[],\r\n        positions: { id: number; x: number; y: number }[],\r\n        colors: { id: number; color: string }[],\r\n    ) {\r\n        super(nodes, 'UnfoldUndo');\r\n        this.positions = positions;\r\n        this.colors = colors;\r\n    }\r\n}\r\n\r\nexport class FoldUndo extends BaseUndo {\r\n    positions: { id: number; x: number; y: number }[];\r\n\r\n    constructor(nodes: number[], positions: { id: number; x: number; y: number }[]) {\r\n        super(nodes, 'FoldUndo');\r\n        this.positions = positions;\r\n    }\r\n}\r\n\r\nexport class HideUndo extends BaseUndo {\r\n    positions: { id: number; x: number; y: number }[];\r\n    nPiNodes: number;\r\n\r\n    constructor(nodes: number[], positions: { id: number; x: number; y: number }[], nPiNodes: number) {\r\n        super(nodes, 'HideUndo');\r\n        this.positions = positions;\r\n        this.nPiNodes = nPiNodes;\r\n    }\r\n}\r\n","export const colorConverter = (colorName: string): string => {\r\n    let color = '#fff';\r\n    switch (colorName) {\r\n        case 'red':\r\n            color = '#f72b34';\r\n            break;\r\n        case 'orange':\r\n            color = '#ff8334';\r\n            break;\r\n        case 'yellow':\r\n            color = '#ffc149';\r\n            break;\r\n        case 'green':\r\n            color = '#60aa51';\r\n            break;\r\n        case 'blue':\r\n            color = '#0097e4';\r\n            break;\r\n        case 'purple':\r\n            color = '#a73da5';\r\n            break;\r\n        case 'brown':\r\n            color = '#a95a49';\r\n            break;\r\n        case 'black':\r\n            color = '#464646';\r\n            break;\r\n\r\n        case 'white':\r\n            color = '#f0f0f0';\r\n            break;\r\n    }\r\n    return color;\r\n};\r\n","import { FoldUndo, HideUndo, UnfoldUndo } from './../../../interfaces/undoClasses';\r\nimport { Draft, PayloadAction } from '@reduxjs/toolkit';\r\nimport { processDot, descendants, findNodesClusters, sliceNodesCluster, extractTheoryLemmas } from './auxi';\r\nimport { ExternalCmdState, ProofState } from '../../../interfaces/interfaces';\r\nimport { colorConverter } from '../theme/auxi';\r\nimport { BaseUndo, ColorUndo, MoveUndo } from '../../../interfaces/undoClasses';\r\nimport Deque from 'double-ended-queue';\r\n\r\nconst STACK_MAX_SIZE = 20;\r\nconst undoQueue = new Deque<BaseUndo>();\r\n\r\nfunction addUndo(undo: BaseUndo): void {\r\n    // Ensures max size\r\n    if (undoQueue.length === STACK_MAX_SIZE) undoQueue.shift();\r\n    // Add to stack\r\n    undoQueue.push(undo);\r\n}\r\n\r\nfunction clearUndo(): void {\r\n    undoQueue.clear();\r\n}\r\n\r\nfunction clearHiddenNodes(state: Draft<ProofState>, action: PayloadAction<null>): void {\r\n    state.hiddenNodes.forEach((hiddenArray) => hiddenArray.forEach((node) => (state.proof[node].isHidden = undefined)));\r\n    state.hiddenNodes = [];\r\n}\r\n\r\nfunction process(state: Draft<ProofState>, action: PayloadAction<string>): void {\r\n    // Reset the state\r\n    state.clustersInfos = [];\r\n\r\n    let proofJSON;\r\n    let dot = action.payload;\r\n    let isJSON = false;\r\n\r\n    // If the payload is a .json file\r\n    if (dot.indexOf('{\"dot\":\"') !== -1) {\r\n        proofJSON = JSON.parse(dot);\r\n        dot = proofJSON.dot;\r\n        isJSON = true;\r\n    }\r\n\r\n    const [proof, letMap, clustersColors] = processDot(dot);\r\n    state.proof = proof;\r\n    state.letMap = letMap;\r\n    state.view = 'full';\r\n\r\n    // If there are clusters\r\n    let clusters: number[][] = [];\r\n    if (Object.keys(clustersColors).length) {\r\n        state.view = 'clustered';\r\n\r\n        // Slice the clusters\r\n        const clustersMap: number[] = Array(state.proof.length).fill(-1);\r\n        clusters = sliceNodesCluster(state.proof, clustersMap);\r\n\r\n        // Maps the cluster infos\r\n        clusters.forEach((cluster) => {\r\n            const type = state.proof[cluster[0]].clusterType;\r\n            state.clustersInfos.push({\r\n                hiddenNodes: cluster,\r\n                type: type,\r\n                color: colorConverter(clustersColors[type]),\r\n            });\r\n        });\r\n\r\n        // Extract the theory lemmas\r\n        state.theoryLemmaMap = extractTheoryLemmas(state.proof, state.clustersInfos, true);\r\n    } else {\r\n        state.theoryLemmaMap = extractTheoryLemmas(state.proof, state.clustersInfos, false);\r\n    }\r\n\r\n    if (isJSON) {\r\n        state.view = proofJSON.view;\r\n        state.hiddenNodes = proofJSON.hiddenNodes;\r\n        state.visualInfo = proofJSON.visualInfo;\r\n    }\r\n    // Is .dot\r\n    else {\r\n        // Init the visual info\r\n        state.visualInfo = {};\r\n        state.proof.forEach((node) => {\r\n            state.visualInfo[node.id] = {\r\n                color: '#fff',\r\n                x: 0,\r\n                y: 0,\r\n                selected: false,\r\n            };\r\n        });\r\n\r\n        let size = state.proof.length;\r\n        clearHiddenNodes(state, { payload: null, type: 'string' });\r\n        state.clustersInfos.forEach(({ hiddenNodes, color }) => {\r\n            let index;\r\n            if (hiddenNodes.length > 1) {\r\n                state.hiddenNodes.push(hiddenNodes);\r\n                index = size++;\r\n            } else index = hiddenNodes[0];\r\n            state.visualInfo[index] = {\r\n                color: color,\r\n                x: 0,\r\n                y: 0,\r\n                selected: false,\r\n            };\r\n        });\r\n    }\r\n    // Set all the hidden nodes as hidden\r\n    state.hiddenNodes.forEach((hiddenNodesArray, i) => {\r\n        const piID = state.proof.length + i;\r\n        hiddenNodesArray.forEach((node) => (state.proof[node].isHidden = piID));\r\n    });\r\n}\r\n\r\nfunction hideNodes(state: Draft<ProofState>, action: PayloadAction<number[]>): void {\r\n    const size = state.proof.length + state.hiddenNodes.length;\r\n\r\n    const toHideNodes = action.payload.filter((id) => id > 0 && id < state.proof.length && !state.proof[id].isHidden);\r\n\r\n    const clusters = findNodesClusters(state.proof, toHideNodes);\r\n    // If there are clusters to hide\r\n    if (clusters.length) {\r\n        clusters.forEach((cluster) => state.hiddenNodes.push(cluster));\r\n\r\n        // Save the position of all nodes\r\n        const pos: { id: number; x: number; y: number }[] = [];\r\n        for (let id = 0; id < size; id++) {\r\n            pos.push({ id: id, x: state.visualInfo[id].x, y: state.visualInfo[id].y });\r\n        }\r\n\r\n        // Set the visual info for the new pi nodes\r\n        clusters.forEach((cluster, i) => {\r\n            const piID = size + i;\r\n            state.visualInfo[piID] = {\r\n                color: '#555',\r\n                x: 0,\r\n                y: 0,\r\n                selected: false,\r\n            };\r\n\r\n            cluster.forEach((nodeID) => (state.proof[nodeID].isHidden = piID));\r\n        });\r\n\r\n        // Add undo action\r\n        addUndo(new HideUndo([], pos, clusters.length));\r\n    }\r\n    // Unselect the selected nodes\r\n    toHideNodes.forEach((id) => (state.visualInfo[id].selected = false));\r\n}\r\n\r\nfunction foldAllDescendants(state: Draft<ProofState>, action: PayloadAction<number>): void {\r\n    const size = state.proof.length + state.hiddenNodes.length;\r\n    const hashMap: { [nodeID: number]: boolean } = {};\r\n    const newHidden = [action.payload, ...descendants(state.proof, action.payload)].filter((id) => {\r\n        let isTheFirst = true;\r\n        if (hashMap[id]) isTheFirst = false;\r\n        else hashMap[id] = true;\r\n\r\n        return id > 0 && id < state.proof.length && isTheFirst && !state.proof[id].isHidden;\r\n    });\r\n\r\n    // If the array is valid to become a pi node\r\n    if (newHidden.length > 1) {\r\n        state.hiddenNodes.push(newHidden);\r\n        newHidden.forEach((nodeID) => {\r\n            state.proof[nodeID].isHidden = size;\r\n            state.visualInfo[nodeID].selected = false;\r\n        });\r\n\r\n        // Set the visual info for the new pi node and the root node\r\n        state.visualInfo[action.payload].selected = false;\r\n        state.visualInfo[size] = {\r\n            color: '#555',\r\n            x: 0,\r\n            y: 0,\r\n            selected: false,\r\n        };\r\n\r\n        // Save the position of all nodes\r\n        const pos: { id: number; x: number; y: number }[] = [];\r\n        for (let id = 0; id < size; id++) {\r\n            pos.push({ id: id, x: state.visualInfo[id].x, y: state.visualInfo[id].y });\r\n        }\r\n\r\n        // Add undo action\r\n        addUndo(new FoldUndo([], pos));\r\n    }\r\n}\r\n\r\nfunction unfoldNodes(state: Draft<ProofState>, action: PayloadAction<number>): void {\r\n    const pi = action.payload;\r\n    const hiddenID = pi - state.proof.length;\r\n    const hiddens = state.hiddenNodes[hiddenID];\r\n    const size = state.proof.length + state.hiddenNodes.length;\r\n    const color = state.visualInfo[pi].color;\r\n\r\n    // Save all the positions\r\n    const pos: { id: number; x: number; y: number }[] = [];\r\n    for (let id = 0; id < size; id++) {\r\n        pos.push({ id: id, x: state.visualInfo[id].x, y: state.visualInfo[id].y });\r\n    }\r\n\r\n    // Unselect the hidden nodes and set their color equal to the pi node\r\n    const colors: { id: number; color: string }[] = [];\r\n    hiddens.forEach((id) => {\r\n        // Save all the hidden nodes colors\r\n        colors.push({ id: id, color: state.visualInfo[id].color });\r\n        // Signalize nodes are unhided\r\n        state.proof[id].isHidden = undefined;\r\n        state.visualInfo[id] = {\r\n            ...state.visualInfo[id],\r\n            color: color !== '#555' ? color : state.visualInfo[id].color,\r\n            selected: false,\r\n        };\r\n    });\r\n    colors.push({ id: pi, color: color });\r\n\r\n    // Remove the pi node array\r\n    state.hiddenNodes.splice(hiddenID, 1);\r\n\r\n    // Make sure the ids are realocated\r\n    for (let i = pi; i < size - 1; i++) {\r\n        state.visualInfo[i] = state.visualInfo[i + 1];\r\n    }\r\n    // Delete the last position\r\n    delete state.visualInfo[size - 1];\r\n\r\n    // Add undo action\r\n    addUndo(new UnfoldUndo([...hiddens], pos, colors));\r\n}\r\n\r\nfunction setVisualInfo(state: Draft<ProofState>, action: PayloadAction<ProofState['visualInfo']>): void {\r\n    state.visualInfo = action.payload;\r\n}\r\n\r\nfunction selectByArea(state: Draft<ProofState>, action: PayloadAction<ExternalCmdState['selectData']>): void {\r\n    const { upperL, lowerR } = action.payload;\r\n    const size = state.proof.length + state.hiddenNodes.length;\r\n    for (let i = 0; i < size; i++) {\r\n        const thisNode = state.visualInfo[i];\r\n        if (upperL.x <= thisNode.x && thisNode.x <= lowerR.x && upperL.y <= thisNode.y && thisNode.y <= lowerR.y) {\r\n            thisNode.selected = true;\r\n        }\r\n    }\r\n}\r\nfunction selectNodes(state: Draft<ProofState>, action: PayloadAction<number[]>): void {\r\n    const len = state.proof.length + state.hiddenNodes.length;\r\n    action.payload.forEach((id) => {\r\n        if (id >= 0 && id < len) {\r\n            state.visualInfo[id].selected = true;\r\n        }\r\n    });\r\n}\r\n\r\nfunction unselectNodes(state: Draft<ProofState>, action: PayloadAction<number[]>): void {\r\n    const len = Object.keys(state.visualInfo).length;\r\n    action.payload.forEach((id) => {\r\n        if (id >= 0 && id < len) {\r\n            state.visualInfo[id].selected = false;\r\n        }\r\n    });\r\n}\r\n\r\nfunction changeStyle(state: Draft<ProofState>, action: PayloadAction<ProofState['style']>): void {\r\n    switch (action.payload) {\r\n        case 'graph':\r\n            state.style = 'graph';\r\n            break;\r\n        case 'directory':\r\n            state.style = 'directory';\r\n            break;\r\n    }\r\n}\r\n\r\nfunction applyView(state: Draft<ProofState>, action: PayloadAction<ProofState['view']>): void {\r\n    // Delete all the pi nodes visual info\r\n    for (let i = state.proof.length; i < state.proof.length + state.hiddenNodes.length; i++) {\r\n        delete state.visualInfo[i];\r\n    }\r\n    clearUndo();\r\n\r\n    switch (action.payload) {\r\n        // View without hidden Nodes\r\n        case 'full':\r\n            if (state.hiddenNodes.length || state.view === 'colored-full') {\r\n                state.proof.forEach((node) => {\r\n                    state.visualInfo[node.id] = {\r\n                        color: '#fff',\r\n                        x: 0,\r\n                        y: 0,\r\n                        selected: false,\r\n                    };\r\n                });\r\n\r\n                clearHiddenNodes(state, { payload: null, type: 'string' });\r\n            }\r\n            state.view = 'full';\r\n            break;\r\n        // Cluster all the nodes in your respective group\r\n        case 'clustered':\r\n            // If there are clusters infos\r\n            if (state.clustersInfos.length) {\r\n                state.view = 'clustered';\r\n\r\n                clearHiddenNodes(state, { payload: null, type: 'string' });\r\n                let size = state.proof.length;\r\n\r\n                state.clustersInfos.forEach(({ hiddenNodes, color }) => {\r\n                    let index;\r\n                    if (hiddenNodes.length > 1) {\r\n                        state.hiddenNodes.push(hiddenNodes);\r\n                        hiddenNodes.forEach((node) => (state.proof[node].isHidden = size));\r\n                        index = size++;\r\n                    }\r\n                    // Cluster with 1 node\r\n                    else index = hiddenNodes[0];\r\n\r\n                    state.visualInfo[index] = {\r\n                        color: color,\r\n                        x: 0,\r\n                        y: 0,\r\n                        selected: false,\r\n                    };\r\n                });\r\n            }\r\n            break;\r\n        // Apply full view but apply the clustrer color\r\n        case 'colored-full':\r\n            state.view = 'colored-full';\r\n            clearHiddenNodes(state, { payload: null, type: 'string' });\r\n\r\n            // If there are clusters infos\r\n            if (state.clustersInfos.length) {\r\n                state.clustersInfos.forEach((cluster) => {\r\n                    cluster.hiddenNodes.forEach((node) => {\r\n                        state.visualInfo[node] = {\r\n                            color: cluster.color,\r\n                            x: 0,\r\n                            y: 0,\r\n                            selected: false,\r\n                        };\r\n                    });\r\n                });\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nfunction applyColor(state: Draft<ProofState>, action: PayloadAction<string>): void {\r\n    const colorMap: { [color: string]: number[] } = {};\r\n    let nodesLen = 0;\r\n    for (let nodeID = 0; nodeID < state.proof.length + state.hiddenNodes.length; nodeID++) {\r\n        const thisInfo = state.visualInfo[nodeID];\r\n        if (thisInfo.selected) {\r\n            if (colorMap[thisInfo.color]) colorMap[thisInfo.color].push(nodeID);\r\n            else {\r\n                colorMap[thisInfo.color] = [nodeID];\r\n            }\r\n            nodesLen++;\r\n\r\n            thisInfo.color = action.payload;\r\n            thisInfo.selected = false;\r\n        }\r\n    }\r\n    //\r\n    if (nodesLen) addUndo(new ColorUndo([], colorMap));\r\n}\r\n\r\nfunction moveNode(state: Draft<ProofState>, action: PayloadAction<{ id: number; x: number; y: number }>): void {\r\n    const { id, x, y } = action.payload;\r\n    addUndo(new MoveUndo([id], state.visualInfo[id].x, state.visualInfo[id].y));\r\n\r\n    // Update the position\r\n    state.visualInfo[id].x = x;\r\n    state.visualInfo[id].y = y;\r\n}\r\n\r\nfunction setSmt(state: Draft<ProofState>, action: PayloadAction<string>): void {\r\n    state.smt = action.payload;\r\n}\r\n\r\nfunction undo(state: Draft<ProofState>, action: PayloadAction<void>): void {\r\n    const topUndo = undoQueue.pop();\r\n    if (topUndo) {\r\n        const { nodes, name } = topUndo;\r\n        if (name === 'MoveUndo') {\r\n            const { x, y } = topUndo as MoveUndo;\r\n            state.visualInfo[nodes[0]] = {\r\n                ...state.visualInfo[nodes[0]],\r\n                x,\r\n                y,\r\n            };\r\n        } else if (name === 'ColorUndo') {\r\n            const { colorMap } = topUndo as ColorUndo;\r\n            Object.keys(colorMap).forEach((color) => {\r\n                colorMap[color].forEach((node) => (state.visualInfo[node].color = color));\r\n            });\r\n        } else if (name === 'FoldUndo') {\r\n            const { positions } = topUndo as FoldUndo;\r\n            // Make sure the node is not hidden\r\n            state.hiddenNodes[state.hiddenNodes.length - 1].forEach((node) => (state.proof[node].isHidden = undefined));\r\n            // Remove the old pi node\r\n            state.hiddenNodes.splice(state.hiddenNodes.length - 1, 1);\r\n            delete state.visualInfo[state.proof.length + state.hiddenNodes.length];\r\n            // Put all the nodes in the older position\r\n            positions.forEach(({ id, x, y }) => {\r\n                state.visualInfo[id].x = x;\r\n                state.visualInfo[id].y = y;\r\n            });\r\n        } else if (name === 'HideUndo') {\r\n            const { positions, nPiNodes } = topUndo as HideUndo;\r\n            // Remove the old pi nodes\r\n            for (let len = state.proof.length + state.hiddenNodes.length, i = 0; i < nPiNodes; i++) {\r\n                delete state.visualInfo[--len];\r\n                // Make sure the node is not hidden\r\n                state.hiddenNodes[nPiNodes - i - 1].forEach((node) => (state.proof[node].isHidden = undefined));\r\n            }\r\n            state.hiddenNodes.splice(state.hiddenNodes.length - nPiNodes, nPiNodes);\r\n\r\n            // Put all the nodes in the older position\r\n            positions.forEach(({ id, x, y }) => {\r\n                state.visualInfo[id].x = x;\r\n                state.visualInfo[id].y = y;\r\n            });\r\n        } else if (name === 'UnfoldUndo') {\r\n            const { positions, colors } = topUndo as UnfoldUndo;\r\n            let i;\r\n            // Create the old pi node in the right position\r\n            const oldPiNum = colors[colors.length - 1].id;\r\n            const newSize = state.proof.length + state.hiddenNodes.length;\r\n            state.hiddenNodes.splice(oldPiNum - state.proof.length, 0, nodes);\r\n            // Make sure all the hidden nodes will be signalized as hidden\r\n            nodes.forEach((nodeID) => (state.proof[nodeID].isHidden = oldPiNum));\r\n            // Shift the pi nodes visual info\r\n            for (i = newSize; i > oldPiNum; i--) {\r\n                state.visualInfo[i] = state.visualInfo[i - 1];\r\n            }\r\n            state.visualInfo[i] = { x: 0, y: 0, color: '', selected: false };\r\n            // Put all the nodes in the older position\r\n            positions.forEach(({ id, x, y }) => {\r\n                state.visualInfo[id].x = x;\r\n                state.visualInfo[id].y = y;\r\n            });\r\n            // Set the old color of all the hidden nodes\r\n            colors.forEach(({ id, color }) => {\r\n                state.visualInfo[id].color = color;\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst reducers = {\r\n    process,\r\n    hideNodes,\r\n    foldAllDescendants,\r\n    unfoldNodes,\r\n    setVisualInfo,\r\n    selectByArea,\r\n    selectNodes,\r\n    unselectNodes,\r\n    changeStyle,\r\n    applyView,\r\n    applyColor,\r\n    moveNode,\r\n    setSmt,\r\n    undo,\r\n};\r\n\r\nexport default reducers;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport { piNodeChildren, piNodeParents, groupPiNodeDependencies } from './auxi';\r\nimport { NodeInterface, ProofState } from '../../../interfaces/interfaces';\r\nimport { ClusterKind } from '../../../interfaces/enum';\r\nimport reducers from './reducers';\r\n\r\nconst initialState: ProofState = {\r\n    proof: [],\r\n    view: 'full',\r\n    style: 'graph',\r\n    hiddenNodes: [],\r\n    letMap: {},\r\n    theoryLemmaMap: [],\r\n    visualInfo: [],\r\n    clustersInfos: [],\r\n    smt: '',\r\n};\r\n\r\nexport const proofSlice = createSlice({\r\n    name: 'proof',\r\n    initialState,\r\n    reducers: reducers,\r\n});\r\n\r\nexport const {\r\n    process,\r\n    hideNodes,\r\n    foldAllDescendants,\r\n    unfoldNodes,\r\n    setVisualInfo,\r\n    selectByArea,\r\n    selectNodes,\r\n    unselectNodes,\r\n    changeStyle,\r\n    applyView,\r\n    applyColor,\r\n    moveNode,\r\n    setSmt,\r\n    undo,\r\n} = proofSlice.actions;\r\n\r\nexport const selectProof = (state: RootState): NodeInterface[] => {\r\n    let proof = state.proof.proof;\r\n    const hiddenNodes = state.proof.hiddenNodes;\r\n\r\n    hiddenNodes.forEach((hiddenNodesArray) => {\r\n        const dependencies: { [parentId: number]: number[] } = {};\r\n        const children = piNodeChildren(proof, hiddenNodesArray);\r\n        const parents = piNodeParents(proof, hiddenNodesArray, dependencies);\r\n        const piNodeDependencies = groupPiNodeDependencies(proof, hiddenNodesArray);\r\n\r\n        const piNodeId = proof.length;\r\n        proof = proof.concat({\r\n            id: piNodeId,\r\n            conclusion: '∴',\r\n            rule: 'π',\r\n            args: '',\r\n            children: children,\r\n            parents: parents,\r\n            hiddenNodes: hiddenNodesArray.map((hiddenNode) => proof[hiddenNode]),\r\n            descendants: 1,\r\n            dependencies: piNodeDependencies,\r\n            clusterType: ClusterKind.NONE,\r\n        });\r\n\r\n        const piNode = proof[piNodeId];\r\n\r\n        children.forEach(\r\n            (childId) =>\r\n                (proof[childId] = {\r\n                    ...proof[childId],\r\n                    parents: proof[childId].parents\r\n                        .concat([piNodeId])\r\n                        .filter((proofNode) => hiddenNodesArray.indexOf(proofNode) === -1),\r\n                }),\r\n        );\r\n        parents.forEach(\r\n            (parentId) =>\r\n                (proof[parentId] = {\r\n                    ...proof[parentId],\r\n                    children: proof[parentId].children\r\n                        .concat([piNodeId])\r\n                        .filter((proofNode) => hiddenNodesArray.indexOf(proofNode) === -1),\r\n                }),\r\n        );\r\n\r\n        // Set the dependencies array of each parent that has deps and remove\r\n        //  the children that are dependencies\r\n        Object.keys(dependencies).forEach((parent) => {\r\n            const parentId = Number(parent);\r\n            proof[parentId] = {\r\n                ...proof[parentId],\r\n                children: proof[parentId].children.filter((c) => dependencies[parentId].indexOf(c) === -1),\r\n                dependencies: [...proof[parentId].dependencies, { piId: piNodeId, depsId: dependencies[parentId] }],\r\n            };\r\n        });\r\n\r\n        // Get the high hierarchy nodes in this pi node\r\n        const highHierarchyNodes = hiddenNodesArray?.filter((node) =>\r\n            proof[node].parents.every((parentId) => piNode.parents.indexOf(parentId) !== -1),\r\n        );\r\n\r\n        // Get the conclusion array\r\n        const conclusion = highHierarchyNodes.map((node) => ' ' + proof[node].conclusion);\r\n        piNode.conclusion = conclusion.length > 1 ? `[${conclusion} ]` : `${conclusion}`;\r\n\r\n        // Get the rule array\r\n        const rule = highHierarchyNodes.map((node) => ' ' + proof[node].rule);\r\n        piNode.rule = rule.length > 1 ? `[${rule} ]` : `${rule} `;\r\n\r\n        // Set the descendants number\r\n        piNode.descendants = piNode.children.reduce(\r\n            (ac: number, childID) => ((ac += proof[childID].descendants), ac),\r\n            1,\r\n        );\r\n    });\r\n\r\n    proof = proof.filter((proofNode) =>\r\n        hiddenNodes.every((hiddenNodesArray) => hiddenNodesArray.indexOf(proofNode.id) === -1),\r\n    );\r\n\r\n    return proof;\r\n};\r\n\r\nexport const selectOriginalProof = (state: RootState): NodeInterface[] => {\r\n    return state.proof.proof;\r\n};\r\n\r\nexport const selectView = (state: RootState): ProofState['view'] => {\r\n    return state.proof.view;\r\n};\r\n\r\nexport const selectStyle = (state: RootState): 'graph' | 'directory' => {\r\n    return state.proof.style;\r\n};\r\n\r\nexport const selectLetMap = (state: RootState): { [Key: string]: string } => {\r\n    return state.proof.letMap;\r\n};\r\n\r\nexport const selectTheoryLemmas = (state: RootState): ProofState['theoryLemmaMap'] => {\r\n    return state.proof.theoryLemmaMap;\r\n};\r\n\r\nexport const selectVisualInfo = (state: RootState): ProofState['visualInfo'] => {\r\n    if (state.proof.proof.length) return state.proof.visualInfo;\r\n    // If there is no proof node\r\n    return { 0: { color: '#555', x: 0, y: 0, selected: false } };\r\n};\r\n\r\nexport const selectHiddenNodes = (state: RootState): number[][] => {\r\n    return state.proof.hiddenNodes;\r\n};\r\n\r\nexport const selectNodeClusters = (state: RootState): ProofState['clustersInfos'] => {\r\n    return state.proof.clustersInfos;\r\n};\r\n\r\nexport const selectSmt = (state: RootState): ProofState['smt'] => {\r\n    return state.proof.smt;\r\n};\r\n\r\nexport default proofSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport { ThemeState } from '../../../interfaces/interfaces';\r\n\r\nconst initialState: ThemeState = {\r\n    value: true,\r\n};\r\n\r\nexport const themeSlice = createSlice({\r\n    name: 'theme',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        toggle: (state) => {\r\n            state.value = !state.value;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { toggle } = themeSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice theme. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectTheme = (state: RootState): boolean => state.theme.value;\r\n\r\nexport default themeSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport { ExternalCmdState, SelectionSquare } from '../../../interfaces/interfaces';\r\n\r\nconst initialState: ExternalCmdState = {\r\n    findData: {\r\n        nodeToFind: -1,\r\n        findOption: false,\r\n    },\r\n    renderData: {\r\n        count: 0,\r\n        fileChanged: false,\r\n    },\r\n    spinner: 'off',\r\n    selectData: { upperL: { x: -1, y: -1 }, lowerR: { x: -1, y: -1 } },\r\n};\r\n\r\nexport const externalCmd = createSlice({\r\n    name: 'externalCmd',\r\n    initialState,\r\n    reducers: {\r\n        findNode: (state, action: PayloadAction<{ nodeId: number; option: boolean }>) => {\r\n            state.findData = { nodeToFind: action.payload.nodeId, findOption: action.payload.option };\r\n        },\r\n        reRender: (state) => {\r\n            state.renderData.count = 0;\r\n        },\r\n        addRenderCount: (state) => {\r\n            state.renderData.count++;\r\n        },\r\n        blockRender: (state) => {\r\n            state.renderData.count = 2;\r\n        },\r\n        allowRenderNewFile: (state) => {\r\n            state.renderData.fileChanged = true;\r\n        },\r\n        blockRenderNewFile: (state) => {\r\n            state.renderData.fileChanged = false;\r\n        },\r\n        setSpinner: (state, action: PayloadAction<'off' | 'cvc5' | 'render'>) => {\r\n            state.spinner = action.payload;\r\n        },\r\n        setSelectArea: (state, action: PayloadAction<SelectionSquare>) => {\r\n            state.selectData = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    findNode,\r\n    reRender,\r\n    addRenderCount,\r\n    blockRender,\r\n    allowRenderNewFile,\r\n    blockRenderNewFile,\r\n    setSpinner,\r\n    setSelectArea,\r\n} = externalCmd.actions;\r\n\r\nexport const selectFindData = (state: RootState): { nodeToFind: number; findOption: boolean } =>\r\n    state.externalCmd.findData;\r\n\r\nexport const selectRenderData = (state: RootState): { count: number; fileChanged: boolean } =>\r\n    state.externalCmd.renderData;\r\n\r\nexport const selectSpinner = (state: RootState): ExternalCmdState['spinner'] => state.externalCmd.spinner;\r\n\r\nexport const selectSelectData = (state: RootState): ExternalCmdState['selectData'] => state.externalCmd.selectData;\r\n\r\nexport default externalCmd.reducer;\r\n","const examples: { [ex: string]: { dot: string; smt: string } } = {\r\n    ex1: {\r\n        dot: 'unsat\\r\\ndigraph proof {\\r\\n\\trankdir=\"BT\";\\r\\n\\tnode [shape=record];\\r\\n\\tcomment=\"{\\\\\"letMap\\\\\" : {\\\\\"let1\\\\\" : \\\\\"(f b)\\\\\", \\\\\"let2\\\\\" : \\\\\"(= (f a) let1)\\\\\", \\\\\"let3\\\\\" : \\\\\"(not let2)\\\\\", \\\\\"let4\\\\\" : \\\\\"(or p let3)\\\\\", \\\\\"let5\\\\\" : \\\\\"(not p)\\\\\", \\\\\"let6\\\\\" : \\\\\"(= a b)\\\\\", \\\\\"let7\\\\\" : \\\\\"(= let1 let1)\\\\\", \\\\\"let8\\\\\" : \\\\\"(not let7)\\\\\", \\\\\"let9\\\\\" : \\\\\"(not true)\\\\\", \\\\\"let10\\\\\" : \\\\\"(= p false)\\\\\"}}\";\\r\\n\\t0 [ label = \"{(not (and let6 let5 let4))|SCOPE :args [ let6, let5, let4 ]}\", comment = \"{\\\\\"subProofQty\\\\\":21}\" ];\\r\\n\\t1 [ label = \"{false|EQ_RESOLVE}\", comment = \"{\\\\\"subProofQty\\\\\":20}\" ];\\r\\n\\t2 [ label = \"{let3|CHAIN_RESOLUTION :args [ true, p ]}\", comment = \"{\\\\\"subProofQty\\\\\":3}\" ];\\r\\n\\t3 [ label = \"{let4|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t3 -> 2;\\r\\n\\t4 [ label = \"{let5|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t4 -> 2;\\r\\n\\t2 -> 1;\\r\\n\\t5 [ label = \"{(= let3 false)|TRANS}\", comment = \"{\\\\\"subProofQty\\\\\":16}\" ];\\r\\n\\t6 [ label = \"{(= let3 let8)|CONG :args [ not ]}\", comment = \"{\\\\\"subProofQty\\\\\":11}\" ];\\r\\n\\t7 [ label = \"{(= let2 let7)|CONG :args [ = ]}\", comment = \"{\\\\\"subProofQty\\\\\":10}\" ];\\r\\n\\t8 [ label = \"{let2|CONG :args [ f ]}\", comment = \"{\\\\\"subProofQty\\\\\":8}\" ];\\r\\n\\t9 [ label = \"{let6|AND_ELIM :args [ 1 ]}\", comment = \"{\\\\\"subProofQty\\\\\":7}\" ];\\r\\n\\t10 [ label = \"{(and let10 let6)|AND_INTRO}\", comment = \"{\\\\\"subProofQty\\\\\":6}\" ];\\r\\n\\t11 [ label = \"{let10|EQ_RESOLVE}\", comment = \"{\\\\\"subProofQty\\\\\":4}\" ];\\r\\n\\t4 -> 11;\\r\\n\\t12 [ label = \"{(= let5 let10)|SYMM}\", comment = \"{\\\\\"subProofQty\\\\\":2}\" ];\\r\\n\\t13 [ label = \"{(= let10 let5)|THEORY_REWRITE :args [ BOOL ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t13 -> 12;\\r\\n\\t12 -> 11;\\r\\n\\t11 -> 10;\\r\\n\\t14 [ label = \"{let6|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t14 -> 10;\\r\\n\\t10 -> 9;\\r\\n\\t9 -> 8;\\r\\n\\t8 -> 7;\\r\\n\\t15 [ label = \"{let7|REFL}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t15 -> 7;\\r\\n\\t7 -> 6;\\r\\n\\t6 -> 5;\\r\\n\\t16 [ label = \"{(= let8 false)|TRANS}\", comment = \"{\\\\\"subProofQty\\\\\":4}\" ];\\r\\n\\t17 [ label = \"{(= let8 let9)|CONG :args [ not ]}\", comment = \"{\\\\\"subProofQty\\\\\":2}\" ];\\r\\n\\t18 [ label = \"{(= let7 true)|THEORY_REWRITE :args [ UF ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t18 -> 17;\\r\\n\\t17 -> 16;\\r\\n\\t19 [ label = \"{(= let9 false)|THEORY_REWRITE :args [ BOOL ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t19 -> 16;\\r\\n\\t16 -> 5;\\r\\n\\t5 -> 1;\\r\\n\\t1 -> 0;\\r\\n\\r\\n}\\r\\n',\r\n        smt: `(set-logic QF_UF)\\n(set-info :category \"crafted\")\\n(set-info :status unsat)\\n(declare-sort U 0)\\n(declare-fun a () U)\\n(declare-fun b () U)\\n(declare-fun f (U) U)\\n(declare-fun p () Bool)\\n(assert (= a b))\\n(assert (not p))\\n(assert (or p (not (= (f a) (f b)))))\\n(check-sat)\\n(exit)`,\r\n    },\r\n    ex2: {\r\n        dot: 'unsat\\r\\ndigraph proof {\\r\\n\\trankdir=\"BT\";\\r\\n\\tnode [shape=record];\\r\\n\\tcomment=\"{\\\\\"letMap\\\\\" : {\\\\\"let1\\\\\" : \\\\\"(= (f a) (f b))\\\\\", \\\\\"let2\\\\\" : \\\\\"(not let1)\\\\\", \\\\\"let3\\\\\" : \\\\\"(or (not p3) let2)\\\\\", \\\\\"let4\\\\\" : \\\\\"(and p2 p3)\\\\\", \\\\\"let5\\\\\" : \\\\\"(or (not p1) let4)\\\\\", \\\\\"let6\\\\\" : \\\\\"(and p1 true)\\\\\", \\\\\"let7\\\\\" : \\\\\"(= a b)\\\\\", \\\\\"let8\\\\\" : \\\\\"(not let4)\\\\\", \\\\\"let9\\\\\" : \\\\\"(not let7)\\\\\"}}\";\\r\\n\\t0 [ label = \"{(not (and let7 let6 let5 let3))|SCOPE :args [ let7, let6, let5, let3 ]}\", comment = \"{\\\\\"subProofQty\\\\\":20}\" ];\\r\\n\\t1 [ label = \"{false|CHAIN_RESOLUTION :args [ true, let1, false, let7 ]}\", comment = \"{\\\\\"subProofQty\\\\\":19}\" ];\\r\\n\\t2 [ label = \"{(or let1 let9)|REORDERING}\", comment = \"{\\\\\"subProofQty\\\\\":7}\" ];\\r\\n\\t3 [ label = \"{(or let9 let1)|IMPLIES_ELIM}\", comment = \"{\\\\\"subProofQty\\\\\":6}\" ];\\r\\n\\t4 [ label = \"{(=\\\\> let7 let1)|SCOPE :args [ let7 ]}\", comment = \"{\\\\\"subProofQty\\\\\":5}\" ];\\r\\n\\t5 [ label = \"{let1|CONG :args [ f ]}\", comment = \"{\\\\\"subProofQty\\\\\":4}\" ];\\r\\n\\t6 [ label = \"{let7|SYMM}\", comment = \"{\\\\\"subProofQty\\\\\":3}\" ];\\r\\n\\t7 [ label = \"{(= b a)|SYMM}\", comment = \"{\\\\\"subProofQty\\\\\":2}\" ];\\r\\n\\t8 [ label = \"{let7|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t8 -> 7;\\r\\n\\t7 -> 6;\\r\\n\\t6 -> 5;\\r\\n\\t5 -> 4;\\r\\n\\t4 -> 3;\\r\\n\\t3 -> 2;\\r\\n\\t2 -> 1;\\r\\n\\t9 [ label = \"{let2|CHAIN_RESOLUTION :args [ false, p3 ]}\", comment = \"{\\\\\"subProofQty\\\\\":10}\" ];\\r\\n\\t10 [ label = \"{let3|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t10 -> 9;\\r\\n\\t11 [ label = \"{p3|CHAIN_RESOLUTION :args [ false, let4 ]}\", comment = \"{\\\\\"subProofQty\\\\\":8}\" ];\\r\\n\\t12 [ label = \"{(or p3 let8)|REORDERING}\", comment = \"{\\\\\"subProofQty\\\\\":2}\" ];\\r\\n\\t13 [ label = \"{(or let8 p3)|CNF_AND_POS :args [ let4, 1 ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t13 -> 12;\\r\\n\\t12 -> 11;\\r\\n\\t14 [ label = \"{let4|CHAIN_RESOLUTION :args [ false, p1 ]}\", comment = \"{\\\\\"subProofQty\\\\\":5}\" ];\\r\\n\\t15 [ label = \"{let5|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t15 -> 14;\\r\\n\\t16 [ label = \"{p1|EQ_RESOLVE}\", comment = \"{\\\\\"subProofQty\\\\\":3}\" ];\\r\\n\\t17 [ label = \"{let6|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t17 -> 16;\\r\\n\\t18 [ label = \"{(= let6 p1)|THEORY_REWRITE :args [ BOOL ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t18 -> 16;\\r\\n\\t16 -> 14;\\r\\n\\t14 -> 11;\\r\\n\\t11 -> 9;\\r\\n\\t9 -> 1;\\r\\n\\t19 [ label = \"{let7|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t19 -> 1;\\r\\n\\t1 -> 0;\\r\\n\\r\\n\\tsubgraph cluster_SAT {\\r\\n\\t\\tlabel=\"SAT\"\\r\\n\\t\\tbgcolor=\"purple\"\\r\\n\\t\\t1 2 9 11 12 14 \\r\\n\\t};\\r\\n\\tsubgraph cluster_CNF {\\r\\n\\t\\tlabel=\"CNF\"\\r\\n\\t\\tbgcolor=\"yellow\"\\r\\n\\t\\t3 13 \\r\\n\\t};\\r\\n\\tsubgraph cluster_TL {\\r\\n\\t\\tlabel=\"TL\"\\r\\n\\t\\tbgcolor=\"green\"\\r\\n\\t\\t4 5 6 7 8 \\r\\n\\t};\\r\\n\\tsubgraph cluster_PP {\\r\\n\\t\\tlabel=\"PP\"\\r\\n\\t\\tbgcolor=\"brown\"\\r\\n\\t\\t16 18 \\r\\n\\t};\\r\\n\\tsubgraph cluster_IN {\\r\\n\\t\\tlabel=\"IN\"\\r\\n\\t\\tbgcolor=\"blue\"\\r\\n\\t\\t10 15 17 19 \\r\\n\\t};\\r\\n}\\r\\n',\r\n        smt: `(set-logic QF_UF)\\n\\n(declare-sort U 0)\\n\\n(declare-const p1 Bool)\\n(declare-const p2 Bool)\\n(declare-const p3 Bool)\\n\\n(declare-const a U)\\n(declare-const b U)\\n(declare-fun f (U) U)\\n\\n(assert (= a b))\\n(assert (and p1 true))\\n(assert (or (not p1) (and p2 p3)))\\n(assert (or (not p3) (not (= (f a) (f b)))))\\n\\n(check-sat)`,\r\n    },\r\n};\r\n\r\nexport default examples;\r\n","import { KonvaEventObject } from 'konva/types/Node';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Label, Text, Tag, Group, Circle, Arrow } from 'react-konva';\r\nimport { NodeProps } from '../../../interfaces/interfaces';\r\n\r\nfunction getTextWidth(text: string, font: string): number {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    let size = 0;\r\n    if (context) {\r\n        context.font = font;\r\n        size = context.measureText(text).width;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport function textColorFromBg(bgColor: string) {\r\n    const r = parseInt(bgColor.substring(0, 2), 16);\r\n    const g = parseInt(bgColor.substring(2, 4), 16);\r\n    const b = parseInt(bgColor.substring(4, 6), 16);\r\n    return r * 0.299 + g * 0.587 + b * 0.114 > 150 ? '#000000' : '#ffffff';\r\n}\r\n\r\nexport function sixDigitColor(bgColor: string): string {\r\n    if (bgColor.charAt(0) === '#') {\r\n        if (bgColor.length == 4) {\r\n            return bgColor\r\n                .substring(1, 7)\r\n                .split('')\r\n                .map((c) => c + c)\r\n                .join('');\r\n        } else if (bgColor.length == 7) {\r\n            return bgColor.substring(1, 7);\r\n        }\r\n    } else {\r\n        if (bgColor.length == 3) {\r\n            return bgColor\r\n                .split('')\r\n                .map((c) => c + c)\r\n                .join('');\r\n        } else if (bgColor.length == 6) {\r\n            return bgColor;\r\n        }\r\n    }\r\n    return '000000';\r\n}\r\n\r\nconst Node: React.FC<NodeProps> = (props: NodeProps): JSX.Element => {\r\n    const {\r\n        id,\r\n        conclusion,\r\n        rule,\r\n        args,\r\n        x,\r\n        y,\r\n        nHided,\r\n        nDescendants,\r\n        hiddenNodes,\r\n        dependencies,\r\n        selected,\r\n        color,\r\n        setNodeOnFocus,\r\n        toggleNodeSelection,\r\n        updateNodePosition,\r\n        openDrawer,\r\n        onDragEnd,\r\n        createTree,\r\n    } = props;\r\n\r\n    const handleClick = (e: KonvaEventObject<MouseEvent>): void => {\r\n        if (e.evt.button === 0) {\r\n            if (e.evt.shiftKey) {\r\n                toggleNodeSelection(id);\r\n            } else {\r\n                openDrawer(\r\n                    {\r\n                        rule: rule,\r\n                        args: args,\r\n                        conclusion: conclusion,\r\n                        nHided: nHided,\r\n                        nDescendants: nDescendants - (rule === 'π' ? 0 : 0),\r\n                        hiddenNodes: hiddenNodes,\r\n                        dependencies: dependencies,\r\n                    },\r\n                    createTree(id),\r\n                );\r\n            }\r\n        } else if (e.evt.button === 2) {\r\n            setNodeOnFocus(id);\r\n            const menuNode = document.getElementById('menu');\r\n            if (menuNode) {\r\n                menuNode.style.top = `${e.evt.clientY}px`;\r\n                menuNode.style.left = `${e.evt.clientX}px`;\r\n                menuNode.style.display = 'initial';\r\n                window.addEventListener('click', () => {\r\n                    menuNode.style.display = 'none';\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const depSize = 25,\r\n        depLineSize = 25;\r\n    const bgColor = color;\r\n\r\n    const style = {\r\n        tag: {\r\n            fill: bgColor,\r\n            stroke: selected ? 'red' : 'black',\r\n            strokeWidth: selected ? 3 : 1,\r\n        },\r\n        get dep() {\r\n            return { ...this.tag };\r\n        },\r\n        text: {\r\n            align: 'center',\r\n            fill: textColorFromBg(sixDigitColor(bgColor)),\r\n            fontSize: 15,\r\n            height: 35,\r\n            padding: 10,\r\n            width: 300,\r\n        },\r\n        get depText() {\r\n            return {\r\n                ...this.text,\r\n                padding: 0,\r\n                width: depSize * 2,\r\n            };\r\n        },\r\n    };\r\n    const infos = {\r\n        nHided: nHided ? `#hidden: ${nHided}` : '',\r\n        nDescendants: ` #descendants: ${nDescendants}`,\r\n        rule: nHided ? 'π' : rule,\r\n        dependencies: dependencies.length === 1 ? String(dependencies[0].piId) : 'π',\r\n    };\r\n\r\n    const [idSize, setIdSize] = useState(50);\r\n    const [descendantSize, setDescendantSize] = useState(style.text.width - 50);\r\n\r\n    // Component Did Mount\r\n    useEffect(() => {\r\n        const font = `${style.text.fontSize}px -apple-system, \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Open Sans\", \"Helvetica Neue\", \"Icons16\", sans-serif`;\r\n        const calc = getTextWidth(id.toString(), font) + style.text.padding * 3;\r\n        setIdSize(calc);\r\n        setDescendantSize(style.text.width - calc);\r\n    }, []);\r\n\r\n    return (\r\n        <Group\r\n            draggable\r\n            id={id.toString()}\r\n            key={id}\r\n            onDragMove={(e) => {\r\n                updateNodePosition(id, e.target.attrs.x, e.target.attrs.y);\r\n            }}\r\n            onDragEnd={() => onDragEnd(id)}\r\n            x={x}\r\n            y={y}\r\n            onClick={handleClick}\r\n        >\r\n            <Label x={0} y={0}>\r\n                <Tag {...style.tag} />\r\n                <Text {...style.text} text={conclusion} />\r\n            </Label>\r\n            <Label x={0} y={35}>\r\n                <Tag {...style.tag} />\r\n                <Text {...style.text} text={infos.rule} />\r\n            </Label>\r\n            <Label x={0} y={70} {...{ align: 'right' }}>\r\n                <Tag {...style.tag} />\r\n                <Text {...{ ...style.text, width: idSize }} text={id.toString()} />\r\n            </Label>\r\n            <Label x={idSize} y={70}>\r\n                <Tag {...style.tag} />\r\n                <Text {...{ ...style.text, width: descendantSize }} text={infos.nHided + infos.nDescendants} />\r\n            </Label>\r\n            {dependencies.length ? (\r\n                <Label x={300} y={0}>\r\n                    <Arrow strokeWidth={1} stroke=\"black\" fill=\"black\" points={[depLineSize, 53, 0, 53]} />\r\n                    <Circle x={depLineSize + depSize} y={53} radius={depSize} {...style.dep}></Circle>\r\n                    <Label x={depLineSize} y={45}>\r\n                        <Text {...style.depText} text={infos.dependencies} />\r\n                    </Label>\r\n                </Label>\r\n            ) : null}\r\n        </Group>\r\n    );\r\n};\r\n\r\nexport default Node;\r\n","import React from 'react';\r\nimport '../../interfaces/interfaces';\r\nimport { NodeInterface, ProofState } from '../../interfaces/interfaces';\r\nimport { textColorFromBg, sixDigitColor } from '../VisualizerStage/Canvas/VisualizerNode';\r\n\r\ninterface Point {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface ArrowProps {\r\n    origin: Point;\r\n    end: Point;\r\n}\r\n\r\nconst arrowTriangleH = 15;\r\nconst arrowTriangleW = 5;\r\nconst fontSize = 15;\r\nconst fontFamily = 'Arial';\r\n\r\nconst Arrow: React.FC<ArrowProps> = ({ origin, end }: ArrowProps) => {\r\n    const h = origin.y - end.y;\r\n    const w = end.x - origin.x;\r\n    const l = Math.sqrt(h ** 2 + w ** 2);\r\n\r\n    const sin = h / l;\r\n    const cos = w / l;\r\n\r\n    const axeX = end.x - arrowTriangleH * cos;\r\n    const axeY = end.y + arrowTriangleH * sin;\r\n\r\n    const alpha = Math.atan2(h, w) + Math.PI / 2;\r\n    const sin1 = Math.sin(alpha);\r\n    const cos1 = Math.cos(alpha);\r\n\r\n    const p1X = axeX - arrowTriangleW * cos1;\r\n    const p1Y = axeY + arrowTriangleW * sin1;\r\n\r\n    const p2X = axeX + arrowTriangleW * cos1;\r\n    const p2Y = axeY - arrowTriangleW * sin1;\r\n\r\n    return (\r\n        <>\r\n            <path d={`M${end.x} ${end.y} L${p1X} ${p1Y} L${p2X} ${p2Y} Z`} />\r\n            <line x1={origin.x} y1={origin.y} x2={end.x} y2={end.y} strokeWidth=\"1\" stroke=\"black\" />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction CreateNode(node: NodeInterface, visualInfo: ProofState['visualInfo'], limits: [number, number]): JSX.Element {\r\n    const { color, x, y } = visualInfo[node.id];\r\n    const [smallestX, smallestY] = limits;\r\n    const newX = x - smallestX;\r\n    const newY = y - smallestY;\r\n\r\n    const fill = textColorFromBg(sixDigitColor(color));\r\n\r\n    const nHided = node.hiddenNodes ? node.hiddenNodes.length : 0;\r\n    const infos = {\r\n        nHided: nHided ? `#hidden: ${nHided}` : '',\r\n        nDescendants: ` #descendants: ${node.descendants - 1}`,\r\n        rule: nHided ? 'π' : node.rule,\r\n        dependencies: node.dependencies.length === 1 ? String(node.dependencies[0].piId) : 'π',\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {node.children.map((child, id) => {\r\n                return (\r\n                    <Arrow\r\n                        key={id}\r\n                        origin={{\r\n                            x: visualInfo[child].x - smallestX + 150,\r\n                            y: visualInfo[child].y - smallestY,\r\n                        }}\r\n                        end={{ x: newX + 150, y: newY + 105 }}\r\n                    />\r\n                );\r\n            })}\r\n            <rect x={newX + 0} y={newY + 0} width={300} height={35} strokeWidth=\"1\" fill={color} stroke=\"black\" />\r\n            <rect x={newX + 0} y={newY + 35} width={300} height={35} strokeWidth=\"1\" fill={color} stroke=\"black\" />\r\n            <rect x={newX + 0} y={newY + 70} width={50} height={35} strokeWidth=\"1\" fill={color} stroke=\"black\" />\r\n            <rect x={newX + 50} y={newY + 70} width={250} height={35} strokeWidth=\"1\" fill={color} stroke=\"black\" />\r\n            <text\r\n                x={newX + 150}\r\n                y={newY + 21}\r\n                fontSize={fontSize}\r\n                fill={fill}\r\n                dominantBaseline=\"middle\"\r\n                textAnchor=\"middle\"\r\n                fontFamily={fontFamily}\r\n            >\r\n                {node.conclusion}\r\n            </text>\r\n            <text\r\n                x={newX + 150}\r\n                y={newY + 56}\r\n                fontSize={fontSize}\r\n                fill={fill}\r\n                dominantBaseline=\"middle\"\r\n                textAnchor=\"middle\"\r\n                fontFamily={fontFamily}\r\n            >\r\n                {infos.rule}\r\n            </text>\r\n            <text\r\n                x={newX + 25}\r\n                y={newY + 91}\r\n                fontSize={fontSize}\r\n                fill={fill}\r\n                dominantBaseline=\"middle\"\r\n                textAnchor=\"middle\"\r\n                fontFamily={fontFamily}\r\n            >\r\n                {node.id.toString()}\r\n            </text>\r\n            <text\r\n                x={newX + 175}\r\n                y={newY + 91}\r\n                fontSize={fontSize}\r\n                fill={fill}\r\n                dominantBaseline=\"middle\"\r\n                textAnchor=\"middle\"\r\n                fontFamily={fontFamily}\r\n            >\r\n                {infos.nHided + infos.nDescendants}\r\n            </text>\r\n            {node.dependencies.length ? (\r\n                <>\r\n                    <circle cx={newX + 350} cy={newY + 53} r={25} strokeWidth=\"1\" fill={color} stroke=\"black\" />\r\n                    <Arrow origin={{ x: newX + 325, y: newY + 53 }} end={{ x: newX + 300, y: newY + 53 }} />\r\n                    <text\r\n                        x={newX + 350}\r\n                        y={newY + 53}\r\n                        fontSize={fontSize}\r\n                        fill={fill}\r\n                        dominantBaseline=\"middle\"\r\n                        textAnchor=\"middle\"\r\n                        fontFamily={fontFamily}\r\n                    >\r\n                        {infos.dependencies}\r\n                    </text>\r\n                </>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ConvertToSVG(proof: NodeInterface[], visualInfo: ProofState['visualInfo']): JSX.Element {\r\n    let [biggestX, biggestY, smallestX, smallestY] = [0, 0, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER];\r\n\r\n    // Find the biggest and smallest dimensions\r\n    const keys = Object.keys(visualInfo);\r\n    keys.forEach((key) => {\r\n        const { x, y } = visualInfo[Number(key)];\r\n        //\r\n        if (x > biggestX) biggestX = x;\r\n        if (x < smallestX) smallestX = x;\r\n        //\r\n        if (y > biggestY) biggestY = y;\r\n        if (y < smallestY) smallestY = y;\r\n    });\r\n\r\n    return (\r\n        <svg\r\n            id=\"svg-converted\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={{ position: 'relative', top: '5px', left: '5px', overflow: 'visible' }}\r\n            width={biggestX - smallestX + 420}\r\n            height={biggestY - smallestY + 220}\r\n        >\r\n            {proof.map((node) => {\r\n                return CreateNode(node, visualInfo, [smallestX, smallestY]);\r\n            })}\r\n        </svg>\r\n    );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { renderToStaticMarkup } from 'react-dom/server';\r\nimport { connect } from 'react-redux';\r\nimport { useAppSelector, useAppDispatch } from '../../store/hooks';\r\nimport { selectDot, selectFileName, set } from '../../store/features/file/fileSlice';\r\nimport {\r\n    applyView,\r\n    changeStyle,\r\n    selectNodes,\r\n    applyColor,\r\n    hideNodes,\r\n    foldAllDescendants,\r\n    unfoldNodes,\r\n    selectVisualInfo,\r\n    selectProof,\r\n    selectHiddenNodes,\r\n    selectView,\r\n    unselectNodes,\r\n    process,\r\n    setSmt,\r\n} from '../../store/features/proof/proofSlice';\r\nimport { ReduxState, NavbarPropsAndRedux, NavbarProps } from '../../interfaces/interfaces';\r\n\r\nimport { Alignment, Button, Icon, InputGroup, Navbar, Switch, Menu, MenuItem } from '@blueprintjs/core';\r\nimport { Popover2 } from '@blueprintjs/popover2';\r\nimport { selectTheme, toggle } from '../../store/features/theme/themeSlice';\r\nimport '../../scss/VisualizerNavbar.scss';\r\nimport { allowRenderNewFile, findNode, reRender } from '../../store/features/externalCmd/externalCmd';\r\nimport examples from '../../examples/proofs-examples';\r\nimport { ConvertToSVG } from './SVGConverter';\r\n\r\nfunction useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: 0,\r\n        height: 0,\r\n    });\r\n    useEffect(() => {\r\n        // Handler to call on window resize\r\n        function handleResize() {\r\n            // Set window width/height to state\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        }\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n    return windowSize;\r\n}\r\n\r\nfunction isNotMozzila() {\r\n    const userAgent = navigator.userAgent;\r\n    let browserName;\r\n\r\n    if (userAgent.match(/chrome|chromium|crios/i)) {\r\n        return true;\r\n    } else if (userAgent.match(/firefox|fxios/i)) {\r\n        return false;\r\n    } else if (userAgent.match(/safari/i)) {\r\n        return true;\r\n    } else if (userAgent.match(/opr\\//i)) {\r\n        return true;\r\n    } else if (userAgent.match(/edg/i)) {\r\n        return true;\r\n    }\r\n    return browserName;\r\n}\r\nconst isNotMozz = isNotMozzila();\r\n\r\nconst VisualizerNavbar: React.FC<NavbarPropsAndRedux> = ({\r\n    setDialogIsOpen,\r\n    setDrawerIsOpen,\r\n    addErrorToast,\r\n    setInTutorial,\r\n    setSmtDrawerIsOpen,\r\n    inTutorial,\r\n    visualInfo,\r\n    proof,\r\n    dot,\r\n    view,\r\n    hiddenNodes,\r\n    hideNodes,\r\n}: NavbarPropsAndRedux) => {\r\n    const fileName = useAppSelector(selectFileName);\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const windowSize = useWindowSize();\r\n    const [command, setCommand] = useState('');\r\n    const [lastCommands, setLastCommands] = useState(['']);\r\n    const [commandId, setCommandId] = useState(0);\r\n    const [matchableCmd, setMatchableCmd] = useState<string[]>([]);\r\n    const [matchableCmdIsOpen, setMatchableCmdIsOpen] = useState(false);\r\n\r\n    useEffect(() => runExample(null, 'ex1', 1), []);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const commandsMap: { [cmd: string]: (cmds: string[]) => void } = {\r\n        ['/view']: (cmds: string[]) => {\r\n            switch (cmds[1]) {\r\n                case 'full':\r\n                    dispatch(applyView('full'));\r\n                    dispatch(reRender());\r\n                    break;\r\n                case 'clustered':\r\n                    dispatch(applyView('clustered'));\r\n                    dispatch(reRender());\r\n                    break;\r\n                case 'colored-full':\r\n                    dispatch(applyView('colored-full'));\r\n                    dispatch(reRender());\r\n                    break;\r\n            }\r\n        },\r\n        ['/select']: (cmds: string[]) => {\r\n            if (cmds[1]) {\r\n                let cmdArg = '';\r\n                cmds.forEach((string, id) => id !== 0 && (cmdArg += string + ' '));\r\n                // Matches all the brackets\r\n                const matches = [...cmdArg.matchAll(/\\[([^\\[\\]]+)\\]/g)];\r\n                let idList: number[] = [];\r\n\r\n                // There is a case with brackets\r\n                if (matches[0]) {\r\n                    const insideBracket = matches[0][1].trim();\r\n                    let insideMatches = [...insideBracket.matchAll(/\\s*\\d+\\s*-\\s*\\d+\\s*/g)];\r\n\r\n                    // Number range notation\r\n                    if (insideMatches[0]) {\r\n                        // Get the range limits\r\n                        const rangeLim = insideMatches[0][0].split(/\\s*-\\s*/).map((numS) => Number(numS));\r\n                        idList = Array.from({ length: rangeLim[1] - rangeLim[0] + 1 }, (_, i) => rangeLim[0] + i);\r\n                    }\r\n                    // List notation\r\n                    else {\r\n                        insideMatches = [...insideBracket.matchAll(/(\\s*\\d+\\s*,*)+/g)];\r\n                        // Number list notation\r\n                        if (insideMatches[0]) {\r\n                            // Group all the matches\r\n                            let listStr = '';\r\n                            insideMatches.forEach((match) => (listStr += match[0]));\r\n                            // Convert to number\r\n                            idList = listStr\r\n                                .split(/,\\s*/)\r\n                                .filter((word) => word.length > 0 && !isNaN(Number(word)))\r\n                                .map((id) => Number(id));\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Is a regex select?\r\n                    const matches = [...cmdArg.matchAll(/\\/[^\\/]*\\//g)];\r\n                    const argMatch = [...cmdArg.matchAll(/--(c|r)/g)];\r\n                    // If there is a regex\r\n                    if (matches[0]) {\r\n                        let argIsConclusion = true;\r\n                        // Try to find the option\r\n                        if (argMatch[0]) {\r\n                            switch (argMatch[0][1]) {\r\n                                case 'r':\r\n                                    argIsConclusion = false;\r\n                                    break;\r\n                                case 'c':\r\n                                    argIsConclusion = true;\r\n                                    break;\r\n                            }\r\n                        }\r\n\r\n                        const regexString = matches[0][0].substring(1, matches[0][0].length - 1);\r\n                        try {\r\n                            // Search all the nodes with the specific regex matching in the conclusion\r\n                            const regex = new RegExp(regexString);\r\n                            idList = proof\r\n                                .filter((node) => regex.test(argIsConclusion ? node.conclusion : node.rule))\r\n                                .map((node) => node.id);\r\n                        } catch (err) {\r\n                            // If the inserted regex expression is invalid (probably missing \\)\r\n                            addErrorToast('Regex error: probably and wrong regex expression');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                dispatch(selectNodes(idList));\r\n            }\r\n        },\r\n        ['/unselect']: (cmds: string[]) => {\r\n            const allNodesIds = proof.map((node) => node.id);\r\n            dispatch(unselectNodes(allNodesIds));\r\n        },\r\n        ['/color']: (cmds: string[]) => {\r\n            if (cmds[1]) {\r\n                // Hex color\r\n                if (RegExp(/^#([0-9a-f]{3}){1,2}$/i).test(cmds[1])) {\r\n                    dispatch(applyColor(cmds[1]));\r\n                    return;\r\n                }\r\n                // Default colors\r\n                switch (cmds[1]) {\r\n                    case 'red':\r\n                        dispatch(applyColor('#f72b34'));\r\n                        break;\r\n                    case 'orange':\r\n                        dispatch(applyColor('#ff8334'));\r\n                        break;\r\n                    case 'yellow':\r\n                        dispatch(applyColor('#ffc149'));\r\n                        break;\r\n                    case 'green':\r\n                        dispatch(applyColor('#60aa51'));\r\n                        break;\r\n                    case 'blue':\r\n                        dispatch(applyColor('#0097e4'));\r\n                        break;\r\n                    case 'purple':\r\n                        dispatch(applyColor('#a73da5'));\r\n                        break;\r\n                    case 'brown':\r\n                        dispatch(applyColor('#a95a49'));\r\n                        break;\r\n                    case 'gray':\r\n                        dispatch(applyColor('#464646'));\r\n                        break;\r\n                    case 'white':\r\n                        dispatch(applyColor('#f0f0f0'));\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        ['/hide']: (cmds: string[]) => {\r\n            // Hide all the selected nodes\r\n            const hiddenIds = Object.keys(visualInfo)\r\n                .map((id) => Number(id))\r\n                .filter((id) => visualInfo[id].selected);\r\n            // Make sure there are nodes selected\r\n            if (hiddenIds.length > 1) {\r\n                // Re-render the canvas and update the store\r\n                dispatch(reRender());\r\n                dispatch(hideNodes(hiddenIds));\r\n            }\r\n        },\r\n        ['/fold']: (cmds: string[]) => {\r\n            // If the option is a number\r\n            if (cmds[1] && !isNaN(Number(cmds[1]))) {\r\n                const nodeId = Number(cmds[1]);\r\n                // Is a valid node\r\n                if (proof.findIndex((node) => node.id === nodeId) !== -1) {\r\n                    // Re-render the canvas and update the store\r\n                    dispatch(reRender());\r\n                    dispatch(foldAllDescendants(nodeId));\r\n                }\r\n            }\r\n        },\r\n        ['/unfold']: (cmds: string[]) => {\r\n            // If there is a number argument\r\n            if (cmds[1] && !isNaN(Number(cmds[1]))) {\r\n                const id = Number(cmds[1]);\r\n                // Get the pi node (to be unfold)\r\n                const obj = proof.find((node) => node.id === id);\r\n                // If it's a pi node\r\n                if (obj && obj.hiddenNodes?.length) {\r\n                    // Re-render the canvas and update the store\r\n                    dispatch(reRender());\r\n                    dispatch(unfoldNodes(id));\r\n                }\r\n            }\r\n        },\r\n        ['/find']: (cmds: string[]) => {\r\n            // If there is an argument and is a number\r\n            if (cmds[1] && !isNaN(Number(cmds[1]))) {\r\n                // Find the node\r\n                dispatch(\r\n                    findNode({\r\n                        nodeId: Number(cmds[1]),\r\n                        option: cmds[2] === '--s' ? true : false,\r\n                    }),\r\n                );\r\n            }\r\n        },\r\n    };\r\n    const commands = useRef(Object.keys(commandsMap)).current;\r\n\r\n    const openDialog = (content: string): void => {\r\n        setDialogIsOpen(true);\r\n    };\r\n\r\n    const findMatchableCmd = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.value.length) {\r\n            setMatchableCmd(commands.filter((cmd) => cmd.indexOf(e.target.value) !== -1));\r\n            setMatchableCmdIsOpen(true);\r\n        }\r\n        // If it's an empty string\r\n        else {\r\n            setMatchableCmd([]);\r\n            setMatchableCmdIsOpen(false);\r\n        }\r\n    };\r\n\r\n    const renderMatchableCmd = () => {\r\n        if (matchableCmd.length) {\r\n            const list: JSX.Element[] = [];\r\n            matchableCmd.forEach((cmd) => list.push(<MenuItem text={cmd} />));\r\n            return <Menu className=\"matchable-menu\">{list}</Menu>;\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    const handleInputKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        // Creates an commands historic, registering the past 4 commands\r\n        switch (e.key) {\r\n            case 'Enter':\r\n                // If the command is not a white space\r\n                if (command.trim() !== '') {\r\n                    runCommands(command);\r\n                    if (lastCommands.length === 5) {\r\n                        lastCommands.pop();\r\n                    }\r\n                    lastCommands.unshift('');\r\n                    setLastCommands(lastCommands);\r\n                    setCommand('');\r\n                }\r\n                setMatchableCmd([]);\r\n                break;\r\n            case 'ArrowUp':\r\n                if (commandId < lastCommands.length - 1) {\r\n                    const newId = commandId + 1;\r\n                    setCommandId(newId);\r\n                    setCommand(lastCommands[newId]);\r\n                    setMatchableCmd([]);\r\n                    setMatchableCmdIsOpen(false);\r\n                }\r\n                break;\r\n            case 'ArrowDown':\r\n                if (commandId > 0) {\r\n                    const newId = commandId - 1;\r\n                    setCommandId(newId);\r\n                    setCommand(lastCommands[newId]);\r\n                    setMatchableCmd([]);\r\n                    setMatchableCmdIsOpen(false);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    const runCommands = (command: string): void => {\r\n        const cmds = command.trim().split(/ +/);\r\n        // If the command exist\r\n        if (cmds[0] && commandsMap[cmds[0]]) {\r\n            commandsMap[cmds[0]](cmds);\r\n        }\r\n    };\r\n\r\n    const exportJSON = () => {\r\n        const downloadJSON = {\r\n            dot: dot,\r\n            visualInfo: visualInfo,\r\n            hiddenNodes: hiddenNodes,\r\n            view: view,\r\n        };\r\n        const fName = fileName.split('.')[0].replace(/\\s+/g, '_');\r\n\r\n        const link = document.createElement('a');\r\n        link.download = fName + '.json';\r\n        link.href = `data:attachment/text,${encodeURIComponent(JSON.stringify(downloadJSON))}`;\r\n        link.click();\r\n    };\r\n\r\n    const exportPNG = (e: React.MouseEvent<HTMLElement, MouseEvent> | null) => {\r\n        e?.preventDefault();\r\n        const link = document.createElement('a');\r\n        link.download = fileName ? `${fileName.split('.')[0].replace(/\\s+/g, '_')}.png` : '';\r\n        const graph = document.getElementsByClassName('konvajs-content');\r\n        if (graph.length) {\r\n            link.href = (graph[0].children[0] as HTMLCanvasElement).toDataURL('image/png');\r\n            link.click();\r\n        }\r\n    };\r\n\r\n    const exportSVG = (e: React.MouseEvent<HTMLElement, MouseEvent> | null) => {\r\n        e?.preventDefault();\r\n\r\n        const el = ConvertToSVG(proof, visualInfo);\r\n        const svg = renderToStaticMarkup(el);\r\n\r\n        // Download the svg content\r\n        const base64doc = btoa(unescape(encodeURIComponent(svg)));\r\n        const a = document.createElement('a');\r\n        a.download = fileName ? `${fileName.split('.')[0].replace(/\\s+/g, '_')}.svg` : 'download.svg';\r\n        a.href = 'data:image/svg+xml;base64,' + base64doc;\r\n        a.click();\r\n    };\r\n\r\n    const runExample = (e: React.MouseEvent<HTMLElement, MouseEvent> | null, ex: string, id: number) => {\r\n        e?.preventDefault();\r\n        const dot = examples[ex].dot;\r\n        const smt = examples[ex].smt;\r\n\r\n        dispatch(set({ name: `ex-${id + 1}.dot`, value: dot }));\r\n        dispatch(allowRenderNewFile());\r\n        dispatch(reRender());\r\n        dispatch(setSmt(smt));\r\n\r\n        dispatch(process(dot));\r\n        // setSmtDrawerIsOpen(true);\r\n    };\r\n\r\n    const isPseudoClick = (e: React.KeyboardEvent<HTMLAnchorElement>): boolean => e.key === 'Enter' || e.key === ' ';\r\n\r\n    const menus = {\r\n        style: (\r\n            <Menu className=\"nav-menu\">\r\n                <MenuItem\r\n                    icon=\"diagram-tree\"\r\n                    text=\"Graph\"\r\n                    onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                        e.preventDefault();\r\n                        dispatch(changeStyle('graph'));\r\n                    }}\r\n                    onKeyDown={(e) => isPseudoClick(e) && dispatch(changeStyle('graph'))}\r\n                />\r\n                <MenuItem\r\n                    icon=\"folder-open\"\r\n                    text=\"Directory\"\r\n                    onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                        e.preventDefault();\r\n                        dispatch(changeStyle('directory'));\r\n                    }}\r\n                    onKeyDown={(e) => isPseudoClick(e) && dispatch(changeStyle('directory'))}\r\n                />\r\n            </Menu>\r\n        ),\r\n        download: (\r\n            <Menu className=\"nav-menu\">\r\n                <MenuItem\r\n                    icon=\"layout\"\r\n                    text=\"JSON\"\r\n                    onClick={exportJSON}\r\n                    role=\"button\"\r\n                    onKeyDown={(e) => {\r\n                        (e.key == 'Enter' || e.key == ' ') && exportJSON();\r\n                    }}\r\n                />\r\n                <MenuItem\r\n                    icon=\"graph\"\r\n                    text=\"DOT\"\r\n                    href={`data:attachment/text,${encodeURIComponent(dot ? dot : '')}`}\r\n                    download={fileName ? `${fileName.split('.')[0].replace(/\\s+/g, '_')}.dot` : ''}\r\n                />\r\n                <MenuItem\r\n                    icon=\"square\"\r\n                    text=\"PNG\"\r\n                    onClick={exportPNG}\r\n                    onKeyDown={(e) => {\r\n                        (e.key == 'Enter' || e.key == ' ') && exportPNG(null);\r\n                    }}\r\n                />\r\n                <MenuItem\r\n                    icon=\"widget\"\r\n                    text=\"SVG\"\r\n                    onClick={exportSVG}\r\n                    onKeyDown={(e) => {\r\n                        (e.key == 'Enter' || e.key == ' ') && exportSVG(null);\r\n                    }}\r\n                />\r\n            </Menu>\r\n        ),\r\n        help: (\r\n            <Menu className=\"nav-menu\">\r\n                <MenuItem text=\"/view\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that changes the view mode.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /view {'<option>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Option:</u> full, clustered and colored-full.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/select\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that selects a group of nodes.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /select {'<option>'} {'<argument>'}\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Options:</u>\r\n                            <div className=\"option\">\r\n                                1 - A list of node ids wrapped by brackets and separated by commas (and spaces if\r\n                                wanted) (eg.: [1, 15, 6, 3]).\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                2 - A range of node ids wrapped by brackets and separated by hyphen (and spaces if\r\n                                wanted) (eg.: [4 - 15]). This range will include the last element.\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                3 - A regex expression used to select all the nodes which the conclusion owns a match\r\n                                (eg.: /\\.*false\\.*/ selects all the nodes with false anywhere in the conclusion).\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <u className=\"title\">Argument:</u> The argument can only be applied with the third option.\r\n                            <br />\r\n                            To search a match in the rule just insert the --r argument. The --c argument exists but the\r\n                            /select will by default search in the conclusion.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/unselect\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that unselect all the nodes.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /unselect.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/color\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that changes the color of the current selected\r\n                            nodes.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /color {'<option>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Options:</u>\r\n                            <div className=\"option\">1 - A valid hex color notation (eg.: #A7B).</div>\r\n                            <div className=\"option\">\r\n                                2 - A color name among: red🟥, orange🟧, yellow🟨, green🟩, blue🟦, purple🟪, brown🟫,\r\n                                black⬛ and white⬜.\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Prerequisites:</u> a group of nodes being selected.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/hide\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that try to fold (hide) a group of selected nodes.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /hide.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Prerequisites:</u> a group of nodes being selected.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/fold\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that fold all descendants of a specific node.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /fold {'<option>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Option:</u> a valid node id.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/unfold\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that unfold a specific pi node.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /unfold {'<option>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Option:</u> a valid pi node id.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/find\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that find a node and centralize the canvas at it.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /find {'<node number>'} {'<argument>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Argument:</u> --s: find and select the node.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n            </Menu>\r\n        ),\r\n        examples: (\r\n            <Menu className=\"nav-menu\">\r\n                {Object.keys(examples).map((ex, id) => {\r\n                    return (\r\n                        <MenuItem\r\n                            key={id}\r\n                            text={`Example ${id + 1}`}\r\n                            onClick={(e) => runExample(e, ex, id)}\r\n                            onKeyDown={(e) => isPseudoClick(e) && runExample(null, ex, id)}\r\n                        />\r\n                    );\r\n                })}\r\n            </Menu>\r\n        ),\r\n    };\r\n\r\n    const tabIndex = inTutorial ? -1 : 0;\r\n\r\n    const criticalWidth = 1350;\r\n    return (\r\n        <Navbar>\r\n            <Navbar.Group align={Alignment.LEFT}>\r\n                <Navbar.Heading>\r\n                    <b id=\"proof-visualizer-name\">{windowSize.width >= criticalWidth ? 'Proof Visualizer' : 'PV'}</b>\r\n                </Navbar.Heading>\r\n                <Navbar.Divider />\r\n                <Button\r\n                    onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                        e.preventDefault();\r\n                        openDialog('upload-proof');\r\n                    }}\r\n                    id=\"upload-proof-bt\"\r\n                    className=\"bp3-minimal\"\r\n                    icon=\"upload\"\r\n                    text={windowSize.width >= criticalWidth ? 'Upload Proof' : ''}\r\n                    tabIndex={tabIndex}\r\n                />\r\n                <Popover2\r\n                    content={fileName ? menus.examples : undefined}\r\n                    placement=\"bottom-end\"\r\n                    modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                >\r\n                    <Button\r\n                        id=\"examples-bt\"\r\n                        className=\"bp3-minimal\"\r\n                        icon=\"manual\"\r\n                        text={windowSize.width >= criticalWidth ? 'Examples' : ''}\r\n                        tabIndex={tabIndex}\r\n                    />\r\n                </Popover2>\r\n                <Button\r\n                    id=\"input-smt-bt\"\r\n                    className=\"bp3-minimal\"\r\n                    icon=\"code\"\r\n                    text={windowSize.width >= criticalWidth ? 'SMT Input' : ''}\r\n                    onClick={() => setSmtDrawerIsOpen(true)}\r\n                    tabIndex={tabIndex}\r\n                />\r\n            </Navbar.Group>\r\n\r\n            <Navbar.Group align={Alignment.RIGHT}>\r\n                {fileName ? (\r\n                    <>\r\n                        <Navbar.Heading id=\"file-name-title\">{fileName}</Navbar.Heading>\r\n                        <Navbar.Divider />\r\n                        <Popover2\r\n                            autoFocus={false}\r\n                            enforceFocus={false}\r\n                            content={renderMatchableCmd()}\r\n                            isOpen={matchableCmdIsOpen}\r\n                            disabled={matchableCmd.length === 0}\r\n                            placement=\"bottom-end\"\r\n                            modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                        >\r\n                            <InputGroup\r\n                                id=\"command\"\r\n                                placeholder=\"/command\"\r\n                                value={command}\r\n                                onChange={(e) => {\r\n                                    setCommandId(0);\r\n                                    lastCommands[0] = e.target.value;\r\n                                    setLastCommands(lastCommands);\r\n                                    setCommand(e.target.value);\r\n                                    findMatchableCmd(e);\r\n                                }}\r\n                                onKeyDown={handleInputKeyDown}\r\n                                rightElement={\r\n                                    <Popover2\r\n                                        content={menus.help}\r\n                                        placement=\"bottom-end\"\r\n                                        modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                                    >\r\n                                        <Button\r\n                                            icon=\"help\"\r\n                                            className=\"bp3-minimal\"\r\n                                            onFocusCapture={(e) => inTutorial && e.target.blur()}\r\n                                            tabIndex={-1}\r\n                                        />\r\n                                    </Popover2>\r\n                                }\r\n                                autoComplete=\"off\"\r\n                                tabIndex={tabIndex}\r\n                            />\r\n                        </Popover2>\r\n                        <Button\r\n                            style={{ marginLeft: '5px' }}\r\n                            icon=\"play\"\r\n                            onClick={() => {\r\n                                runCommands(command);\r\n                                lastCommands.pop();\r\n                                lastCommands.unshift(command);\r\n                                lastCommands[0] = '';\r\n                                setLastCommands(lastCommands);\r\n                                setCommand('');\r\n                            }}\r\n                            onFocusCapture={(e) => inTutorial && e.target.blur()}\r\n                            tabIndex={-1}\r\n                        />\r\n                        <Navbar.Divider />\r\n                        <Popover2\r\n                            content={fileName ? menus.style : undefined}\r\n                            placement=\"bottom-end\"\r\n                            disabled={fileName ? false : true}\r\n                            modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                        >\r\n                            <Button\r\n                                id=\"style-bt\"\r\n                                icon=\"presentation\"\r\n                                className=\"bp3-minimal\"\r\n                                text={windowSize.width >= criticalWidth ? 'Style' : ''}\r\n                                disabled={fileName ? false : true}\r\n                                tabIndex={tabIndex}\r\n                            />\r\n                        </Popover2>\r\n                        <Button\r\n                            id=\"visualizers-bt\"\r\n                            className=\"bp3-minimal\"\r\n                            icon=\"applications\"\r\n                            text={windowSize.width >= criticalWidth ? 'Visualizers' : ''}\r\n                            disabled={fileName ? false : true}\r\n                            onClick={() => setDrawerIsOpen(true)}\r\n                            tabIndex={tabIndex}\r\n                        />\r\n                        <Popover2\r\n                            content={fileName ? menus.download : undefined}\r\n                            placement=\"bottom-end\"\r\n                            disabled={fileName ? false : true}\r\n                            modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                        >\r\n                            <Button\r\n                                id=\"download-bt\"\r\n                                className=\"bp3-minimal\"\r\n                                icon=\"download\"\r\n                                text={windowSize.width >= criticalWidth ? 'Download' : ''}\r\n                                disabled={fileName ? false : true}\r\n                                tabIndex={tabIndex}\r\n                            />\r\n                        </Popover2>\r\n                        <Button\r\n                            className=\"bp3-minimal\"\r\n                            icon=\"learning\"\r\n                            text={windowSize.width >= criticalWidth ? 'Tutorial' : ''}\r\n                            disabled={fileName ? false : true}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.currentTarget.blur();\r\n                                setInTutorial(!inTutorial);\r\n                            }}\r\n                            tabIndex={tabIndex}\r\n                        />\r\n                        <Navbar.Divider />\r\n                    </>\r\n                ) : null}\r\n\r\n                <span id=\"switch-button-dark-theme\">\r\n                    <Switch\r\n                        checked={useAppSelector(selectTheme)}\r\n                        onChange={() => dispatch(toggle())}\r\n                        tabIndex={tabIndex}\r\n                    />\r\n                    <Icon icon={darkTheme ? 'moon' : 'flash'}></Icon>\r\n                </span>\r\n            </Navbar.Group>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state: ReduxState, ownProps: NavbarProps) {\r\n    return {\r\n        ...ownProps,\r\n        proof: selectProof(state),\r\n        dot: selectDot(state),\r\n        view: selectView(state),\r\n        visualInfo: selectVisualInfo(state),\r\n        hiddenNodes: selectHiddenNodes(state),\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = { hideNodes };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualizerNavbar);\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { MaybeElement } from '@blueprintjs/core/lib/esm/common/props';\r\nimport { IconName } from '@blueprintjs/core/lib/esm/components/icon/icon';\r\n\r\nimport { Button, Classes, Dialog, FileInput, Intent } from '@blueprintjs/core';\r\n\r\nimport '../../scss/VisualizerDialog.scss';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { set } from '../../store/features/file/fileSlice';\r\nimport { process } from '../../store/features/proof/proofSlice';\r\nimport { allowRenderNewFile, blockRender, reRender } from '../../store/features/externalCmd/externalCmd';\r\nimport { VisualizerDialogProps } from '../../interfaces/interfaces';\r\n\r\ninterface DialogProps {\r\n    icon: IconName | MaybeElement;\r\n    title: React.ReactNode;\r\n}\r\n\r\nconst readUploadedFileAsText = (inputFile: File) => {\r\n    const temporaryFileReader = new FileReader();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        temporaryFileReader.onerror = () => {\r\n            temporaryFileReader.abort();\r\n            reject(new DOMException('Problem parsing input file.'));\r\n        };\r\n\r\n        temporaryFileReader.onload = () => {\r\n            resolve(temporaryFileReader.result);\r\n        };\r\n        temporaryFileReader.readAsText(inputFile);\r\n    });\r\n};\r\n\r\nconst VisualizerDialog: React.FC<VisualizerDialogProps> = ({\r\n    dialogIsOpen,\r\n    setDialogIsOpen,\r\n    addErrorToast,\r\n}: VisualizerDialogProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [inputIsFocused, setInputIsFocused] = useState(false);\r\n    const [fileName, changeFileName] = useState('Choose file...');\r\n    const [file, changeFile] = useState('');\r\n    const [[focusFlag, flagCount], setFocusFlag] = useReducer(\r\n        (state: number[], newFlag: number): number[] => [newFlag, state[1] + 1],\r\n        [0, 0],\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (dialogIsOpen) setFocusFlag(1);\r\n    }, [dialogIsOpen]);\r\n\r\n    useEffect(() => {\r\n        let el;\r\n        switch (focusFlag) {\r\n            // Focus the file input\r\n            case 1:\r\n                el = document.getElementsByClassName(Classes.DIALOG_BODY + ' dialog-body');\r\n                (el[0].childNodes[0] as HTMLElement).focus();\r\n                break;\r\n            // Focus the upload button\r\n            case 2:\r\n                el = document.getElementsByClassName(Classes.DIALOG_FOOTER_ACTIONS);\r\n                (el[0].childNodes[0] as HTMLElement).focus();\r\n                break;\r\n        }\r\n    }, [flagCount]);\r\n\r\n    const closeDialog = () => {\r\n        setDialogIsOpen(false);\r\n        changeFileName('Choose file...');\r\n        changeFile('');\r\n    };\r\n\r\n    const dialogProps: DialogProps = { icon: 'upload', title: 'Upload Proof' };\r\n    const dialogBody = (\r\n        <FileInput\r\n            style={{\r\n                outline: inputIsFocused ? '2px  white solid' : '',\r\n                borderRadius: '3px',\r\n            }}\r\n            text={fileName}\r\n            hasSelection={fileName !== 'Choose file...'}\r\n            onInputChange={async (e) => {\r\n                const target = e.target as HTMLInputElement;\r\n                const file = target.files ? target.files[0] : new File([''], 'filename');\r\n                if (\r\n                    target.files &&\r\n                    target.files[0] &&\r\n                    target.files[0].name.split('.').slice(-1)[0] !== 'dot' &&\r\n                    target.files[0].name.split('.').slice(-1)[0] !== 'json'\r\n                ) {\r\n                    addErrorToast('Sorry! Our app only support DOT and JSON files.');\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    // Make sure the file was selected and none error of \"no\r\n                    //  file select\" will be prompted\r\n                    if (file) {\r\n                        const fileContents = await readUploadedFileAsText(file);\r\n                        changeFile(fileContents as string);\r\n                        changeFileName(file.name);\r\n\r\n                        // If succeded, set the focus of the page to the upload button\r\n                        setFocusFlag(2);\r\n                    }\r\n                } catch (er: any) {\r\n                    addErrorToast(er.message);\r\n                }\r\n            }}\r\n            fill={true}\r\n            onFocus={(e) => {\r\n                e.stopPropagation();\r\n                setInputIsFocused(true);\r\n            }}\r\n            onBlur={(e) => {\r\n                e.stopPropagation();\r\n                setInputIsFocused(false);\r\n            }}\r\n        />\r\n    );\r\n    const succesButton = (\r\n        <Button\r\n            onClick={() => {\r\n                dispatch(set({ name: fileName, value: file }));\r\n\r\n                dispatch(allowRenderNewFile());\r\n                const ext = fileName.split('.').pop();\r\n                if (ext === 'json') dispatch(blockRender());\r\n                else if (ext === 'dot') dispatch(reRender());\r\n\r\n                dispatch(process(file));\r\n                closeDialog();\r\n            }}\r\n            intent={Intent.SUCCESS}\r\n            disabled={fileName === 'Choose file...'}\r\n        >\r\n            Upload Proof\r\n        </Button>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                className={darkTheme ? ' bp3-dark' : ''}\r\n                isOpen={dialogIsOpen}\r\n                onClose={(): void => closeDialog()}\r\n                usePortal={true}\r\n                {...dialogProps}\r\n            >\r\n                <div className={Classes.DIALOG_BODY + ' dialog-body'}>{dialogBody}</div>\r\n                <div className={Classes.DIALOG_FOOTER}>\r\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>{succesButton}</div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VisualizerDialog;\r\n","import React from 'react';\r\nimport { Arrow } from 'react-konva';\r\n\r\nimport { LineProps } from '../../../interfaces/interfaces';\r\n\r\nconst Line = ({ key, points }: LineProps): JSX.Element => {\r\n    return <Arrow key={key} strokeWidth={1} stroke=\"black\" fill=\"black\" points={[...points]} />;\r\n};\r\n\r\nexport default Line;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ControlGroup, Button, InputGroup } from '@blueprintjs/core';\r\nimport { colorConverter } from '../../../store/features/theme/auxi';\r\n\r\nconst Menu = ({\r\n    unfold,\r\n    foldSelectedNodes,\r\n    foldAllDescendants,\r\n    changeNodeColor,\r\n    currentColor,\r\n    options,\r\n}: {\r\n    unfold: () => void;\r\n    foldSelectedNodes: () => void;\r\n    foldAllDescendants: () => void;\r\n    changeNodeColor: (color: string) => void;\r\n    currentColor: string;\r\n    options: { unfold: boolean; foldSelected: boolean; foldAllDescendants: boolean };\r\n}): JSX.Element => {\r\n    const [color, setColor] = useState(currentColor);\r\n\r\n    useEffect(() => {\r\n        setColor(currentColor);\r\n    }, [currentColor]);\r\n\r\n    return (\r\n        <div className=\"bp3-popover2-content\">\r\n            <ul id=\"menu\" className=\"bp3-menu\">\r\n                {options.unfold ? (\r\n                    <li className=\"\">\r\n                        <a className=\"bp3-menu-item\" onClick={() => unfold()}>\r\n                            <div className=\"bp3-text-overflow-ellipsis bp3-fill bp3-icon-eye-open\">\r\n                                <span> Unfold</span>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                ) : null}\r\n                {options.foldSelected ? (\r\n                    <li className=\"\">\r\n                        <a className=\"bp3-menu-item\" onClick={() => foldSelectedNodes()}>\r\n                            <div className=\"bp3-text-overflow-ellipsis bp3-fill bp3-icon-eye-off\">\r\n                                <span> Fold selected nodes</span>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                ) : null}\r\n                {options.foldAllDescendants ? (\r\n                    <li className=\"\">\r\n                        <a className=\"bp3-menu-item\" onClick={() => foldAllDescendants()}>\r\n                            <div className=\"bp3-text-overflow-ellipsis bp3-fill bp3-icon-eye-off\">\r\n                                <span> Fold all descendants</span>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                ) : null}\r\n                <li className=\"\">\r\n                    <a className=\"bp3-menu-item\">\r\n                        <div className=\"bp3-text-overflow-ellipsis bp3-fill\">\r\n                            <span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('red'))}> 🟥</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('orange'))}> 🟧</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('yellow'))}> 🟨</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('green'))}> 🟩</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('blue'))}> 🟦</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('purple'))}> 🟪</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('brown'))}> 🟫</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('black'))}> ⬛</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('white'))}> ⬜</span>\r\n                            </span>\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"\">\r\n                    <a className=\"bp3-menu-item\">\r\n                        <div className=\"bp3-text-overflow-ellipsis bp3-fill\">\r\n                            <ControlGroup\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                }}\r\n                                fill={true}\r\n                                vertical={false}\r\n                            >\r\n                                <InputGroup\r\n                                    placeholder={currentColor}\r\n                                    value={color}\r\n                                    onChange={(e) => setColor(e.target.value)}\r\n                                />\r\n                                <Button\r\n                                    icon=\"style\"\r\n                                    onClick={() => {\r\n                                        changeNodeColor(color);\r\n                                        setColor('');\r\n                                    }}\r\n                                    disabled={color.match(/^#([0-9a-f]{3}){1,2}$/i) === null}\r\n                                ></Button>\r\n                            </ControlGroup>\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport { Stage, Layer } from 'react-konva';\r\nimport Konva from 'konva';\r\nimport dagre from 'dagre';\r\nimport Node from './VisualizerNode';\r\nimport Line from './VisualizerLine';\r\nimport Menu from './VisualizerMenu';\r\nimport {\r\n    NodeProps,\r\n    LineProps,\r\n    TreeNode,\r\n    CanvasPropsAndRedux,\r\n    NodeInterface,\r\n    ProofState,\r\n    ReduxState,\r\n} from '../../../interfaces/interfaces';\r\n\r\nimport '../../../scss/VisualizerCanvas.scss';\r\n\r\nimport { CanvasProps, CanvasState } from '../../../interfaces/interfaces';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    selectVisualInfo,\r\n    hideNodes,\r\n    unfoldNodes,\r\n    foldAllDescendants,\r\n    setVisualInfo,\r\n    undo,\r\n    selectNodes,\r\n    unselectNodes,\r\n    applyColor,\r\n    moveNode,\r\n    selectByArea,\r\n} from '../../../store/features/proof/proofSlice';\r\nimport {\r\n    selectFindData,\r\n    findNode,\r\n    selectRenderData,\r\n    reRender,\r\n    addRenderCount,\r\n    blockRenderNewFile,\r\n    setSpinner,\r\n    selectSpinner,\r\n    selectSelectData,\r\n    setSelectArea,\r\n} from '../../../store/features/externalCmd/externalCmd';\r\n\r\nconst nodeWidth = 300,\r\n    nodeHeight = 130;\r\n\r\nfunction handleWheel(e: Konva.KonvaEventObject<WheelEvent>): { stageScale: number; stageX: number; stageY: number } {\r\n    e.evt.preventDefault();\r\n\r\n    const scaleBy = 1.08;\r\n    const stage = e.target.getStage();\r\n    if (stage) {\r\n        const oldScale = stage.scaleX();\r\n        const pointerPosition = stage.getPointerPosition();\r\n        let x, y;\r\n\r\n        if (pointerPosition) {\r\n            [x, y] = [pointerPosition.x, pointerPosition.y];\r\n        } else {\r\n            [x, y] = [0, 0];\r\n        }\r\n\r\n        const mousePointTo = {\r\n            x: x / oldScale - stage.x() / oldScale,\r\n            y: y / oldScale - stage.y() / oldScale,\r\n        };\r\n\r\n        const newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n\r\n        return {\r\n            stageScale: newScale,\r\n            stageX: -(mousePointTo.x - x / newScale) * newScale,\r\n            stageY: -(mousePointTo.y - y / newScale) * newScale,\r\n        };\r\n    }\r\n    return {\r\n        stageScale: 1,\r\n        stageX: 0,\r\n        stageY: 0,\r\n    };\r\n}\r\n\r\nclass Canvas extends Component<CanvasPropsAndRedux, CanvasState> {\r\n    constructor(props: CanvasPropsAndRedux) {\r\n        super(props);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n        this.setNodeOnFocus = this.setNodeOnFocus.bind(this);\r\n\r\n        this.state = {\r\n            canvasSize: {\r\n                width: 520,\r\n                height: 300,\r\n            },\r\n            stage: {\r\n                stageScale: 1,\r\n                stageX: 0,\r\n                stageY: 0,\r\n            },\r\n            showingNodes: {},\r\n            showingEdges: {},\r\n            nodeOnFocus: NaN,\r\n            nodesSelected: [],\r\n            proof: [],\r\n            visualInfo: {},\r\n        };\r\n    }\r\n\r\n    static copyNodePosition = (\r\n        visualInfo: ProofState['visualInfo'],\r\n        showingNodes: CanvasState['showingNodes'],\r\n    ): ProofState['visualInfo'] => {\r\n        // Get the current position of the nodes and create a proofState with them included\r\n        const newVisualInfo: ProofState['visualInfo'] = {};\r\n        Object.keys(visualInfo).forEach((id) => {\r\n            const key = Number(id);\r\n\r\n            if (showingNodes[key]) {\r\n                newVisualInfo[key] = {\r\n                    ...visualInfo[key],\r\n                    x: showingNodes[key].props.x,\r\n                    y: showingNodes[key].props.y,\r\n                };\r\n            } else {\r\n                newVisualInfo[key] = {\r\n                    ...visualInfo[key],\r\n                };\r\n            }\r\n        });\r\n        return newVisualInfo;\r\n    };\r\n\r\n    static newNodeProps = (node: NodeInterface, visualInfos: ProofState['visualInfo']): NodeProps => {\r\n        const visualInfo = visualInfos[node.id];\r\n        return {\r\n            id: node.id,\r\n            conclusion: node.conclusion,\r\n            rule: node.rule,\r\n            args: node.args,\r\n            x: visualInfo.x,\r\n            y: visualInfo.y,\r\n            nHided: node.hiddenNodes ? node.hiddenNodes.length : 0,\r\n            nDescendants: node.descendants - 1,\r\n            hiddenNodes: node.hiddenNodes ? node.hiddenNodes.map((node) => node.id) : [],\r\n            dependencies: node.dependencies ? node.dependencies : [],\r\n            selected: visualInfo.selected,\r\n            color: visualInfo.color,\r\n            setNodeOnFocus: () => undefined,\r\n            toggleNodeSelection: () => undefined,\r\n            updateNodePosition: () => undefined,\r\n            openDrawer: () => undefined,\r\n            onDragEnd: () => undefined,\r\n            createTree: () => {\r\n                return [];\r\n            },\r\n        };\r\n    };\r\n\r\n    static getDerivedStateFromProps(props: CanvasPropsAndRedux, current_state: CanvasState) {\r\n        const proofChanged = JSON.stringify(current_state.proof) !== JSON.stringify(props.proof);\r\n        const visualInfoChanged = JSON.stringify(current_state.visualInfo) !== JSON.stringify(props.visualInfo);\r\n        const { nodeToFind, findOption } = props.nodeFindData;\r\n        const { count, fileChanged } = props.renderData;\r\n        const { selectData, selectByArea, setSelectArea } = props;\r\n        const { stage } = current_state;\r\n\r\n        // If there is any select square to be converted\r\n        if (selectData.lowerR.x !== -1) {\r\n            // Convert the dimensions of the square to fit the offset and scale\r\n            const converted = {\r\n                upperL: {\r\n                    x: (selectData.upperL.x - stage.stageX) / stage.stageScale,\r\n                    y: (selectData.upperL.y - stage.stageY) / stage.stageScale,\r\n                },\r\n                lowerR: {\r\n                    x: (selectData.lowerR.x - stage.stageX) / stage.stageScale,\r\n                    y: (selectData.lowerR.y - stage.stageY) / stage.stageScale,\r\n                },\r\n            };\r\n            // Search and select the nodes\r\n            selectByArea(converted);\r\n            setSelectArea({ upperL: { x: -1, y: -1 }, lowerR: { x: -1, y: -1 } });\r\n        }\r\n\r\n        // If there is a node to be found\r\n        if (nodeToFind > -1) {\r\n            // Is valid node\r\n            if (nodeToFind <= props.proof[props.proof.length - 1].id) {\r\n                // Change the stage position\r\n                const { x, y } = props.visualInfo[nodeToFind];\r\n                stage.stageX = current_state.canvasSize.width / 2 - (x + nodeWidth / 2) * stage.stageScale;\r\n                stage.stageY = current_state.canvasSize.height / 2 - (y + nodeHeight / 2) * stage.stageScale;\r\n\r\n                // Select the finded node\r\n                if (findOption) {\r\n                    props.setVisualInfo({\r\n                        ...props.visualInfo,\r\n                        [nodeToFind]: { ...props.visualInfo[nodeToFind], selected: true },\r\n                    });\r\n                }\r\n            }\r\n            // Reset the node finder\r\n            props.findNode({ nodeId: -1, option: false });\r\n        }\r\n\r\n        // If the proof or visual info changed or we have a new file being uploaded\r\n        if (proofChanged || visualInfoChanged || fileChanged) {\r\n            // Create the showing nodes array\r\n            const showingNodes: CanvasState['showingNodes'] = {};\r\n            props.proof.forEach((node, id) => {\r\n                showingNodes[node.id] = <Node key={id} {...Canvas.newNodeProps(node, props.visualInfo)} />;\r\n            });\r\n\r\n            // If has nodes and can render\r\n            if (showingNodes[0] && count < 2) {\r\n                props.addRenderCount();\r\n\r\n                const g = new dagre.graphlib.Graph();\r\n                g.setGraph({ rankdir: 'BT', ranker: 'tight-tree' });\r\n                g.setDefaultEdgeLabel(function () {\r\n                    return {};\r\n                });\r\n                props.proof.forEach((node) => {\r\n                    g.setNode(node.id.toString(), {\r\n                        width: nodeWidth + (node.dependencies.length ? 95 : 0),\r\n                        height: nodeHeight,\r\n                    });\r\n                    node.children.forEach((child) => {\r\n                        g.setEdge(child.toString(), node.id.toString());\r\n                    });\r\n                });\r\n                dagre.layout(g);\r\n\r\n                const xOffset = g.node('0').x - (showingNodes[0].props.x ? showingNodes[0].props.x : 0);\r\n                const yOffset = g.node('0').y - (showingNodes[0].props.y ? showingNodes[0].props.y : 0);\r\n                g.nodes().forEach((v) => {\r\n                    try {\r\n                        const { x, y } = g.node(v);\r\n                        const key = parseInt(v);\r\n                        showingNodes[key] = (\r\n                            <Node\r\n                                {...{\r\n                                    ...showingNodes[key].props,\r\n                                    x: x - xOffset,\r\n                                    y: y - yOffset,\r\n                                }}\r\n                            />\r\n                        );\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n                });\r\n\r\n                props.setVisualInfo(Canvas.copyNodePosition(props.visualInfo, showingNodes));\r\n            }\r\n            // Reset the new file indicator if it's true\r\n            if (fileChanged) props.blockRenderNewFile();\r\n\r\n            return {\r\n                showingNodes: showingNodes,\r\n                showingEdges: {},\r\n                proof: props.proof,\r\n                visualInfo: props.visualInfo,\r\n                stage: stage,\r\n            };\r\n        }\r\n        // Disable the render spinner if the rendering have finished\r\n        else if (props.spinner === 'render' && count === 2) {\r\n            setTimeout(() => props.setSpinner('off'), 100);\r\n        }\r\n        return { stage: stage };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { showingNodes } = this.state;\r\n        const { proof, visualInfo } = this.props;\r\n\r\n        const newShowingNodes: CanvasState['showingNodes'] = {};\r\n        proof.forEach((node, id) => {\r\n            newShowingNodes[node.id] = <Node key={id} {...Canvas.newNodeProps(node, visualInfo)} />;\r\n        });\r\n\r\n        this.setState({ proof: proof, showingNodes: newShowingNodes });\r\n\r\n        if (showingNodes[0]) {\r\n            const [width, height] = [window.innerWidth, window.innerHeight - 50];\r\n\r\n            // Make sure every time the Canvas is mounted the props are passed to the showing nodes\r\n            this.updateEdgesAndFuncs();\r\n\r\n            this.setState({\r\n                canvasSize: {\r\n                    width,\r\n                    height,\r\n                },\r\n                stage: {\r\n                    stageScale: 1,\r\n                    stageX: width / 2 - (showingNodes[0].props.x + 300 / 2),\r\n                    stageY: height / 10 - (showingNodes[0].props.y + 30 / 2),\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: CanvasPropsAndRedux) {\r\n        // If the proof changed\r\n        if (prevProps.proof !== this.props.proof) {\r\n            this.updateEdgesAndFuncs();\r\n        }\r\n    }\r\n\r\n    updateEdgesAndFuncs() {\r\n        const { showingNodes, showingEdges } = this.state;\r\n        const { proof } = this.props;\r\n\r\n        // Update edges\r\n        proof.forEach((node) => {\r\n            if (showingNodes[node.parents[0]]) {\r\n                node.parents.forEach((parent) => {\r\n                    showingEdges[`${node.id}->${parent}`] = Line(\r\n                        this.LineProps(\r\n                            `${node.id}->${parent}`,\r\n                            showingNodes[node.id].props,\r\n                            showingNodes[parent].props,\r\n                        ),\r\n                    );\r\n                });\r\n            }\r\n        });\r\n        Object.keys(showingNodes).forEach((nodeId: string) => {\r\n            // Make sure a function is updated once\r\n            if (!showingNodes[parseInt(nodeId)].props.setNodeOnFocus.length) {\r\n                const { openDrawer } = this.props;\r\n\r\n                // Set the node functions\r\n                showingNodes[parseInt(nodeId)] = (\r\n                    <Node\r\n                        {...{\r\n                            ...showingNodes[parseInt(nodeId)].props,\r\n                            setNodeOnFocus: this.setNodeOnFocus,\r\n                            toggleNodeSelection: this.toggleNodeSelection,\r\n                            updateNodePosition: this.updateNodePosition,\r\n                            openDrawer: openDrawer,\r\n                            onDragEnd: this.saveNodePosition,\r\n                            createTree: this.createTree,\r\n                        }}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        this.setState({ showingEdges, showingNodes });\r\n    }\r\n\r\n    /* NODE MENU ACTIONS */\r\n    foldAllDescendants = (): void => {\r\n        const { nodeOnFocus, nodesSelected } = this.state;\r\n        const { foldAllDescendants, reRender, unselectNodes } = this.props;\r\n\r\n        reRender();\r\n        foldAllDescendants(nodeOnFocus);\r\n        unselectNodes(nodesSelected);\r\n        this.setState({ nodesSelected: [] });\r\n    };\r\n\r\n    foldSelectedNodes = (): void => {\r\n        const { nodesSelected } = this.state;\r\n        const { hideNodes, reRender } = this.props;\r\n\r\n        reRender();\r\n        hideNodes(nodesSelected);\r\n        this.setState({ nodesSelected: [] });\r\n    };\r\n\r\n    unfold = (): void => {\r\n        const { nodeOnFocus } = this.state;\r\n        const { unfoldNodes, reRender } = this.props;\r\n\r\n        reRender();\r\n        unfoldNodes(nodeOnFocus);\r\n\r\n        this.setState({ nodesSelected: [] });\r\n    };\r\n\r\n    changeNodeColor = (color: string): void => {\r\n        const { showingNodes, nodesSelected, nodeOnFocus } = this.state;\r\n        const { applyColor, selectNodes } = this.props;\r\n\r\n        // Select the node in focus to set the color later\r\n        if (!nodesSelected.length && showingNodes[nodeOnFocus]) {\r\n            selectNodes([nodeOnFocus]);\r\n        }\r\n\r\n        applyColor(color);\r\n        this.setState({ nodesSelected: [] });\r\n    };\r\n\r\n    toggleNodeSelection = (id: number): void => {\r\n        let { nodesSelected } = this.state;\r\n        const { visualInfo, unselectNodes, selectNodes } = this.props;\r\n\r\n        if (visualInfo[id].selected) {\r\n            unselectNodes([id]);\r\n            nodesSelected = nodesSelected.filter((nodeId) => nodeId !== id);\r\n        } else {\r\n            selectNodes([id]);\r\n            nodesSelected.push(id);\r\n        }\r\n\r\n        this.setState({ nodesSelected });\r\n    };\r\n\r\n    /*TREE*/\r\n    createTree = (id: number): TreeNode[] => {\r\n        return this.props.createTree(this.state.proof, id);\r\n    };\r\n\r\n    /* UTILS */\r\n    setNodeOnFocus = (id: number): void => {\r\n        this.setState({ nodeOnFocus: id });\r\n    };\r\n\r\n    LineProps = (key: string, from: NodeProps, to: NodeProps): LineProps => ({\r\n        key,\r\n        points: [from.x + 150, from.y, to.x + 150, to.y + 105],\r\n    });\r\n\r\n    saveNodePosition = (nodeID: number): void => {\r\n        const { moveNode } = this.props;\r\n        const { showingNodes } = this.state;\r\n\r\n        const thisNode = showingNodes[nodeID];\r\n        moveNode({ id: nodeID, x: thisNode.props.x, y: thisNode.props.y });\r\n    };\r\n\r\n    updateNodePosition = (key: number, x: number, y: number): void => {\r\n        const { showingNodes, showingEdges } = this.state;\r\n\r\n        showingNodes[key] = <Node {...{ ...showingNodes[key].props, x, y }} />;\r\n\r\n        Object.keys(showingEdges)\r\n            .filter((edgeKey) => edgeKey.indexOf(key.toString()) !== -1)\r\n            .forEach((edge) => {\r\n                const [from, to] = edge.split('->').map((x) => parseInt(x));\r\n                showingEdges[edge] = Line(this.LineProps(edge, showingNodes[from].props, showingNodes[to].props));\r\n            });\r\n        this.setState({ showingNodes, showingEdges });\r\n    };\r\n\r\n    handleKeyDown = (e: React.KeyboardEvent) => {\r\n        const { undo } = this.props;\r\n        // CTRL + Z\r\n        if (e.ctrlKey && e.key.toLowerCase() === 'z') {\r\n            undo();\r\n        }\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const { canvasSize, stage, showingNodes, showingEdges, nodesSelected, nodeOnFocus, proof } = this.state;\r\n        const color = showingNodes[nodeOnFocus] ? showingNodes[nodeOnFocus].props.color : '';\r\n        const found = proof.find((o) => o.id === nodeOnFocus);\r\n\r\n        return (\r\n            <div tabIndex={1} onKeyDown={this.handleKeyDown}>\r\n                <Menu\r\n                    unfold={this.unfold}\r\n                    foldSelectedNodes={this.foldSelectedNodes}\r\n                    foldAllDescendants={this.foldAllDescendants}\r\n                    changeNodeColor={this.changeNodeColor}\r\n                    options={{\r\n                        unfold: showingNodes[nodeOnFocus] ? Boolean(showingNodes[nodeOnFocus].props.nHided) : false,\r\n                        foldSelected: nodesSelected.length && nodesSelected.includes(nodeOnFocus) ? true : false,\r\n                        foldAllDescendants:\r\n                            Boolean(found?.children.length) && !Boolean(found?.hiddenNodes?.length) && found?.id != 0,\r\n                    }}\r\n                    currentColor={color}\r\n                ></Menu>\r\n                <Stage\r\n                    draggable\r\n                    onDragMove={() => null}\r\n                    onDragEnd={(e) =>\r\n                        this.setState({\r\n                            stage: {\r\n                                stageScale: this.state.stage.stageScale,\r\n                                stageX: e.target.x(),\r\n                                stageY: e.target.y(),\r\n                            },\r\n                        })\r\n                    }\r\n                    width={canvasSize.width}\r\n                    height={canvasSize.height}\r\n                    onWheel={(e) => this.setState({ stage: handleWheel(e) })}\r\n                    scaleX={stage.stageScale}\r\n                    scaleY={stage.stageScale}\r\n                    x={stage.stageX}\r\n                    y={stage.stageY}\r\n                    onContextMenu={(e) => e.evt.preventDefault()}\r\n                >\r\n                    <Layer>\r\n                        {Object.keys(showingEdges).length > 0 &&\r\n                            Object.keys(showingEdges).map(function (key) {\r\n                                return showingEdges[key];\r\n                            })}\r\n                        {Object.keys(showingNodes).length > 0 &&\r\n                            Object.keys(showingNodes).map(\r\n                                (value: string): JSX.Element => showingNodes[parseInt(value)],\r\n                            )}\r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: ReduxState, ownProps: CanvasProps) {\r\n    return {\r\n        visualInfo: selectVisualInfo(state),\r\n        nodeFindData: selectFindData(state),\r\n        renderData: selectRenderData(state),\r\n        spinner: selectSpinner(state),\r\n        selectData: selectSelectData(state),\r\n        ...ownProps,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideNodes,\r\n    unfoldNodes,\r\n    foldAllDescendants,\r\n    setVisualInfo,\r\n    findNode,\r\n    setSelectArea,\r\n    selectByArea,\r\n    reRender,\r\n    addRenderCount,\r\n    blockRenderNewFile,\r\n    setSpinner,\r\n    undo,\r\n    selectNodes,\r\n    unselectNodes,\r\n    applyColor,\r\n    moveNode,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { useEffect, useReducer, useState } from 'react';\r\n\r\nimport { Classes, Tree, TreeNodeInfo } from '@blueprintjs/core';\r\nimport { TreeProps } from '../../interfaces/interfaces';\r\nimport { castProofNodeToTreeNode } from '../VisualizerStage/VisualizerStage';\r\n\r\nconst VisualizerTree: React.FC<TreeProps> = ({ darkTheme, proof, positionMap, content, setNodeInfo }: TreeProps) => {\r\n    // STATES:\r\n    const [, forceUpdate] = useReducer((x) => x + 1, 0);\r\n    const [nodes, setNodes] = useState(content);\r\n    const [selected, setSelected] = useState(NaN);\r\n\r\n    // USE EFFECT:\r\n    useEffect(() => setNodes(content), [content]);\r\n\r\n    // UTILS:\r\n    const forEachNode = (nodes: TreeNodeInfo[], callback: (node: TreeNodeInfo) => void) => {\r\n        if (nodes == null) {\r\n            return;\r\n        }\r\n\r\n        for (const node of nodes) {\r\n            callback(node);\r\n            forEachNode(node.childNodes ? node.childNodes : [], callback);\r\n        }\r\n    };\r\n\r\n    const handleNodeClick = (nodeData: any, _nodePath: number[], e: React.MouseEvent<HTMLElement>) => {\r\n        const toBeShow: any = selected !== nodeData.id ? nodeData : nodes[0];\r\n        setNodeInfo({\r\n            rule: toBeShow.rule ? toBeShow.rule : '',\r\n            args: toBeShow.args ? toBeShow.args : '',\r\n            conclusion: toBeShow.conclusion ? toBeShow.conclusion : '',\r\n            nHided: toBeShow.nHided ? toBeShow.nHided : 0,\r\n            nDescendants: toBeShow.descendants,\r\n            hiddenNodes: toBeShow.hiddenNodes,\r\n            dependencies: toBeShow.dependencies,\r\n        });\r\n        const originallySelected = nodeData.isSelected;\r\n\r\n        // Set all the nodes to be not selected\r\n        if (!e.shiftKey) forEachNode(nodes, (n) => (n.isSelected = false));\r\n\r\n        nodeData.isSelected = originallySelected == null ? true : !originallySelected;\r\n        setSelected(selected === nodeData.id ? NaN : nodeData.id);\r\n    };\r\n\r\n    const handleNodeCollapse = (nodeData: TreeNodeInfo) => {\r\n        nodeData.isExpanded = false;\r\n        forceUpdate();\r\n    };\r\n\r\n    const handleNodeExpand = (nodeData: TreeNodeInfo) => {\r\n        nodeData.isExpanded = true;\r\n        if (nodeData.hasCaret && !nodeData.childNodes?.length) {\r\n            const currentNode = proof[positionMap[nodeData.id]];\r\n            currentNode.children.forEach((c) => {\r\n                const child = proof[positionMap[c]];\r\n                nodeData.childNodes?.push(castProofNodeToTreeNode(child));\r\n            });\r\n        }\r\n        forceUpdate();\r\n    };\r\n\r\n    return (\r\n        <div style={{ backgroundColor: darkTheme ? '#394b59' : 'white' }}>\r\n            <Tree\r\n                contents={nodes}\r\n                onNodeClick={handleNodeClick}\r\n                onNodeCollapse={handleNodeCollapse}\r\n                onNodeExpand={handleNodeExpand}\r\n                className={Classes.ELEVATION_0}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerTree;\r\n","interface Line {\r\n    value: string;\r\n    indentLevel: number;\r\n}\r\n\r\nclass Let {\r\n    name: string;\r\n    value: string;\r\n    lines: Line[];\r\n    biggerID: number;\r\n    isExpanded: boolean;\r\n    externalLets: { [key: string]: { let: Let; idx: number[] } };\r\n\r\n    constructor(name: string, letText: string, letsList: { [key: string]: Let }, indices: { [key: number]: string }) {\r\n        this.name = name;\r\n        this.value = letText;\r\n        this.lines = [{ value: letText, indentLevel: 0 }];\r\n        this.biggerID = 0;\r\n        this.isExpanded = false;\r\n\r\n        this.externalLets = {};\r\n        Object.keys(indices).forEach((key) => {\r\n            const numKey = Number(key);\r\n            const letName = indices[numKey];\r\n            this.externalLets[letName] = {\r\n                let: letsList[letName],\r\n                idx: this.externalLets[letName] ? [...this.externalLets[letName].idx, numKey] : [numKey],\r\n            };\r\n        });\r\n    }\r\n\r\n    getTextWidth = (text: string, font: string): number => {\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        let size = 0;\r\n        if (context) {\r\n            context.font = font;\r\n            size = context.measureText(text).width;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    expandValue = (shouldUpdate = false): string => {\r\n        const keyList = Object.keys(this.externalLets).map((key) => this.externalLets[key].let.name);\r\n        let letText = this.value;\r\n\r\n        // Iterate from the last to the first external let\r\n        for (let i = keyList.length - 1; i >= 0; i--) {\r\n            const letName = keyList[i];\r\n\r\n            // For each let, iterate through all the indexes they show up inside the string\r\n            for (let k = this.externalLets[letName].idx.length - 1; k >= 0; k--) {\r\n                const idx = this.externalLets[letName].idx[k];\r\n\r\n                // Expand all the terms\r\n                letText =\r\n                    letText.substring(0, idx) +\r\n                    this.externalLets[letName].let.expandValue() +\r\n                    letText.substring(idx + letName.length, letText.length);\r\n            }\r\n        }\r\n        if (shouldUpdate) {\r\n            this.lines = [{ value: letText, indentLevel: 0 }];\r\n            this.biggerID = 0;\r\n        }\r\n        return letText;\r\n    };\r\n\r\n    expandPartialy = (externalRef: Let, letIdx: number): string => {\r\n        const key = externalRef.name;\r\n        const indentedText = this.printLines();\r\n\r\n        let lastLine = 0,\r\n            count = 0,\r\n            i;\r\n        // Iterates through the first lines until the point we reach the changed line\r\n        for (i = 0; i < this.lines.length; i++) {\r\n            lastLine = this.lines[i].value.length + 4 * this.lines[i].indentLevel + 1;\r\n            count += lastLine;\r\n            if (letIdx < count) break;\r\n        }\r\n        // New index (points to the start of the line content (ignores initial indent white space))\r\n        const newIdx = letIdx - (count - lastLine + 4 * this.lines[i].indentLevel);\r\n\r\n        // Update the new line to the new content\r\n        this.lines[i].value =\r\n            this.lines[i].value.substring(0, newIdx) +\r\n            externalRef.value +\r\n            this.lines[i].value.substring(newIdx + key.length, this.lines[i].value.length);\r\n\r\n        // Returns the indented text with the content to be replaced\r\n        return (\r\n            indentedText.substring(0, letIdx) +\r\n            externalRef.value +\r\n            indentedText.substring(letIdx + key.length, indentedText.length)\r\n        );\r\n    };\r\n\r\n    shrinkValue = (): string => {\r\n        this.lines = [{ value: this.value, indentLevel: 0 }];\r\n        this.biggerID = 0;\r\n        return this.value;\r\n    };\r\n\r\n    fitsTheWindow = (windowSize: number, font: string): boolean => {\r\n        const line = this.lines[this.biggerID];\r\n        const size = this.getTextWidth(`${'    '.repeat(line.indentLevel)}${line.value}`, font);\r\n        return size < windowSize;\r\n    };\r\n\r\n    indent = (windowSize: number, mode: boolean, font: string): string => {\r\n        let someDoesntFit;\r\n        if (mode) someDoesntFit = true;\r\n        else someDoesntFit = this.getTextWidth(this.lines[this.biggerID].value, font) < windowSize ? false : true;\r\n\r\n        // While there are lines that doesn't fit the window size\r\n        while (someDoesntFit) {\r\n            const { lines, biggerID } = this;\r\n            const newLines: Line[] = [];\r\n            const thisLevel = lines[biggerID].indentLevel;\r\n            const thisLine = lines[biggerID].value;\r\n\r\n            let lastSpace = -1,\r\n                lastUsedSpace = -1,\r\n                lastOpenParenthesis = -1,\r\n                indent = lines[biggerID].indentLevel - 1,\r\n                biggestSize = 0,\r\n                newBiggerID = 0;\r\n\r\n            // Iterate through the line and calculate the indentation levels\r\n            for (let i = 0; i < thisLine.length; i++) {\r\n                const c = thisLine[i];\r\n                // Opening parenthesis\r\n                if (c === '(') {\r\n                    indent++;\r\n                    // If it's one of the arguments of the operation\r\n                    if (indent === thisLevel + 1) lastOpenParenthesis = i;\r\n                }\r\n                // Closing parenthesis\r\n                else if (c === ')') {\r\n                    // If it's the end of this line\r\n                    if (indent === thisLevel) {\r\n                        // If the last argument was not inserted\r\n                        if (thisLine[i - 1] !== ')') {\r\n                            newLines.push({\r\n                                value: thisLine.substring(lastSpace + 1, i),\r\n                                indentLevel: indent + 1,\r\n                            });\r\n                        }\r\n                        newLines.push({ value: ')', indentLevel: indent });\r\n                    }\r\n                    // If it's the end of this argument\r\n                    else if (indent === thisLevel + 1) {\r\n                        newLines.push({\r\n                            value: thisLine.substring(lastOpenParenthesis, i + 1),\r\n                            indentLevel: indent,\r\n                        });\r\n                    }\r\n                    indent--;\r\n                }\r\n                // If a new space is detected in the current identation level\r\n                //   and the last argument is not between parenthesis\r\n                else if (c === ' ') {\r\n                    lastSpace = i;\r\n\r\n                    if (indent === thisLevel) {\r\n                        if (thisLine[i - 1] !== ')') {\r\n                            newLines.push({\r\n                                value: thisLine.substring(lastUsedSpace + 1, i),\r\n                                indentLevel: newLines.length ? indent + 1 : indent,\r\n                            });\r\n                        }\r\n                        lastUsedSpace = i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Insert new lines if happend some indentation\r\n            if (newLines.length > 0) this.lines.splice(biggerID, 1, ...newLines);\r\n\r\n            // Find the new biggest line\r\n            this.lines.forEach((line, id) => {\r\n                // Get the size of this new line\r\n                const thisSize = this.getTextWidth(`${'    '.repeat(line.indentLevel)}${line.value}`, font);\r\n                if (thisSize > biggestSize) {\r\n                    biggestSize = thisSize;\r\n                    newBiggerID = id;\r\n                }\r\n            });\r\n\r\n            this.biggerID = newBiggerID;\r\n\r\n            // If the biggest size fits the window or no new line was found (minimal indentation)\r\n            if (biggestSize < windowSize || newLines.length < 1) someDoesntFit = false;\r\n        }\r\n        return this.printLines();\r\n    };\r\n\r\n    groupUp = (): string => {\r\n        let original = '';\r\n        // Group up all the lines into one single string\r\n        this.lines.forEach((line, id, self) => {\r\n            original += line.value;\r\n            if (id < self.length - 1 && self[id + 1].value !== ')') {\r\n                original += ' ';\r\n            }\r\n        });\r\n        return original;\r\n    };\r\n\r\n    printLines = (): string => {\r\n        return this.lines.reduce((ac, line) => (ac += `${'    '.repeat(line.indentLevel)}${line.value}\\n`), '');\r\n    };\r\n}\r\n\r\nexport default Let;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { LetRenderProps } from '../../interfaces/interfaces';\r\nimport { renderLetKind } from '../../interfaces/enum';\r\nimport Let from './let';\r\nimport { Pre } from '@blueprintjs/core';\r\n\r\nconst font = '13px monospace';\r\n\r\nconst LetRender: React.FC<LetRenderProps> = ({\r\n    id,\r\n    toRender,\r\n    letMap,\r\n    shouldExpand,\r\n    shouldRevert,\r\n    dispatchExpansion,\r\n}: LetRenderProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const widthRef = useRef(0);\r\n    const [resizeMode, setResizeMode] = useState(0);\r\n    const [letMapS, setLetMapS] = useState(\r\n        (() => {\r\n            const newMap = { ...letMap };\r\n            if (toRender[0] !== '(' && toRender[toRender.length] !== ')') {\r\n                toRender = `(${toRender})`;\r\n            }\r\n            newMap['this'] = toRender;\r\n            return newMap;\r\n        })(),\r\n    );\r\n\r\n    const initializeLet = (key = 'this', lets: { [key: string]: Let } = {}) => {\r\n        const currentLet = letMapS[key];\r\n        const indices: { [key: number]: string } = {};\r\n\r\n        // Finds all occurences of let in the currentLet\r\n        [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n            if (match.index) indices[match.index] = match[0];\r\n        });\r\n\r\n        // Call recursive for all the external lets\r\n        Object.keys(indices).forEach((indice) => {\r\n            initializeLet(indices[Number(indice)], lets);\r\n        });\r\n\r\n        // If this let was not created yet\r\n        if (Object.keys(lets).indexOf(key) === -1) {\r\n            lets[key] = new Let(key, currentLet, lets, indices);\r\n        }\r\n\r\n        return lets;\r\n    };\r\n    const letsRef = useRef<{ [key: string]: Let }>(initializeLet());\r\n\r\n    // ComponentDidMount\r\n    useEffect(() => {\r\n        // Handler to call on window resize and set the value column width\r\n        function handleResize() {\r\n            const width = widthRef.current;\r\n\r\n            const newWidth = document.getElementsByClassName(`let-render-${id}`)[0].clientWidth - 30;\r\n            width === newWidth ? setResizeMode(1) : width > newWidth ? setResizeMode(0) : setResizeMode(2);\r\n\r\n            widthRef.current = newWidth;\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Expand\r\n        if (shouldExpand) {\r\n            expandAll('this');\r\n            dispatchExpansion({ type: renderLetKind.EXPAND, payload: false });\r\n        }\r\n        // Revert\r\n        else if (shouldRevert) {\r\n            revertLet('this');\r\n            dispatchExpansion({ type: renderLetKind.REVERT, payload: false });\r\n        }\r\n    }, [shouldExpand, shouldRevert]);\r\n\r\n    const expandLet = (parent: string, key: string, letIdx: number) => {\r\n        const lets = letsRef.current;\r\n\r\n        const externalRef = lets[key];\r\n        lets[parent].isExpanded = true;\r\n        letMapS[parent] = lets[parent].expandPartialy(externalRef, letIdx);\r\n        setLetMapS({ ...letMapS });\r\n    };\r\n\r\n    const expandAll = (key: string) => {\r\n        const lets = letsRef.current;\r\n\r\n        lets[key].isExpanded = true;\r\n        letMapS[key] = lets[key].expandValue(true);\r\n        setLetMapS({ ...letMapS });\r\n    };\r\n\r\n    const revertLet = (key: string) => {\r\n        const lets = letsRef.current;\r\n\r\n        // Only when is expanded\r\n        if (lets[key].isExpanded) {\r\n            lets[key].isExpanded = false;\r\n            letMapS[key] = lets[key].shrinkValue();\r\n            setLetMapS({ ...letMapS });\r\n        }\r\n    };\r\n\r\n    const renderLet = (): JSX.Element => {\r\n        const lets = letsRef.current;\r\n        const width = widthRef.current;\r\n        const key = 'this';\r\n\r\n        // Waits for the width to be updated and the DOM element to be updated\r\n        if (width) {\r\n            let currentLet = letMapS[key];\r\n            let indices: { [key: number]: string } = {};\r\n\r\n            // Finds all occurences of let in the currentLet\r\n            [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index !== undefined) indices[match.index] = match[0];\r\n            });\r\n\r\n            // If doesn't fits, then indent\r\n            if (!lets[key].fitsTheWindow(width, font)) {\r\n                currentLet = lets[key].indent(width, true, font);\r\n                letMapS[key] = currentLet;\r\n\r\n                indices = {};\r\n                // Finds all occurences of let in the currentLet after indentation\r\n                [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                    if (match.index) indices[match.index] = match[0];\r\n                });\r\n            }\r\n            // If fits\r\n            else {\r\n                // Only in the momment the page size is growing and the line is broken\r\n                if (resizeMode >= 0 && lets[key].lines.length > 1) {\r\n                    // Reset the line\r\n                    lets[key].lines = [\r\n                        { value: lets[key].isExpanded ? lets[key].groupUp() : lets[key].value, indentLevel: 0 },\r\n                    ];\r\n                    lets[key].biggerID = 0;\r\n\r\n                    // Indent it again\r\n                    currentLet = lets[key].indent(width, false, font);\r\n                    letMapS[key] = currentLet;\r\n\r\n                    indices = {};\r\n                    // Finds all occurences of let in the currentLet after indentation\r\n                    [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                        if (match.index) indices[match.index] = match[0];\r\n                    });\r\n                }\r\n            }\r\n\r\n            const arr: (JSX.Element | string)[] = [];\r\n            let start = 0;\r\n\r\n            // Slice the currentLet into an array with strings and JSX elements\r\n            Object.keys(indices).forEach((index, i, self) => {\r\n                const idx = Number(index);\r\n                const thisLet = indices[idx];\r\n\r\n                // Add the elements to the arr\r\n                arr.push(currentLet.substring(start, idx));\r\n                arr.push(\r\n                    <a\r\n                        className={darkTheme ? 'let-literal-or' : 'let-literal'}\r\n                        onClick={() => {\r\n                            expandLet(key, thisLet, idx);\r\n                        }}\r\n                    >\r\n                        {thisLet}\r\n                    </a>,\r\n                );\r\n                // Defines a new start\r\n                start = idx + thisLet.length;\r\n\r\n                // If it's the last let\r\n                if (i === self.length - 1) {\r\n                    arr.push(currentLet.substring(start, currentLet.length));\r\n                }\r\n            });\r\n\r\n            // If there is a let in this current let\r\n            if (Object.keys(indices).length) {\r\n                return (\r\n                    <span className=\"let-instance\" style={{ overflowWrap: 'break-word' }}>\r\n                        {arr}\r\n                    </span>\r\n                );\r\n            } else {\r\n                return (\r\n                    <span className=\"let-instance\" style={{ overflowWrap: 'break-word' }}>\r\n                        {currentLet}\r\n                    </span>\r\n                );\r\n            }\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    return (\r\n        <Pre\r\n            className={`let-render-${id}`}\r\n            style={{ maxHeight: '300px', overflow: 'auto', margin: '0', whiteSpace: 'pre-wrap' }}\r\n        >\r\n            {renderLet()}\r\n        </Pre>\r\n    );\r\n};\r\n\r\nexport default LetRender;\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\n\r\nimport { Icon, Collapse, Pre } from '@blueprintjs/core';\r\n\r\nimport '../../../scss/VisualizerDirectoryStyle.scss';\r\nimport { useAppSelector } from '../../../store/hooks';\r\nimport { selectTheme } from '../../../store/features/theme/themeSlice';\r\nimport { NodeInfo, DirectoryStyleProps } from '../../../interfaces/interfaces';\r\nimport { drawerHelpersKind, renderLetKind } from '../../../interfaces/enum';\r\nimport VisualizerTree from '../../VisualizerTree/VisualizerTree';\r\nimport { selectLetMap, selectOriginalProof } from '../../../store/features/proof/proofSlice';\r\nimport LetRender from '../../VisualizerLetDrawer/LetRender';\r\n\r\nconst VisualizerDirectoryStyle: React.FC<DirectoryStyleProps> = ({\r\n    proofTree,\r\n    ruleHelper,\r\n    indent,\r\n    translate,\r\n}: DirectoryStyleProps) => {\r\n    const letMap = useAppSelector(selectLetMap);\r\n    const proof = useAppSelector(selectOriginalProof);\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const [nodeInfo, setNodeInfo] = useState<NodeInfo>({\r\n        rule: '',\r\n        args: '',\r\n        conclusion: '',\r\n        nHided: 0,\r\n        nDescendants: 0,\r\n        hiddenNodes: [],\r\n        dependencies: [],\r\n    });\r\n    const [[ruleHelperIsOpen, argsHelperIsOpen, concHelperIsOpen], dispatchHelper] = useReducer(\r\n        (state: boolean[], action: { type: drawerHelpersKind; payload: boolean }): boolean[] => {\r\n            const { type, payload } = action;\r\n\r\n            // Act over all the positions\r\n            if (type === drawerHelpersKind.ALL) {\r\n                for (let i = 0; i < state.length; i++) {\r\n                    state[i] = payload;\r\n                }\r\n            }\r\n            // If wanna set a position\r\n            else if (payload) {\r\n                // Reset everything and set the wanted\r\n                for (let i = 0; i < state.length; i++) {\r\n                    state[i] = i === type ? payload : false;\r\n                }\r\n            }\r\n            // If wanna only reset a position\r\n            else state[type] = payload;\r\n\r\n            return [...state];\r\n        },\r\n        // Rule, args, conclusion\r\n        [false, false, false],\r\n    );\r\n    const [[expandAll, revertAll], dispatchLetExpansion] = useReducer(\r\n        (state: boolean[], action: { type: renderLetKind; payload: boolean }): boolean[] => {\r\n            const { type, payload } = action;\r\n\r\n            for (let i = 0; i < state.length; i++) {\r\n                state[i] = i === type ? payload : false;\r\n            }\r\n\r\n            return [...state];\r\n        },\r\n        // Expand, revert\r\n        [false, false],\r\n    );\r\n    const [positionMap, setMap] = useState<any>({});\r\n    const [renderID, increaseRenderID] = useReducer((x) => x + 1, 0);\r\n\r\n    useEffect(() => {\r\n        const _map: any = {};\r\n        // Map the { [node id]: list array id }\r\n        proof.forEach((n, id) => (_map[n.id] = id));\r\n        setMap(_map);\r\n    }, [proof]);\r\n\r\n    useEffect(() => {\r\n        increaseRenderID();\r\n    }, [nodeInfo]);\r\n\r\n    const nodeInfoTable = () => {\r\n        return (\r\n            <table\r\n                id=\"table-node-info\"\r\n                className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-html-table-striped\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Property</th>\r\n                        <th>Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <strong>RULE </strong>\r\n                            <Icon\r\n                                id=\"icon\"\r\n                                icon=\"help\"\r\n                                onClick={() => {\r\n                                    dispatchHelper({ type: drawerHelpersKind.RULE, payload: !ruleHelperIsOpen });\r\n                                }}\r\n                            ></Icon>\r\n                        </td>\r\n                        <td>\r\n                            {nodeInfo.rule}\r\n                            <Collapse isOpen={ruleHelperIsOpen}>\r\n                                <Pre style={{ maxHeight: '300px', overflow: 'auto' }} id=\"pre-rule\">\r\n                                    {ruleHelper(nodeInfo.rule)}\r\n                                </Pre>\r\n                            </Collapse>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {nodeInfo.args && (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>ARGS</strong>{' '}\r\n                                {nodeInfo.args.indexOf('let') !== -1 ? (\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"translate\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.ARGS,\r\n                                                payload: !argsHelperIsOpen,\r\n                                            });\r\n                                        }}\r\n                                    ></Icon>\r\n                                ) : null}\r\n                            </td>\r\n                            <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                                {nodeInfo.args}\r\n                                {nodeInfo.args.indexOf('let') !== -1 ? (\r\n                                    <Collapse isOpen={argsHelperIsOpen}>\r\n                                        <Pre style={{ maxHeight: '300px', overflow: 'auto' }} id=\"pre-rule\">\r\n                                            {indent(translate(nodeInfo.args))}\r\n                                        </Pre>\r\n                                    </Collapse>\r\n                                ) : null}\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n\r\n                    <tr>\r\n                        <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                            <strong>CONCLUSION</strong>{' '}\r\n                            {nodeInfo.conclusion.indexOf('let') !== -1 ? (\r\n                                <>\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"translate\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.CONC,\r\n                                                payload: !concHelperIsOpen,\r\n                                            });\r\n                                            dispatchLetExpansion({\r\n                                                type: renderLetKind.EXPAND,\r\n                                                payload: true,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"undo\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.CONC,\r\n                                                payload: false,\r\n                                            });\r\n                                            dispatchLetExpansion({\r\n                                                type: renderLetKind.REVERT,\r\n                                                payload: true,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </>\r\n                            ) : null}\r\n                        </td>\r\n                        <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                            {nodeInfo.conclusion.indexOf('let') !== -1 ? (\r\n                                <LetRender\r\n                                    key={renderID}\r\n                                    id={0}\r\n                                    toRender={nodeInfo.conclusion}\r\n                                    letMap={letMap}\r\n                                    shouldExpand={expandAll}\r\n                                    shouldRevert={revertAll}\r\n                                    dispatchExpansion={dispatchLetExpansion}\r\n                                />\r\n                            ) : (\r\n                                nodeInfo.conclusion\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {nodeInfo.nDescendants ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>#DESCENDANTS</strong>\r\n                            </td>\r\n                            <td>{nodeInfo.nDescendants}</td>\r\n                        </tr>\r\n                    ) : null}\r\n\r\n                    {nodeInfo.nHided ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>#HIDDEN</strong>\r\n                            </td>\r\n                            <td>{`[${nodeInfo.hiddenNodes.map((node) => ' ' + node)} ]`}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                    {nodeInfo.dependencies.length ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>DEPENDENCIES</strong>\r\n                            </td>\r\n                            <td>{`${nodeInfo.dependencies.map(\r\n                                (dependency) => ` ${dependency.piId}: [${dependency.depsId.map((dep) => ' ' + dep)} ] `,\r\n                            )}`}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"dir-style\"\r\n            style={{\r\n                backgroundColor: darkTheme ? 'rgb(57, 75, 89)' : 'white',\r\n                height:\r\n                    window.innerHeight - (document.getElementsByClassName('bp3-navbar')[0] as HTMLElement).offsetHeight,\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    width: '50%',\r\n                    height: '100%',\r\n                    float: 'left',\r\n                    clear: 'none',\r\n                    borderRight: '1px solid black',\r\n                    overflow: 'auto',\r\n                }}\r\n            >\r\n                <VisualizerTree\r\n                    darkTheme={darkTheme}\r\n                    proof={proof}\r\n                    positionMap={positionMap}\r\n                    content={proofTree}\r\n                    setNodeInfo={setNodeInfo}\r\n                ></VisualizerTree>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    width: '50%',\r\n                    height: '100%',\r\n                    float: 'left',\r\n                    clear: 'none',\r\n                }}\r\n            >\r\n                {nodeInfoTable()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerDirectoryStyle;\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { SelectOverlayProps } from '../../interfaces/interfaces';\r\n\r\nimport '../../scss/SelectOverlay.scss';\r\nimport { setSelectArea } from '../../store/features/externalCmd/externalCmd';\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nconst overlayColor = '#00000028';\r\n\r\nconst SelectOvelay: React.FC<SelectOverlayProps> = ({ isSelecting, setIsSelecting }: SelectOverlayProps) => {\r\n    const isDraggingRef = useRef(false);\r\n    const [isInverted, setIsInverted] = useState({ x: false, y: false });\r\n    const [start, setStart] = useState({ x: 10, y: 10 });\r\n    const [curPos, setCurPos] = useState({ x: 10, y: 10 });\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (isSelecting) {\r\n            document.body.addEventListener('mouseup', handleOutsideMouseUp);\r\n        } else {\r\n            document.body.removeEventListener('mouseup', handleOutsideMouseUp);\r\n        }\r\n\r\n        function handleOutsideMouseUp(e: MouseEvent) {\r\n            if (isDraggingRef.current) {\r\n                handleMouseUp(e);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            document.body.removeEventListener('mouseup', handleOutsideMouseUp);\r\n        };\r\n    }, [isSelecting]);\r\n\r\n    // Make sure the component restart\r\n    useEffect(() => {\r\n        if (isSelecting) {\r\n            isDraggingRef.current = false;\r\n            setIsInverted({ x: false, y: false });\r\n            setStart({ x: 10, y: 10 });\r\n            setCurPos({ x: 10, y: 10 });\r\n        }\r\n    }, [isSelecting]);\r\n\r\n    const style: any = useMemo(() => {\r\n        return {\r\n            opacity: isSelecting ? 1 : 0,\r\n            pointerEvents: isSelecting ? 'all' : 'none',\r\n        };\r\n    }, [isSelecting]);\r\n\r\n    const handleMouseDown = (e: React.MouseEvent) => {\r\n        const { offsetX, offsetY } = e.nativeEvent;\r\n        isDraggingRef.current = true;\r\n        setStart({ x: offsetX, y: offsetY });\r\n    };\r\n\r\n    const handleMouseUp = (e: React.MouseEvent | MouseEvent) => {\r\n        e.stopPropagation();\r\n        // Turn off the selector\r\n        setIsSelecting({ type: 'set', payload: false });\r\n\r\n        // Call the selection\r\n        let leftX = start.x,\r\n            leftY = start.y,\r\n            rightX = curPos.x,\r\n            rightY = curPos.y;\r\n        if (isInverted.x) {\r\n            leftX = curPos.x;\r\n            rightX = start.x;\r\n        }\r\n        if (isInverted.y) {\r\n            leftY = curPos.y;\r\n            rightY = start.y;\r\n        }\r\n        dispatch(setSelectArea({ upperL: { x: leftX, y: leftY }, lowerR: { x: rightX, y: rightY } }));\r\n    };\r\n\r\n    const handleMove = (e: React.MouseEvent) => {\r\n        const { offsetX, offsetY } = e.nativeEvent;\r\n        setCurPos({ x: offsetX, y: offsetY });\r\n\r\n        if (isDraggingRef.current) {\r\n            let xInverted = false,\r\n                yInverted = false;\r\n            if (start.x > offsetX) {\r\n                xInverted = true;\r\n            }\r\n            if (start.y > offsetY) {\r\n                yInverted = true;\r\n            }\r\n            setIsInverted({ x: xInverted, y: yInverted });\r\n        }\r\n    };\r\n\r\n    const gridColumns = useMemo(() => {\r\n        const difX = Math.abs(start.x - curPos.x);\r\n        return isDraggingRef.current\r\n            ? isInverted.x\r\n                ? `${curPos.x}px ${difX}px 1fr`\r\n                : `${start.x}px ${difX}px 1fr`\r\n            : `${curPos.x}px 2px 1fr`;\r\n    }, [curPos.x]);\r\n    const gridRows = useMemo(() => {\r\n        const difY = Math.abs(start.y - curPos.y);\r\n        return isDraggingRef.current\r\n            ? isInverted.y\r\n                ? `${curPos.y}px ${difY}px 1fr`\r\n                : `${start.y}px ${difY}px 1fr`\r\n            : `${curPos.y}px 2px 1fr`;\r\n    }, [curPos.y]);\r\n    const color = useMemo(() => (isDraggingRef.current ? overlayColor : 'red'), [isDraggingRef.current]);\r\n\r\n    return (\r\n        <div\r\n            className=\"select-overlay\"\r\n            style={{\r\n                ...style,\r\n                gridTemplateColumns: gridColumns,\r\n                gridTemplateRows: gridRows,\r\n            }}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseUp={handleMouseUp}\r\n            onMouseMoveCapture={handleMove}\r\n            draggable={false}\r\n            onDragStart={(e) => e.preventDefault()}\r\n        >\r\n            <div id=\"1\" className=\"square\" style={{ backgroundColor: overlayColor }}></div>\r\n            <div id=\"2\" className=\"square\" style={{ backgroundColor: color }}></div>\r\n            <div id=\"3\" className=\"square\" style={{ backgroundColor: overlayColor }}></div>\r\n            <div id=\"4\" className=\"square\" style={{ backgroundColor: color }}></div>\r\n            <div id=\"5\" className=\"square\" style={{ backgroundColor: color }}></div>\r\n            <div id=\"6\" className=\"square\" style={{ backgroundColor: overlayColor }}></div>\r\n            <div id=\"7\" className=\"square\" style={{ backgroundColor: color }}></div>\r\n            <div id=\"8\" className=\"square\" style={{ backgroundColor: overlayColor }}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectOvelay;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { useEffect, useReducer, useState } from 'react';\r\n\r\nimport { Drawer, Position, Classes, Icon, Collapse, Pre, TreeNodeInfo } from '@blueprintjs/core';\r\nimport Canvas from './Canvas/VisualizerCanvas';\r\nimport VisualizerTree from '../VisualizerTree/VisualizerTree';\r\nimport VisualizerDirectoryStyle from './VisualizerDirectoryStyle/VisualizerDirectoryStyle';\r\n\r\nimport '../../scss/VisualizerStage.scss';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectFileCount } from '../../store/features/file/fileSlice';\r\nimport { selectStyle, selectLetMap, selectProof } from '../../store/features/proof/proofSlice';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { NodeInfo, NodeInterface, TreeNode, VisualizerStageProps } from '../../interfaces/interfaces';\r\nimport { renderLetKind, drawerHelpersKind } from '../../interfaces/enum';\r\nimport LetRender from '../VisualizerLetDrawer/LetRender';\r\nimport SelectOvelay from './SelectOverlay';\r\n\r\nfunction ruleHelper(rule: string) {\r\n    switch (rule.split(' ')[0]) {\r\n        case 'π':\r\n            return 'This node hides some parts of the proof, you can unfold it.';\r\n        case 'ASSUME':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Assumption (a leaf)\\nChildren: none\\nArguments: (F)\\n--------------\\nConclusion: F\\n\\nThis rule has special status, in that an application of assume is an open leaf in a proof that is not (yet) justified. An assume leaf is analogous to a free variable in a term, where we say \"F is a free assumption in proof P\" if it contains an application of F that is not  bound by SCOPE.'\r\n            );\r\n        case 'SCOPE':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Scope (a binder for assumptions)\\nChildren: (P:F)\\nArguments: (F1, ..., Fn)\\n--------------\\nConclusion: (=> (and F1 ... Fn) F) or (not (and F1 ... Fn)) if F is false\\n\\nThis rule has a dual purpose with ASSUME. It is a way to close assumptions in a proof. We require that F1 ... Fn are free assumptions in P and say that F1, ..., Fn are not free in (SCOPE P). In other words, they are bound by this application. For example, the proof node: (SCOPE (ASSUME F) :args F) has the conclusion (=> F F) and has no free assumptions. More generally, a proof with no free assumptions always concludes a valid formula.'\r\n            );\r\n        case 'SUBS':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Substitution\\nChildren: (P1:F1, ..., Pn:Fn)\\nArguments: (t, (ids)?)\\n---------------------------------------------------------------\\nConclusion: (= t t*sigma{ids}(Fn)*...*sigma{ids}(F1))\\nwhere sigma{ids}(Fi) are substitutions, which notice are applied in reverse order. Notice that ids is a MethodId identifier, which determines how to convert the formulas F1, ..., Fn into substitutions.'\r\n            );\r\n        case 'REWRITE':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Rewrite\\nChildren: none\\nArguments: (t, (idr)?)\\n----------------------------------------\\nConclusion: (= t Rewriter{idr}(t))\\nwhere idr is a MethodId identifier, which determines the kind of rewriter to apply, e.g. Rewriter::rewrite.'\r\n            );\r\n        case 'EVALUATE':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Evaluate\\nChildren: none\\n\\nArguments: (t)\\n----------------------------------------\\nConclusion: (= t Evaluator::evaluate(t))\\nNote this is equivalent to: (REWRITE t MethodId::RW_EVALUATE)'\r\n            );\r\n        case 'MACRO_SR_EQ_INTRO':\r\n            return (\r\n                rule +\r\n                \"\\n\\nIn this rule, we provide a term t and conclude that it is equal to its rewritten form under a (proven) substitution.\\n\\nChildren: (P1:F1, ..., Pn:Fn)\\nArguments: (t, (ids (ida (idr)?)?)?)\\n---------------------------------------------------------------\\nConclusion: (= t t')\\nwhere t' is Rewriter{idr}(t*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1))\\n\\nIn other words, from the point of view of Skolem forms, this rule transforms t to t' by standard substitution + rewriting.\\n\\nThe arguments ids, ida and idr are optional and specify the identifier of the substitution, the substitution application and rewriter respectively to be used.\"\r\n            );\r\n        case 'MACRO_SR_PRED_INTRO':\r\n            return (\r\n                rule +\r\n                \"\\n\\nIn this rule, we provide a formula F and conclude it, under the condition that it rewrites to true under a proven substitution.\\n\\nChildren: (P1:F1, ..., Pn:Fn)\\nArguments: (F, (ids (ida (idr)?)?)?)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere Rewriter{idr}(F*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1)) == true where ids and idr are method identifiers.\\n\\nMore generally, this rule also holds when: Rewriter::rewrite(toOriginal(F')) == true where F' is the result of the left hand side of the equality above. Here, notice that we apply rewriting on the original form of F', meaning that this rule may conclude an F whose Skolem form is justified by the definition of its (fresh) Skolem variables. For example, this rule may justify the conclusion (= k t) where k is the purification Skolem for t, e.g. where the original form of k is t.\\n\\nFurthermore, notice that the rewriting and substitution is applied only within the side condition, meaning the rewritten form of the original form of F does not escape this rule.\"\r\n            );\r\n        case 'MACRO_SR_PRED_ELIM':\r\n            return (\r\n                rule +\r\n                \"\\n\\nIn this rule, if we have proven a formula F, then we may conclude its rewritten form under a proven substitution.\\n\\nChildren: (P1:F, P2:F1, ..., P_{n+1}:Fn)\\nArguments: ((ids (ida (idr)?)?)?)\\n----------------------------------------\\nConclusion: F'\\nwhere F' is Rewriter{idr}(F*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1)). where ids and idr are method identifiers.\\n\\nWe rewrite only on the Skolem form of F, similar to MACRO_SR_EQ_INTRO.\"\r\n            );\r\n        case 'MACRO_SR_PRED_TRANSFORM':\r\n            return (\r\n                rule +\r\n                \"\\n\\nIn this rule, if we have proven a formula F, then we may provide a formula G and conclude it if F and G are equivalent after rewriting under a proven substitution.\\n\\nChildren: (P1:F, P2:F1, ..., P_{n+1}:Fn)\\nArguments: (G, (ids (ida (idr)?)?)?)\\n----------------------------------------\\nConclusion: G\\nwhere Rewriter{idr}(F*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1)) == Rewriter{idr}(G*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1))\\n\\nMore generally, this rule also holds when:\\n  Rewriter::rewrite(toOriginal(F')) == Rewriter::rewrite(toOriginal(G'))\\nwhere F' and G' are the result of each side of the equation above. Here, original forms are used in a similar manner to MACRO_SR_PRED_INTRO above.\"\r\n            );\r\n        case 'REMOVE_TERM_FORMULA_AXIOM':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Remove Term Formulas Axiom\\nChildren: none\\nArguments: (t)\\n---------------------------------------------------------------\\nConclusion: RemoveTermFormulas::getAxiomFor(t).'\r\n            );\r\n        case 'THEORY_LEMMA':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Theory lemma\\nChildren: none\\nArguments: (F, tid)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is a (T-valid) theory lemma generated by theory with TheoryId tid. This is a \"coarse-grained\" rule that is used as a placeholder if a theory did not provide a proof for a lemma or conflict.'\r\n            );\r\n        case 'THEORY_REWRITE':\r\n            return (\r\n                rule +\r\n                \"\\n\\n======== Theory Rewrite\\nChildren: none\\nArguments: (F, tid, rid)\\n----------------------------------------\\nConclusion: F\\nwhere F is an equality of the form (= t t') where t' is obtained by applying the kind of rewriting given by the method identifier rid, which is one of: { RW_REWRITE_THEORY_PRE, RW_REWRITE_THEORY_POST, RW_REWRITE_EQ_EXT } Notice that the checker for this rule does not replay the rewrite to ensure correctness, since theory rewriter methods are not static. For example, the quantifiers rewriter involves constructing new bound variables that are not guaranteed to be consistent on each call.\"\r\n            );\r\n        case 'PREPROCESS':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality of the form t = t' where t was replaced by t' based on some preprocessing pass, or otherwise F was added as a new assertion by some preprocessing pass.\"\r\n            );\r\n        case 'PREPROCESS_LEMMA':\r\n            return (\r\n                rule +\r\n                '\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F was added as a new assertion by some preprocessing pass.'\r\n            );\r\n        case 'THEORY_PREPROCESS':\r\n            return (\r\n                rule +\r\n                '\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality of the form t = Theory::ppRewrite(t) for some theory. Notice this is a \"trusted\" rule.'\r\n            );\r\n        case 'THEORY_PREPROCESS_LEMMA':\r\n            return (\r\n                rule +\r\n                '\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F was added as a new assertion by theory preprocessing.'\r\n            );\r\n        case 'THEORY_EXPAND_DEF':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality of the form t = t' where t was replaced by t' based on theory expand definitions.\"\r\n            );\r\n        case 'WITNESS_AXIOM':\r\n            return (\r\n                rule +\r\n                '\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an existential (exists ((x T)) (P x)) used for introducing a witness term (witness ((x T)) (P x)).'\r\n            );\r\n        case 'TRUST_REWRITE':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality (= t t') that holds by a form of rewriting that could not be replayed during proof postprocessing.\"\r\n            );\r\n        case 'TRUST_SUBS':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality (= t t') that holds by a form of substitution that could not be replayed during proof postprocessing.\"\r\n            );\r\n        case 'TRUST_SUBS_MAP':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality (= t t') that holds by a form of substitution that could not be determined by the TrustSubstitutionMap. This inference may contain possibly multiple children corresponding to the formulas used to derive the substitution.\"\r\n            );\r\n        case 'TRUST_SUBS_EQ':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is a solved equality of the form (= x t) derived as the solved form of F', where F' is given as a child.\"\r\n            );\r\n        case 'SAT_REFUTATION':\r\n            return (\r\n                rule +\r\n                '\\n\\n========= SAT Refutation for assumption-based unsat cores\\nChildren: (P1, ..., Pn)\\nArguments: none\\n---------------------\\nConclusion: false\\nNote: P1, ..., Pn correspond to the unsat core determined by the SAT solver.'\r\n            );\r\n        case 'RESOLUTION':\r\n            return (\r\n                rule +\r\n                \"\\n\\n======== Resolution\\nChildren:\\n(P1:C1, P2:C2)\\nArguments: (pol, L)\\n---------------------\\nConclusion: C\\nwhere\\n- C1 and C2 are nodes viewed as clauses, i.e., either an OR node with each children viewed as a literal or a node viewed as a literal. Note that an OR node could also be a literal.\\n- pol is either true or false, representing the polarity of the pivot on the first clause\\n- L is the pivot of the resolution, which occurs as is (resp. under a NOT) in C1 and negatively (as is) in C2 if pol = true (pol = false).\\nC is a clause resulting from collecting all the literals in C1, minus the first occurrence of the pivot or its negation, and C2, minus the first occurrence of the pivot or its negation, according to the policy above. If the resulting clause has a single literal, that literal itself is the result; if it has no literals, then the result is false; otherwise it's an OR node of the resulting literals.\\n\\nNote that it may be the case that the pivot does not occur in the clauses. In this case the rule is not unsound, but it does not correspond to resolution but rather to a weakening of the clause that did not have a literal eliminated.\"\r\n            );\r\n        case 'CHAIN_RESOLUTION':\r\n            return (\r\n                rule +\r\n                \"\\n\\n======== N-ary Resolution\\nChildren: (P1:C_1, ..., Pm:C_n)\\nArguments: (pol_1, L_1, ..., pol_{n-1}, L_{n-1})\\n---------------------\\nConclusion: C\\nwhere\\n- let C_1 ... C_n be nodes viewed as clauses, as defined above\\n- let \\\"C_1 <>_{L,pol} C_2\\\" represent the resolution of C_1 with C_2 with pivot L and polarity pol, as defined above\\n- let C_1' = C_1 (from P1),\\n- for each i > 1, let C_i' = C_{i-1} <>_{L_{i-1}, pol_{i-1}} C_i'\\nThe result of the chain resolution is C = C_n'\"\r\n            );\r\n        case 'FACTORING':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Factoring\\nChildren: (P:C1)\\nArguments: ()\\n---------------------\\nConclusion: C2\\nwhere Set representations of C1 and C2 is the same and the number of literals in C2 is smaller than that of C1'\r\n            );\r\n        case 'REORDERING':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Reordering\\nChildren: (P:C1)\\nArguments: (C2)\\n---------------------\\nConclusion: C2\\nwhere Set representations of C1 and C2 are the same and the number of literals in C2 is the same of that of C1'\r\n            );\r\n        case 'MACRO_RESOLUTION':\r\n            return (\r\n                rule +\r\n                \"\\n\\n======== N-ary Resolution + Factoring + Reordering\\nChildren: (P1:C_1, ..., Pm:C_n)\\nArguments: (C, pol_1, L_1, ..., pol_{n-1}, L_{n-1})\\n---------------------\\nConclusion: C\\nwhere\\n- let C_1 ... C_n be nodes viewed as clauses, as defined in RESOLUTION\\n- let \\\"C_1 <>_{L,pol} C_2\\\" represent the resolution of C_1 with C_2 with pivot L and polarity pol, as defined in RESOLUTION\\n- let C_1' be equal, in its set representation, to C_1 (from P1),\\n- for each i > 1, let C_i' be equal, it its set representation, to C_{i-1} <>_{L_{i-1}, pol_{i-1}} C_i'\\nThe result of the chain resolution is C, which is equal, in its set representation, to C_n'\"\r\n            );\r\n        case 'MACRO_RESOLUTION_TRUST':\r\n            return (\r\n                rule +\r\n                \"\\n\\nAs MACRO_RESOLUTION but not checked\\n\\nMACRO_RESOLUTION definition:\\n======== N-ary Resolution + Factoring + Reordering\\nChildren: (P1:C_1, ..., Pm:C_n)\\nArguments: (C, pol_1, L_1, ..., pol_{n-1}, L_{n-1})\\n---------------------\\nConclusion: C\\nwhere\\n- let C_1 ... C_n be nodes viewed as clauses, as defined in RESOLUTION\\n- let \\\"C_1 <>_{L,pol} C_2\\\" represent the resolution of C_1 with C_2 with pivot L and polarity pol, as defined in RESOLUTION\\n- let C_1' be equal, in its set representation, to C_1 (from P1),\\n- for each i > 1, let C_i' be equal, it its set representation, to C_{i-1} <>_{L_{i-1}, pol_{i-1}} C_i'\\nThe result of the chain resolution is C, which is equal, in its set representation, to C_n'\"\r\n            );\r\n        default:\r\n            return rule;\r\n    }\r\n}\r\n\r\nexport function castProofNodeToTreeNode(node: NodeInterface): TreeNode {\r\n    const label = node.hiddenNodes?.length\r\n        ? // Pi node\r\n          `${node.id} : π ➜ ${node.conclusion}`\r\n        : node.dependencies.length\r\n        ? // Node with dependencies\r\n          `${node.id} : β ➜ ${node.conclusion}`\r\n        : //Normal node\r\n          `${node.id} : ${node.conclusion}`;\r\n\r\n    // Create the node tree\r\n    return {\r\n        id: node.id,\r\n        icon: 'graph',\r\n        label: label,\r\n        secondaryLabel: `${node.rule}`,\r\n        rule: node.rule,\r\n        args: node.args,\r\n        conclusion: node.conclusion,\r\n        parentId: node.parents[0],\r\n        descendants: node.descendants - 1,\r\n        nHided: node.hiddenNodes ? node.hiddenNodes.length : 0,\r\n        hiddenNodes: node.hiddenNodes ? node.hiddenNodes.map((n) => n.id) : [],\r\n        childNodes: [],\r\n        dependencies: node.dependencies,\r\n        parentsId: node.parents,\r\n        hasCaret: Boolean(node.descendants - 1),\r\n    };\r\n}\r\n\r\nfunction createTree(proof: NodeInterface[], id: number): TreeNode[] {\r\n    const rootNode = proof.find((o) => o.id === id);\r\n    const tree: TreeNode[] = [];\r\n\r\n    // Make sure found the root node\r\n    if (rootNode) {\r\n        tree.push(castProofNodeToTreeNode(rootNode));\r\n    }\r\n    return tree;\r\n}\r\n\r\nconst VisualizerStage: React.FC<VisualizerStageProps> = ({ disableExternalDrawers }: VisualizerStageProps) => {\r\n    // Proof data\r\n    const letMap = useAppSelector(selectLetMap);\r\n    const proof = useAppSelector(selectProof);\r\n    const fileID = useAppSelector(selectFileCount);\r\n    const style = useAppSelector(selectStyle);\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    // Data structures\r\n    const [proofTree, setProofTree] = useState<TreeNodeInfo[]>([]);\r\n    const [nodeInfo, setNodeInfo] = useState<NodeInfo>({\r\n        rule: '',\r\n        args: '',\r\n        conclusion: '',\r\n        nHided: 0,\r\n        nDescendants: 0,\r\n        hiddenNodes: [],\r\n        dependencies: [],\r\n    });\r\n    const [map, setMap] = useState<any>({});\r\n    // Drawer\r\n    const [[ruleHelperIsOpen, argsHelperIsOpen, concHelperIsOpen], dispatchHelper] = useReducer(\r\n        (state: boolean[], action: { type: drawerHelpersKind; payload: boolean }): boolean[] => {\r\n            const { type, payload } = action;\r\n\r\n            // Act over all the positions\r\n            if (type === drawerHelpersKind.ALL) {\r\n                for (let i = 0; i < state.length; i++) {\r\n                    state[i] = payload;\r\n                }\r\n            }\r\n            // If wanna set a position\r\n            else if (payload) {\r\n                // Reset everything and set the wanted\r\n                for (let i = 0; i < state.length; i++) {\r\n                    state[i] = i === type ? payload : false;\r\n                }\r\n            }\r\n            // If wanna only reset a position\r\n            else state[type] = payload;\r\n\r\n            return [...state];\r\n        },\r\n        // Rule, args, conclusion\r\n        [false, false, false],\r\n    );\r\n    const [[expandAll, revertAll], dispatchLetExpansion] = useReducer(\r\n        (state: boolean[], action: { type: renderLetKind; payload: boolean }): boolean[] => {\r\n            const { type, payload } = action;\r\n\r\n            for (let i = 0; i < state.length; i++) {\r\n                state[i] = i === type ? payload : false;\r\n            }\r\n\r\n            return [...state];\r\n        },\r\n        // Expand, revert\r\n        [false, false],\r\n    );\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    const [tree, setTree] = useState<TreeNodeInfo[]>([]);\r\n    // Select overlay\r\n    const [isSelecting, setIsSelecting] = useReducer(\r\n        (state: boolean, action: { type: 'invert' | 'set'; payload: boolean }): boolean => {\r\n            switch (action.type) {\r\n                case 'invert':\r\n                    return !state;\r\n                case 'set':\r\n                    return action.payload;\r\n            }\r\n        },\r\n        false,\r\n    );\r\n\r\n    // At the beggining\r\n    useEffect(() => {\r\n        function handleKeyDown(e: KeyboardEvent) {\r\n            if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === 's' && style === 'graph') {\r\n                disableExternalDrawers();\r\n                setDrawerIsOpen(false);\r\n                setIsSelecting({ type: 'invert', payload: false });\r\n            }\r\n        }\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => window.removeEventListener('keydown', handleKeyDown);\r\n    }, []);\r\n    // Make sure that a new tree is created only when a new dot is used\r\n    useEffect(() => setProofTree(createTree(proof, 0)), [fileID]);\r\n    useEffect(() => {\r\n        const _map: any = {};\r\n        // Map the { [node id]: list array id }\r\n        proof.forEach((n, id) => (_map[n.id] = id));\r\n        setMap(_map);\r\n    }, [proof]);\r\n\r\n    const openDrawer = (nodeInfo: NodeInfo, tree?: TreeNodeInfo[]) => {\r\n        setNodeInfo(nodeInfo);\r\n        setTree(tree ? tree : []);\r\n        setDrawerIsOpen(true);\r\n    };\r\n\r\n    const nodeInfoTable = (): JSX.Element => {\r\n        return (\r\n            <table\r\n                id=\"table-node-info\"\r\n                className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-html-table-striped\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Property</th>\r\n                        <th>Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <strong>RULE </strong>\r\n                            <Icon\r\n                                id=\"icon\"\r\n                                icon=\"help\"\r\n                                onClick={() => {\r\n                                    dispatchHelper({ type: drawerHelpersKind.RULE, payload: !ruleHelperIsOpen });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            {nodeInfo.rule}\r\n                            <Collapse isOpen={ruleHelperIsOpen}>\r\n                                <Pre style={{ maxHeight: '300px', overflow: 'auto' }} id=\"pre-rule\">\r\n                                    {ruleHelper(nodeInfo.rule)}\r\n                                </Pre>\r\n                            </Collapse>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {nodeInfo.args && (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>ARGS</strong>{' '}\r\n                                {nodeInfo.args.indexOf('let') !== -1 ? (\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"translate\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.ARGS,\r\n                                                payload: !argsHelperIsOpen,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                ) : null}\r\n                            </td>\r\n                            <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                                {nodeInfo.args}\r\n                                {nodeInfo.args.indexOf('let') !== -1 ? (\r\n                                    <Collapse isOpen={argsHelperIsOpen}>\r\n                                        <Pre style={{ maxHeight: '300px', overflow: 'auto' }} id=\"pre-rule\">\r\n                                            {nodeInfo.args}\r\n                                        </Pre>\r\n                                    </Collapse>\r\n                                ) : null}\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n\r\n                    <tr>\r\n                        <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                            <strong>CONCLUSION</strong>{' '}\r\n                            {nodeInfo.conclusion.indexOf('let') !== -1 ? (\r\n                                <>\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"translate\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.CONC,\r\n                                                payload: !concHelperIsOpen,\r\n                                            });\r\n                                            dispatchLetExpansion({\r\n                                                type: renderLetKind.EXPAND,\r\n                                                payload: true,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"undo\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.CONC,\r\n                                                payload: false,\r\n                                            });\r\n                                            dispatchLetExpansion({\r\n                                                type: renderLetKind.REVERT,\r\n                                                payload: true,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </>\r\n                            ) : null}\r\n                        </td>\r\n                        <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                            {nodeInfo.conclusion.indexOf('let') !== -1 ? (\r\n                                <LetRender\r\n                                    id={0}\r\n                                    toRender={nodeInfo.conclusion}\r\n                                    letMap={letMap}\r\n                                    shouldExpand={expandAll}\r\n                                    shouldRevert={revertAll}\r\n                                    dispatchExpansion={dispatchLetExpansion}\r\n                                />\r\n                            ) : (\r\n                                nodeInfo.conclusion\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {nodeInfo.nDescendants ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>#DESCENDANTS</strong>\r\n                            </td>\r\n                            <td>{nodeInfo.nDescendants}</td>\r\n                        </tr>\r\n                    ) : null}\r\n\r\n                    {nodeInfo.nHided ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>#HIDDEN</strong>\r\n                            </td>\r\n                            <td>{`[${nodeInfo.hiddenNodes.map((node) => ' ' + node)} ]`}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                    {nodeInfo.dependencies.length ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>DEPENDENCIES</strong>\r\n                            </td>\r\n                            <td>{`${nodeInfo.dependencies.map(\r\n                                (dependency) => ` ${dependency.piId}: [${dependency.depsId.map((dep) => ' ' + dep)} ] `,\r\n                            )}`}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div onContextMenu={(e) => e.preventDefault()}>\r\n            {proof.length > 1 && (\r\n                <>\r\n                    {style === 'graph' ? (\r\n                        <div style={{ height: '100%', position: 'relative' }}>\r\n                            <SelectOvelay isSelecting={isSelecting} setIsSelecting={setIsSelecting} />\r\n                            <Canvas key={fileID} proof={proof} openDrawer={openDrawer} createTree={createTree} />\r\n                        </div>\r\n                    ) : (\r\n                        <VisualizerDirectoryStyle\r\n                            proofTree={proofTree}\r\n                            ruleHelper={ruleHelper}\r\n                            indent={() => ''}\r\n                            translate={() => ''}\r\n                        />\r\n                    )}\r\n                    <Drawer\r\n                        className={darkTheme ? 'bp3-dark' : ''}\r\n                        autoFocus={true}\r\n                        canEscapeKeyClose={true}\r\n                        canOutsideClickClose={true}\r\n                        enforceFocus={true}\r\n                        hasBackdrop={false}\r\n                        isOpen={drawerIsOpen}\r\n                        position={Position.BOTTOM}\r\n                        usePortal={true}\r\n                        onClose={(e) => {\r\n                            e.preventDefault();\r\n                            setDrawerIsOpen(false);\r\n                            dispatchHelper({ type: drawerHelpersKind.ALL, payload: false });\r\n                        }}\r\n                        icon=\"info-sign\"\r\n                        title=\"Node info\"\r\n                    >\r\n                        <div className={Classes.DRAWER_BODY}>\r\n                            <div style={{ maxHeight: '500px', overflow: 'auto' }}>\r\n                                <VisualizerTree\r\n                                    darkTheme={darkTheme}\r\n                                    proof={proof}\r\n                                    positionMap={map}\r\n                                    content={tree}\r\n                                    setNodeInfo={setNodeInfo}\r\n                                />\r\n                            </div>\r\n                            <div className={Classes.DIALOG_BODY}>{nodeInfoTable()}</div>\r\n                        </div>\r\n                    </Drawer>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerStage;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Classes } from '@blueprintjs/core';\r\n\r\nimport Let from './let';\r\nimport '../../scss/Let.scss';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { selectLetMap } from '../../store/features/proof/proofSlice';\r\nimport { DrawerVisualizerTabProps } from '../../interfaces/interfaces';\r\n\r\nconst font =\r\n    '14px / 18px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", Icons16, sans-serif';\r\n\r\nconst VisualizerLetDrawer: React.FC<DrawerVisualizerTabProps> = ({ shouldResize }: DrawerVisualizerTabProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const widthRef = useRef(0);\r\n    const [resizeMode, setResizeMode] = useState(0);\r\n\r\n    const [letMap, setLetMap] = useState({ ...useAppSelector(selectLetMap) });\r\n    const letsRef = useRef<{ [key: string]: Let }>({});\r\n\r\n    // Handler to call on window resize and set the value column width\r\n    function handleResize() {\r\n        const width = widthRef.current;\r\n\r\n        // -22 from the fixed padding size\r\n        const newWidth = document.getElementsByClassName('letMap-value-column')[0].clientWidth - 24;\r\n        width === newWidth ? setResizeMode(1) : width > newWidth ? setResizeMode(0) : setResizeMode(2);\r\n\r\n        widthRef.current = newWidth;\r\n    }\r\n\r\n    // ComponentDidMount\r\n    useEffect(() => {\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Init the let ref\r\n        Object.keys(letMap).forEach((key) => {\r\n            const currentLet = letMap[key];\r\n            const indices: { [key: number]: string } = {};\r\n            // Finds all occurences of let in the currentLet\r\n            [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n\r\n            letsRef.current[key] = new Let(key, currentLet, letsRef.current, indices);\r\n        });\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleResize();\r\n    }, [shouldResize]);\r\n\r\n    const expandLet = (parent: string, key: string, letIdx: number) => {\r\n        const lets = letsRef.current;\r\n\r\n        const externalRef = lets[key];\r\n        lets[parent].isExpanded = true;\r\n        letMap[parent] = lets[parent].expandPartialy(externalRef, letIdx);\r\n        setLetMap({ ...letMap });\r\n    };\r\n\r\n    const expandAll = (key: string) => {\r\n        const thisLet = letsRef.current[key];\r\n        thisLet.isExpanded = true;\r\n        letMap[key] = thisLet.expandValue(true);\r\n        setLetMap({ ...letMap });\r\n    };\r\n\r\n    const revertLet = (key: string) => {\r\n        const thisLet = letsRef.current[key];\r\n        // Only when is expanded\r\n        if (thisLet.isExpanded) {\r\n            thisLet.isExpanded = false;\r\n            letMap[key] = thisLet.shrinkValue();\r\n            setLetMap({ ...letMap });\r\n        }\r\n    };\r\n\r\n    const renderLet = (key: string): JSX.Element => {\r\n        const lets = letsRef.current;\r\n        const width = widthRef.current;\r\n\r\n        // Waits for the width to be updated and the DOM element to be updated\r\n        if (width) {\r\n            let currentLet = letMap[key];\r\n            const thisLet = lets[key];\r\n\r\n            // If doesn't fits, then indent\r\n            if (!thisLet.fitsTheWindow(width, font)) {\r\n                currentLet = thisLet.indent(width, true, font);\r\n                letMap[key] = currentLet;\r\n            }\r\n            // If fits, then only in the momment the page size is growing and the line is broken\r\n            else if (resizeMode >= 0 && thisLet.lines.length > 1) {\r\n                // Reset the line\r\n                thisLet.lines = [{ value: thisLet.isExpanded ? thisLet.groupUp() : thisLet.value, indentLevel: 0 }];\r\n                thisLet.biggerID = 0;\r\n\r\n                // Indent it again\r\n                currentLet = thisLet.indent(width, false, font);\r\n                letMap[key] = currentLet;\r\n            }\r\n\r\n            // Finds all occurences of let in the currentLet\r\n            const indices: { [key: number]: string } = {};\r\n            [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n\r\n            const arr: (JSX.Element | string)[] = [];\r\n            let start = 0;\r\n            // Slice the currentLet into an array with strings and JSX elements\r\n            Object.keys(indices).forEach((index, i, self) => {\r\n                const idx = Number(index);\r\n                const thisLet = indices[idx];\r\n\r\n                // Add the elements to the arr\r\n                arr.push(currentLet.substring(start, idx));\r\n                arr.push(\r\n                    <a\r\n                        className={darkTheme ? 'let-literal-or' : 'let-literal'}\r\n                        onClick={() => {\r\n                            expandLet(key, thisLet, idx);\r\n                        }}\r\n                    >\r\n                        {thisLet}\r\n                    </a>,\r\n                );\r\n                // Defines a new start\r\n                start = idx + thisLet.length;\r\n\r\n                // If it's the last let\r\n                if (i === self.length - 1) {\r\n                    arr.push(currentLet.substring(start, currentLet.length));\r\n                }\r\n            });\r\n\r\n            // If there is a let in this current let\r\n            if (Object.keys(indices).length) {\r\n                return <span className=\"let-instance\">{arr}</span>;\r\n            } else {\r\n                return <span className=\"let-instance\">{currentLet}</span>;\r\n            }\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    return (\r\n        <div className={Classes.DIALOG_BODY}>\r\n            <table\r\n                id=\"table-node-info-2\"\r\n                className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-html-table-striped\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ width: '50px' }}>Property</th>\r\n                        <th className=\"letMap-value-column\">Value</th>\r\n                        <th style={{ width: '100px' }}>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(letMap).map((key, id) => {\r\n                        return (\r\n                            <tr key={id}>\r\n                                <td>\r\n                                    <strong>{key}</strong>\r\n                                </td>\r\n                                <td style={{ width: '100%', whiteSpace: 'pre-wrap' }}>{renderLet(key)}</td>\r\n                                <td style={{ width: '100px', height: '100%' }}>\r\n                                    <Button\r\n                                        onClick={() => expandAll(key)}\r\n                                        className=\"bp3-minimal\"\r\n                                        icon=\"translate\"\r\n                                        text=\"Expand\"\r\n                                    />\r\n                                    <Button\r\n                                        onClick={() => revertLet(key)}\r\n                                        className=\"bp3-minimal\"\r\n                                        icon=\"undo\"\r\n                                        text=\"Revert\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerLetDrawer;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Classes } from '@blueprintjs/core';\r\nimport { selectLetMap, selectTheoryLemmas } from '../../store/features/proof/proofSlice';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport Let from '../VisualizerLetDrawer/let';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { DrawerVisualizerTabProps } from '../../interfaces/interfaces';\r\n\r\nconst font =\r\n    '14px / 18px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", Icons16, sans-serif';\r\n\r\nconst VisualizerTheoryLemma: React.FC<DrawerVisualizerTabProps> = ({ shouldResize }: DrawerVisualizerTabProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const letMap = useAppSelector(selectLetMap);\r\n    const widthRef = useRef(0);\r\n\r\n    const [theoryLemmas, setTheoryLemmas] = useState([...useAppSelector(selectTheoryLemmas)]);\r\n    const [resizeMode, setResizeMode] = useState(0);\r\n    const letsRef = useRef<{ [key: string]: Let }>({});\r\n\r\n    // Handler to call on window resize and set the value column width\r\n    function handleResize() {\r\n        const width = widthRef.current;\r\n\r\n        // -22 from the fixed padding size\r\n        const newWidth = document.getElementsByClassName('theoryLemma-value-column')[0].clientWidth - 24;\r\n        width === newWidth ? setResizeMode(1) : width > newWidth ? setResizeMode(0) : setResizeMode(2);\r\n\r\n        widthRef.current = newWidth;\r\n    }\r\n\r\n    // ComponentDidMount\r\n    useEffect(() => {\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Init the lets\r\n        Object.keys(letMap).forEach((key) => {\r\n            const currentLet = letMap[key];\r\n\r\n            const indices: { [key: number]: string } = {};\r\n            // Finds all occurences of let in the currentLet\r\n            [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n            letsRef.current[key] = new Let(key, currentLet, letsRef.current, indices);\r\n        });\r\n\r\n        // Init the theory lemmas\r\n        theoryLemmas.forEach((tl, id) => {\r\n            const indices: { [key: number]: string } = {};\r\n            // Finds all occurences of let in the currentTL\r\n            [...tl.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n\r\n            letsRef.current[id] = new Let(String(id), tl, letsRef.current, indices);\r\n        });\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleResize();\r\n    }, [shouldResize]);\r\n\r\n    const expandLet = (parent: number, key: string, letIdx: number) => {\r\n        const lets = letsRef.current;\r\n        const externalRef = lets[key];\r\n        lets[parent].isExpanded = true;\r\n        theoryLemmas[parent] = lets[parent].expandPartialy(externalRef, letIdx);\r\n        setTheoryLemmas([...theoryLemmas]);\r\n    };\r\n\r\n    const expandAll = (key: number) => {\r\n        const thisLet = letsRef.current[key];\r\n        thisLet.isExpanded = true;\r\n        theoryLemmas[key] = thisLet.expandValue(true);\r\n        setTheoryLemmas([...theoryLemmas]);\r\n    };\r\n\r\n    const revertLet = (key: number) => {\r\n        const thisLet = letsRef.current[key];\r\n        // Only when is expanded\r\n        if (thisLet.isExpanded) {\r\n            thisLet.isExpanded = false;\r\n            theoryLemmas[key] = thisLet.shrinkValue();\r\n            setTheoryLemmas([...theoryLemmas]);\r\n        }\r\n    };\r\n\r\n    const renderLet = (key: number): JSX.Element => {\r\n        const lets = letsRef.current;\r\n        const width = widthRef.current;\r\n\r\n        // Waits for the width to be updated and the DOM element to be updated\r\n        if (width) {\r\n            let currentTL = theoryLemmas[key];\r\n            const thisLet = lets[key];\r\n\r\n            // If doesn't fits, then indent\r\n            if (!thisLet.fitsTheWindow(width, font)) {\r\n                currentTL = thisLet.indent(width, true, font);\r\n                theoryLemmas[key] = currentTL;\r\n            }\r\n            // If fits, then only in the momment the page size is growing and the line is broken\r\n            else if (resizeMode >= 0 && thisLet.lines.length > 1) {\r\n                // Reset the line\r\n                thisLet.lines = [{ value: thisLet.isExpanded ? thisLet.groupUp() : thisLet.value, indentLevel: 0 }];\r\n                thisLet.biggerID = 0;\r\n\r\n                // Indent it again\r\n                currentTL = thisLet.indent(width, false, font);\r\n                theoryLemmas[key] = currentTL;\r\n            }\r\n\r\n            // Finds all occurences of let in the currentTL\r\n            const indices: { [key: number]: string } = {};\r\n            [...currentTL.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n\r\n            const arr: (JSX.Element | string)[] = [];\r\n            let start = 0;\r\n            // Slice the currentTL into an array with strings and JSX elements\r\n            Object.keys(indices).forEach((index, i, self) => {\r\n                const idx = Number(index);\r\n                const thisLet = indices[idx];\r\n\r\n                // Add the elements to the arr\r\n                arr.push(currentTL.substring(start, idx));\r\n                arr.push(\r\n                    <a\r\n                        className={darkTheme ? 'let-literal-or' : 'let-literal'}\r\n                        onClick={() => {\r\n                            expandLet(key, thisLet, idx);\r\n                        }}\r\n                    >\r\n                        {thisLet}\r\n                    </a>,\r\n                );\r\n                // Defines a new start\r\n                start = idx + thisLet.length;\r\n\r\n                // If it's the last let\r\n                if (i === self.length - 1) {\r\n                    arr.push(currentTL.substring(start, currentTL.length));\r\n                }\r\n            });\r\n\r\n            // If there is a let in this current let\r\n            if (Object.keys(indices).length) {\r\n                return <span className=\"let-instance\">{arr}</span>;\r\n            } else {\r\n                return <span className=\"let-instance\">{currentTL}</span>;\r\n            }\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    return (\r\n        <div className={Classes.DIALOG_BODY}>\r\n            <table\r\n                id=\"table-node-info-2\"\r\n                className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-html-table-striped\"\r\n                style={{ width: '100%', minWidth: '230px' }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"theoryLemma-value-column\">Value</th>\r\n                        <th style={{ width: '100px' }}>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {theoryLemmas.map((tl, id) => {\r\n                        return (\r\n                            <tr key={id}>\r\n                                <td style={{ width: '100%', whiteSpace: 'pre-wrap' }}>{renderLet(id)}</td>\r\n                                <td style={{ width: '100px', height: '100%' }}>\r\n                                    <Button\r\n                                        onClick={() => expandAll(id)}\r\n                                        className=\"bp3-minimal\"\r\n                                        icon=\"translate\"\r\n                                        text=\"Expand\"\r\n                                    />\r\n                                    <Button\r\n                                        onClick={() => revertLet(id)}\r\n                                        className=\"bp3-minimal\"\r\n                                        icon=\"undo\"\r\n                                        text=\"Revert\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerTheoryLemma;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport '../../scss/VisualizersDrawer.scss';\r\nimport { Drawer, Position, Classes, Tabs, Tab, Button } from '@blueprintjs/core';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { DrawerProps } from '../../interfaces/interfaces';\r\n\r\nimport { useAppSelector, useAppDispatch } from '../../store/hooks';\r\nimport { applyView, selectNodeClusters, selectNodes } from '../../store/features/proof/proofSlice';\r\nimport { reRender } from '../../store/features/externalCmd/externalCmd';\r\nimport VisualizerLetDrawer from '../VisualizerLetDrawer/VisualizerLetDrawer';\r\nimport VisualizerTheoryLemma from '../VisualizerTheoryLemma/VisualizerTheoryLemma';\r\nimport { ClusterKind } from '../../interfaces/enum';\r\n\r\nconst VisualizersDrawer: React.FC<DrawerProps> = ({ drawerIsOpen, setDrawerIsOpen }: DrawerProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const nodeClusters = useAppSelector(selectNodeClusters);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [tabID, setTabID] = useState('lm');\r\n    const [resizeFlag, setResizeFlag] = useState([false, false]);\r\n\r\n    useEffect(() => {\r\n        // When drawer is initialized it focus the escape button\r\n        const bt = document\r\n            .getElementsByClassName('visualizers-drawer')[0]\r\n            .getElementsByClassName('bp3-button')[0] as HTMLElement;\r\n        bt.tabIndex = 1;\r\n        bt.focus();\r\n    }, []);\r\n\r\n    const handleTabChange = (newTabId: string, _: any, e: any): void => {\r\n        setTabID(newTabId);\r\n        const newResizeFlag = [...resizeFlag];\r\n        if (newTabId === 'lm') newResizeFlag[0] = !newResizeFlag[0];\r\n        else if (newTabId === 'tl') newResizeFlag[1] = !newResizeFlag[1];\r\n        setResizeFlag(newResizeFlag);\r\n    };\r\n\r\n    const handleClusterClick = (type: ClusterKind): void => {\r\n        if (type === ClusterKind.NONE) {\r\n            dispatch(selectNodes(nodeClusters.reduce((acc: number[], c) => acc.concat(c.hiddenNodes), [])));\r\n        } else {\r\n            dispatch(\r\n                selectNodes(\r\n                    nodeClusters.reduce((acc: number[], c) => (c.type === type ? acc.concat(c.hiddenNodes) : acc), []),\r\n                ),\r\n            );\r\n        }\r\n    };\r\n\r\n    const menus = {\r\n        view: (\r\n            <div className={'view-infos ' + Classes.DIALOG_BODY}>\r\n                <div className=\"bts\">\r\n                    <Button\r\n                        text=\"Full\"\r\n                        onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                            e.preventDefault();\r\n                            dispatch(applyView('full'));\r\n                            dispatch(reRender());\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        text=\"Clustered\"\r\n                        onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                            e.preventDefault();\r\n                            dispatch(applyView('clustered'));\r\n                            dispatch(reRender());\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        text=\"Full and Colored\"\r\n                        onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                            e.preventDefault();\r\n                            dispatch(applyView('colored-full'));\r\n                            dispatch(reRender());\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"views-color-map\">\r\n                    <span onClick={() => handleClusterClick(ClusterKind.NONE)}>⬜ First Scope</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.SAT)}>🟪 SAT</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.CNF)}>🟨 CNF</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.TL)}>🟩 Theory Lemma</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.PP)}>🟫 Pre Processing</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.IN)}>🟦 Input</span>\r\n                </div>\r\n            </div>\r\n        ),\r\n        letMap: <VisualizerLetDrawer shouldResize={resizeFlag[0]} />,\r\n        theoryLemma: <VisualizerTheoryLemma shouldResize={resizeFlag[1]} />,\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            className={`visualizers-drawer ${darkTheme ? 'bp3-dark' : ''}`}\r\n            style={{ maxHeight: '65%', width: '35%' }}\r\n            autoFocus={true}\r\n            canEscapeKeyClose={true}\r\n            canOutsideClickClose={false}\r\n            enforceFocus={false}\r\n            hasBackdrop={false}\r\n            isOpen={drawerIsOpen}\r\n            position={Position.RIGHT}\r\n            usePortal={false}\r\n            onClose={(e) => {\r\n                e.preventDefault();\r\n                setDrawerIsOpen(false);\r\n            }}\r\n            icon=\"applications\"\r\n            title=\"Visualizers\"\r\n        >\r\n            <div className={Classes.DRAWER_BODY}>\r\n                <Tabs id=\"services-tabs\" onChange={handleTabChange} selectedTabId={tabID}>\r\n                    <Tab id=\"vw\" title=\"View\" panel={menus['view']} className=\"services-tab\" />\r\n                    <Tab id=\"lm\" title=\"Let Map\" panel={menus['letMap']} className=\"services-tab\" />\r\n                    <Tab id=\"tl\" title=\"Theory Lemma\" panel={menus['theoryLemma']} className=\"services-tab\" />\r\n                </Tabs>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default VisualizersDrawer;\r\n","import { Button, Divider } from '@blueprintjs/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TutorialPopoverProps } from '../../interfaces/interfaces';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nconst TutorialPopover: React.FC<TutorialPopoverProps> = ({\r\n    setIsOpen,\r\n    nextTutorial,\r\n    stage,\r\n    content,\r\n    W,\r\n    position,\r\n}: TutorialPopoverProps) => {\r\n    const [page, setPage] = useState(0);\r\n\r\n    const darkTheme = useAppSelector(selectTheme);\r\n\r\n    const renderPageBall = (): JSX.Element[] => {\r\n        return content.map((_, id) => (\r\n            <div key={id} className={`page-ball ${id === page && (darkTheme ? 'page-on' : 'page-on-light')}`} />\r\n        ));\r\n    };\r\n\r\n    const changePage = (type: string): void => {\r\n        if (type === '>') setPage(page + 1);\r\n        else setPage(page - 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const parent = document.getElementsByClassName('tutorial-popover')[0];\r\n        // Set the focus\r\n        let bt = parent.getElementsByClassName('next-page progress');\r\n        if (!bt.length) {\r\n            bt = parent.getElementsByClassName('bp3-button');\r\n            // Make sure the next stage button will not be instantly clicked\r\n            setTimeout(() => (bt[bt.length - 1] as HTMLElement).focus(), 150);\r\n        } else {\r\n            (bt[0] as HTMLElement).focus();\r\n        }\r\n    }, [stage, page]);\r\n\r\n    useEffect(() => {\r\n        function handleEsc(e: KeyboardEvent): void {\r\n            e.stopPropagation();\r\n            if (e.key === 'Escape') {\r\n                setIsOpen(false);\r\n            }\r\n        }\r\n        window.addEventListener('keydown', handleEsc, false);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleEsc, false);\r\n        };\r\n    }, []);\r\n\r\n    const insertAnchors = (text: string): (JSX.Element | string)[] => {\r\n        const list: (JSX.Element | string)[] = [];\r\n\r\n        let i = -1,\r\n            last = 0;\r\n        const positions = [0, 0, 0];\r\n        for (let j = 0; j < text.length; j++) {\r\n            if (text[j] === '\\0') {\r\n                i++;\r\n                positions[i] = j;\r\n            }\r\n            if (i === 2) {\r\n                list.push(text.substring(last, positions[0]));\r\n                const name = text.substring(positions[0] + 1, positions[1]);\r\n                const link = text.substring(positions[1] + 1, positions[2]);\r\n                list.push(\r\n                    <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n                        {name}\r\n                    </a>,\r\n                );\r\n\r\n                last = positions[2] + 1;\r\n                i = -1;\r\n            }\r\n        }\r\n        list.push(text.substring(last, text.length));\r\n\r\n        return list;\r\n    };\r\n\r\n    return (\r\n        <div className={darkTheme ? 'bp3-dark' : ''}>\r\n            <div\r\n                className=\"arrow-up\"\r\n                style={{\r\n                    left: position.tW,\r\n                    top: position.y - 7,\r\n                    borderBottomColor: darkTheme ? 'rgb(48, 65, 71)' : 'rgb(255,255,255)',\r\n                }}\r\n            />\r\n            <div\r\n                className=\"arrow-up arrow-2\"\r\n                style={{\r\n                    left: position.tW - 2,\r\n                    top: position.y - 9,\r\n                    borderBottomColor: darkTheme ? '#bdbdbd' : 'rgba(71, 64, 64, 0.281)',\r\n                }}\r\n            />\r\n            <div className=\"tutorial-popover bp3-dialog\" style={{ width: W, left: position.x, top: position.y }}>\r\n                <div className=\"bp3-dialog-header\">\r\n                    <div className=\"cur-page\">{renderPageBall()}</div>\r\n                    <Button icon=\"small-cross\" onClick={() => setIsOpen(false)} tabIndex={-1} />\r\n                </div>\r\n                <body>\r\n                    {page > 0 && (\r\n                        <button\r\n                            className=\"next-page regress\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                changePage('<');\r\n                            }}\r\n                        >\r\n                            {'<'}\r\n                        </button>\r\n                    )}\r\n                    <p className=\"content\">{stage ? content[page] : insertAnchors(content[page])}</p>\r\n                    {page < content.length - 1 && (\r\n                        <button\r\n                            className=\"next-page progress\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                changePage('>');\r\n                            }}\r\n                        >\r\n                            {'>'}\r\n                        </button>\r\n                    )}\r\n                </body>\r\n                {page === content.length - 1 && (\r\n                    <>\r\n                        <Divider style={{ backgroundColor: darkTheme ? 'white' : '' }} />\r\n                        <div className=\"bp3-dialog-footer\">\r\n                            <Button\r\n                                text=\"Next\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    nextTutorial();\r\n                                    setPage(0);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TutorialPopover;\r\n","import { Portal } from '@blueprintjs/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { TutorialProps } from '../../interfaces/interfaces';\r\nimport '../../scss/Tutorial.scss';\r\nimport TutorialPopover from './TutorialPopover';\r\n\r\nconst W = 340;\r\nconst divsIds = [\r\n    'proof-visualizer-name',\r\n    'upload-proof-bt',\r\n    'examples-bt',\r\n    'input-smt-bt',\r\n    'file-name-title',\r\n    'command',\r\n    'style-bt',\r\n    'visualizers-bt',\r\n    'download-bt',\r\n    'switch-button-dark-theme',\r\n];\r\nconst tutorials: string[][] = [\r\n    [\r\n        'This website is a SMT solver proof visualizer. It was developed by \\0Vinícius Braga Freire\\0https://github.com/vinciusb\\0, \\0Diego Della Rocca\\0https://github.com/diegodrc\\0 and \\0Haniel Barbosa\\0https://homepages.dcc.ufmg.br/~hbarbosa/\\0. It was funded by AWS and the main SMT solver supported is CVC5.',\r\n    ],\r\n    [\r\n        'Here you can upload your proofs to be visualized.',\r\n        'The proofs can have the .dot or .json file extension.',\r\n        'The .json file is obtained in the download section.',\r\n    ],\r\n    ['Here you can visualize some examples of different proofs.'],\r\n    ['Here you can see the examples SMT code or insert your own SMT and run the CVC5 solver to generate a new proof.'],\r\n    ['This is the name of the current proof uploaded'],\r\n    [\r\n        'This is the command section. Here you can use some commands that will transform the proof, changing the way you comprehend it.',\r\n        \"Click in the '?' button to see a description of all commands available.\",\r\n    ],\r\n    [\r\n        'Here you can change the way the visualizer presents the proof.',\r\n        \"The graph style is the default and it's where the commands transformations happen.\",\r\n        \"In the directory style each proof node is a 'folder' and your children nodes are inside it.\",\r\n    ],\r\n    [\r\n        'Here you have access to 3 visualizers:',\r\n        'View: It allow you to change the way the proof nodes are visualized.',\r\n        'Let Map: Here you can see a map of all the LETS used inside the proofs. A let is a therm that shorten some expression (e.g.: let1 = (and A B))',\r\n        'Theory Lemma: It allow you to see all the theory lemmas in the proof.',\r\n    ],\r\n    [\r\n        'This section allow you to download the proof in different ways.',\r\n        '.DOT is the default format. It only holds informations about the proof structure and your clusters.',\r\n        '.JSON allow the user to save all the visual informations about the proof (i.e. the nodes positions, colors and foldings after any transformation applied) and your structural infos just like the .DOT.',\r\n        '.PNG prints the proof in the current state (i.e. includes all the transformations) into a image.',\r\n    ],\r\n    ['Allow to change between dark/light mode.'],\r\n];\r\n\r\n// panel stack\r\nconst VisualizerTutorial: React.FC<TutorialProps> = ({ inTutorial, setInTutorial }: TutorialProps) => {\r\n    const [stage, setStage] = useState(-1);\r\n    const [position, setPosition] = useState({ x: 0, y: 0, tW: 0 });\r\n    const sizeRef = useRef({ w: 0, h: 0 });\r\n\r\n    const increaseStage = () => {\r\n        if (stage < tutorials.length - 1) setStage(stage + 1);\r\n        else setInTutorial(false);\r\n    };\r\n\r\n    // ComponentDidMount\r\n    useEffect(() => {\r\n        // Handler to call on window resize and set the value column width\r\n        function handleResize() {\r\n            sizeRef.current.w = window.innerWidth;\r\n            sizeRef.current.h = window.innerHeight;\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (inTutorial) setStage(0);\r\n        else setStage(-1);\r\n    }, [inTutorial]);\r\n\r\n    useEffect(() => {\r\n        const toBeWrapped: HTMLElement | null = document.getElementById(divsIds[stage]);\r\n        if (toBeWrapped) {\r\n            const { x, y, width, height } = toBeWrapped.getClientRects()[0];\r\n            const newY = y + height;\r\n            let newX = x + width / 2;\r\n            const newTW = newX;\r\n            // Positioning in the beggining\r\n            if (newX < W) newX = 3;\r\n            // Positioning in the end\r\n            else if (newX + W / 2 > sizeRef.current.w) newX = sizeRef.current.w - W - 3;\r\n            // Positioning in the normal position\r\n            else newX -= W / 2;\r\n\r\n            setPosition({ x: newX, y: newY, tW: newTW });\r\n        }\r\n    }, [stage]);\r\n\r\n    return (\r\n        <Portal className={`tutorial-portal`}>\r\n            <div\r\n                className=\"bp3-overlay-enter-done\"\r\n                style={{\r\n                    width: sizeRef.current.w,\r\n                    height: sizeRef.current.h,\r\n                    pointerEvents: stage >= 0 ? 'auto' : 'none',\r\n                    backgroundColor: stage >= 0 ? 'rgba(87, 82, 82, 0.233)' : 'transparent',\r\n                }}\r\n            >\r\n                {stage >= 0 && (\r\n                    <TutorialPopover\r\n                        setIsOpen={setInTutorial}\r\n                        nextTutorial={increaseStage}\r\n                        stage={stage}\r\n                        content={tutorials[stage]}\r\n                        W={W}\r\n                        position={position}\r\n                    />\r\n                )}\r\n            </div>\r\n        </Portal>\r\n    );\r\n};\r\n\r\nexport default VisualizerTutorial;\r\n","import React, { useEffect, useReducer, useRef, useState } from 'react';\r\n\r\nimport MonacoEditor from '@monaco-editor/react';\r\nimport { Drawer, Position, Classes, Button, FormGroup, Switch, InputGroup } from '@blueprintjs/core';\r\nimport { Popover2 } from '@blueprintjs/popover2';\r\n\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { SmtDrawerProps } from '../../interfaces/interfaces';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\n\r\nimport { process, selectSmt, setSmt } from '../../store/features/proof/proofSlice';\r\nimport Module from '../../wasm/cvc5';\r\nimport { set } from '../../store/features/file/fileSlice';\r\nimport { allowRenderNewFile, reRender, setSpinner } from '../../store/features/externalCmd/externalCmd';\r\n\r\nimport '../../scss/VisualizerSmtDrawer.scss';\r\n\r\nconst VisualizerSmtDrawer: React.FC<SmtDrawerProps> = ({\r\n    isOpen,\r\n    setDrawerIsOpen,\r\n    addErrorToast,\r\n    smtOptions,\r\n    setSmtOptions,\r\n}: SmtDrawerProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const proofSmt = useAppSelector(selectSmt);\r\n\r\n    const stdoutRef = useRef('');\r\n    const stderrRef = useRef('');\r\n    const changeOutRef = useRef(false);\r\n\r\n    const [updateCounter, forceUpdate] = useReducer((x) => x + 1, 0);\r\n    const [errorCounter, forceError] = useReducer((x) => x + 1, 0);\r\n    const [optionsIsOpen, setOptionsIsOpen] = useReducer((open) => !open, false);\r\n    const textRef = useRef(proofSmt + '\\n');\r\n    const [argsType, setArgsType] = useState(smtOptions.argsType);\r\n    const [[shouldClusterize, printAsDag], setDefaultOptions] = useState([true, true]);\r\n    const [customArgs, setCustomArgs] = useState(smtOptions.customArgs);\r\n    const [err, setErr] = useState('');\r\n\r\n    // The default arguments used in the proof generation\r\n    const defaultArgs = ['--dump-proofs', '--proof-format=dot', '--proof-granularity=theory-rewrite', '--dag-thresh=0'];\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        // When smt drawer is initialized it focus the escape button\r\n        const bt = document\r\n            .getElementsByClassName('smt-drawer')[0]\r\n            .getElementsByClassName('bp3-button')[0] as HTMLElement;\r\n        bt.tabIndex = 1;\r\n        bt.focus();\r\n\r\n        // Remove the overlay when oppening the smt drawer\r\n        const parent = document.getElementsByClassName('smt-drawer')[0].parentElement;\r\n        if (parent) parent.className = '';\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        textRef.current = proofSmt;\r\n        forceUpdate();\r\n    }, [proofSmt]);\r\n\r\n    useEffect(() => {\r\n        // If it's custom args\r\n        if (!argsType && updateCounter) {\r\n            // Copy the default args to the custom args, because the probability\r\n            // that the user will use one of these flags is high\r\n            let newArgs = defaultArgs.reduce((acc, arg) => (acc += arg + ' '), '');\r\n            if (shouldClusterize) newArgs += ' --print-dot-clusters';\r\n            if (printAsDag) newArgs += ' --proof-dot-dag';\r\n            setCustomArgs(newArgs);\r\n        }\r\n    }, [argsType]);\r\n\r\n    useEffect(() => {\r\n        // When component unmount, make sure that the custom args are saved\r\n        return () => {\r\n            setSmtOptions({ argsType, customArgs });\r\n        };\r\n    }, [argsType, customArgs]);\r\n\r\n    useEffect(() => {\r\n        if (errorCounter) addErrorToast(err);\r\n    }, [errorCounter]);\r\n\r\n    const options = {\r\n        theme: darkTheme ? 'vs-dark' : 'vs',\r\n        tabIndex: 5,\r\n    };\r\n\r\n    const divColor = darkTheme ? 'rgb(255, 255, 255, 0.15)' : 'rgb(0, 0, 0, 0.15)';\r\n\r\n    const helpDiv = (\r\n        <div\r\n            className={`bp3-menu ${darkTheme ? 'bp3-dark' : ''}`}\r\n            style={{\r\n                maxWidth: '200px',\r\n                padding: '5px 8px !important',\r\n                boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.651)',\r\n                textAlign: 'justify',\r\n            }}\r\n        >\r\n            Look at{' '}\r\n            <a href=\"https://cvc5.github.io/docs/cvc5-1.0.0/options.html\" target=\"_blank\" rel=\"noreferrer\">\r\n                CVC5 documentation\r\n            </a>{' '}\r\n            to understand more about the argument parser.\r\n        </div>\r\n    );\r\n\r\n    const defaultArgsDiv = (\r\n        <div id=\"helperDiv\" className={`bp3-menu ${darkTheme ? 'bp3-dark' : ''}`}>\r\n            Default arguments are:{' '}\r\n            {defaultArgs.reduce((acc: any, str: string) => {\r\n                return (acc += str + ' ');\r\n            }, '')}\r\n        </div>\r\n    );\r\n\r\n    const shouldClusterizeDiv = (\r\n        <div id=\"helperDiv\" className={`bp3-menu ${darkTheme ? 'bp3-dark' : ''}`}>\r\n            Whether the proof node clusters (e.g. SAT, CNF, INPUT) will be printed when using the dot format or not.\r\n        </div>\r\n    );\r\n\r\n    const printAsDagDiv = (\r\n        <div id=\"helperDiv\" className={`bp3-menu ${darkTheme ? 'bp3-dark' : ''}`}>\r\n            Indicates if the dot proof will be printed as a DAG or as a tree.\r\n        </div>\r\n    );\r\n\r\n    // Remove the cvc5> prompt message from the stdout\r\n    const sanitizeDotResult = (result: string): string => result.replaceAll(/(cvc5> )+/g, '');\r\n    const updateStdout = (str: string) => (stdoutRef.current += str + '\\n');\r\n    const updateStderr = (str: string) => (stderrRef.current += str + '\\n');\r\n    // Function called post the cvc5 execution\r\n    const postCVC5run = (isThereError: boolean) => {\r\n        // Sanitize the string\r\n        stdoutRef.current = sanitizeDotResult(stdoutRef.current).trim();\r\n        // If there was an error\r\n        if (isThereError && !stdoutRef.current.length) {\r\n            // Change the spin message to render\r\n            dispatch(setSpinner('off'));\r\n\r\n            setErr(\r\n                stderrRef.current.length\r\n                    ? stderrRef.current\r\n                    : 'Error: Unknown error, check out the arguments parsed or the smt text.',\r\n            );\r\n            forceError();\r\n        }\r\n        // Get the result .dot\r\n        else {\r\n            dispatch(set({ name: 'own-proof.dot', value: stdoutRef.current }));\r\n\r\n            dispatch(allowRenderNewFile());\r\n            dispatch(reRender());\r\n\r\n            dispatch(process(stdoutRef.current));\r\n\r\n            // Change the spin message to render\r\n            dispatch(setSpinner('render'));\r\n        }\r\n    };\r\n    // Clean the output a single time during the cvc5 execution\r\n    const cleanStdout = () => {\r\n        if (!changeOutRef.current) {\r\n            stdoutRef.current = '';\r\n            changeOutRef.current = true;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            className={`smt-drawer ${darkTheme ? 'bp3-dark' : ''}`}\r\n            style={{ maxHeight: '65%', width: '35%' }}\r\n            autoFocus={true}\r\n            canEscapeKeyClose={true}\r\n            canOutsideClickClose={false}\r\n            enforceFocus={false}\r\n            hasBackdrop={false}\r\n            isOpen={isOpen}\r\n            position={Position.LEFT}\r\n            usePortal={false}\r\n            onClose={(e) => {\r\n                e.preventDefault();\r\n                setDrawerIsOpen(false);\r\n                // Save the smt\r\n                dispatch(setSmt(textRef.current));\r\n            }}\r\n            icon=\"code\"\r\n            title=\"SMT Input\"\r\n        >\r\n            <div className={Classes.DRAWER_BODY} style={{ overflow: 'hidden' }}>\r\n                <MonacoEditor\r\n                    height={'300px'}\r\n                    language=\"graphql\"\r\n                    value={textRef.current}\r\n                    onChange={(value) => value !== undefined && (textRef.current = value)}\r\n                    onMount={() => forceUpdate()}\r\n                    options={options}\r\n                />\r\n                <div className={optionsIsOpen ? 'options-sec' : 'options-sec-open'}>\r\n                    <Switch\r\n                        label=\"Default args or custom args\"\r\n                        style={{ margin: '10px 20px' }}\r\n                        checked={argsType}\r\n                        onChange={() => setArgsType(!argsType)}\r\n                        tabIndex={4}\r\n                    />\r\n                    <FormGroup\r\n                        label={\r\n                            <div>\r\n                                Default args:{' '}\r\n                                <Popover2\r\n                                    disabled={!argsType}\r\n                                    content={defaultArgsDiv}\r\n                                    placement=\"auto\"\r\n                                    modifiers={{ arrow: { enabled: true } }}\r\n                                    hoverCloseDelay={200}\r\n                                    hoverOpenDelay={200}\r\n                                >\r\n                                    <Button disabled={!argsType} icon=\"help\" className=\"bp3-minimal\" tabIndex={4} />\r\n                                </Popover2>\r\n                            </div>\r\n                        }\r\n                        className=\"args-forms\"\r\n                        style={{ borderBottom: `1px solid ${divColor}`, borderTop: `1px solid ${divColor}` }}\r\n                        disabled={!argsType}\r\n                    >\r\n                        <div className=\"default-option-div\">\r\n                            <Switch\r\n                                label=\"Should clusterize proof\"\r\n                                disabled={!argsType}\r\n                                checked={shouldClusterize}\r\n                                onChange={() => setDefaultOptions([!shouldClusterize, printAsDag])}\r\n                                tabIndex={4}\r\n                            />\r\n                            <Popover2\r\n                                disabled={!argsType}\r\n                                content={shouldClusterizeDiv}\r\n                                placement=\"auto\"\r\n                                modifiers={{ arrow: { enabled: true } }}\r\n                                hoverCloseDelay={200}\r\n                                hoverOpenDelay={200}\r\n                            >\r\n                                <Button disabled={!argsType} icon=\"help\" className=\"bp3-minimal\" tabIndex={4} />\r\n                            </Popover2>\r\n                        </div>\r\n                        <div className=\"default-option-div\">\r\n                            <Switch\r\n                                label=\"Should print as tree or as DAG\"\r\n                                disabled={!argsType}\r\n                                checked={printAsDag}\r\n                                onChange={() => setDefaultOptions([shouldClusterize, !printAsDag])}\r\n                                tabIndex={4}\r\n                            />\r\n                            <Popover2\r\n                                disabled={!argsType}\r\n                                content={printAsDagDiv}\r\n                                placement=\"auto\"\r\n                                modifiers={{ arrow: { enabled: true } }}\r\n                                hoverCloseDelay={200}\r\n                                hoverOpenDelay={200}\r\n                            >\r\n                                <Button disabled={!argsType} icon=\"help\" className=\"bp3-minimal\" tabIndex={4} />\r\n                            </Popover2>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Custom args\" className=\"args-forms\" disabled={argsType}>\r\n                        <InputGroup\r\n                            id=\"text-input\"\r\n                            placeholder=\"Placeholder text\"\r\n                            disabled={argsType}\r\n                            rightElement={\r\n                                <Popover2\r\n                                    disabled={argsType}\r\n                                    content={helpDiv}\r\n                                    placement=\"auto\"\r\n                                    modifiers={{ arrow: { enabled: true } }}\r\n                                    hoverCloseDelay={200}\r\n                                    hoverOpenDelay={200}\r\n                                >\r\n                                    <Button disabled={argsType} icon=\"help\" className=\"bp3-minimal\" tabIndex={4} />\r\n                                </Popover2>\r\n                            }\r\n                            value={customArgs}\r\n                            onChange={(e) => setCustomArgs(e.target.value)}\r\n                            tabIndex={4}\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                <footer\r\n                    style={{\r\n                        position: 'relative',\r\n                        borderTop: optionsIsOpen ? `solid 1px ${divColor}` : '',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        style={{ float: 'left' }}\r\n                        className=\"bp3-minimal margin-5\"\r\n                        icon=\"more\"\r\n                        text=\"Options\"\r\n                        onClick={() => setOptionsIsOpen()}\r\n                        tabIndex={1}\r\n                    />\r\n                    <div style={{ float: 'right', display: 'flex' }}>\r\n                        <Button\r\n                            className=\"bp3-minimal margin-5\"\r\n                            icon=\"code\"\r\n                            text=\"Generate proof\"\r\n                            onClick={() => {\r\n                                dispatch(setSmt(textRef.current));\r\n\r\n                                let args = defaultArgs;\r\n                                // If is default args\r\n                                if (argsType) {\r\n                                    // Add the arguments selected by the user\r\n                                    if (shouldClusterize) args.push('--print-dot-clusters');\r\n                                    if (printAsDag) args.push('--proof-dot-dag');\r\n                                }\r\n                                // Custom args\r\n                                else {\r\n                                    // Split the arguments into an array\r\n                                    args = customArgs.split('--');\r\n                                    args = args\r\n                                        .map((arg) => arg.trim())\r\n                                        .filter((arg) => {\r\n                                            return arg.length !== 0;\r\n                                        })\r\n                                        .map((arg) => '--' + arg);\r\n\r\n                                    let i = 0;\r\n                                    // Make sure that the output format is .dot\r\n                                    const isThereFormat = args.some((arg, id) => {\r\n                                        i = id;\r\n                                        return arg.indexOf('--proof-format') !== -1;\r\n                                    });\r\n                                    // If there isn't a proof format\r\n                                    if (!isThereFormat) args.push('--proof-format=dot');\r\n                                    // Verify is the format is the correct one\r\n                                    else if (!args[i].match(/--proof-format\\s*=\\s*dot/)) {\r\n                                        args[i] = '--proof-format=dot';\r\n                                    }\r\n                                }\r\n\r\n                                // Reset the stdout and stderr before executing cvc5\r\n                                stdoutRef.current = '';\r\n                                stderrRef.current = '';\r\n                                changeOutRef.current = false;\r\n\r\n                                // Only calls web assembly when there is some text on the code editor\r\n                                if (textRef.current.trim().length) {\r\n                                    dispatch(setSpinner('cvc5'));\r\n\r\n                                    // Run cvc5\r\n                                    Module({\r\n                                        arguments: args,\r\n                                        proofTxt: textRef.current,\r\n                                        out: updateStdout,\r\n                                        err: updateStderr,\r\n                                        postCVC5: postCVC5run,\r\n                                        cleanStdout: cleanStdout,\r\n                                        binaryFileName: 'cvc5.wasm',\r\n                                    });\r\n                                }\r\n                                // There isn't text in the code editor\r\n                                else {\r\n                                    addErrorToast('Error: Empty proof in the code editor.');\r\n                                }\r\n                            }}\r\n                            tabIndex={3}\r\n                        />\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default VisualizerSmtDrawer;\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\n\r\nimport { Intent, Overlay, Position, Spinner, Toaster } from '@blueprintjs/core';\r\n\r\nimport VisualizerNavbar from '../VisualizerNavbar/VisualizerNavbar';\r\nimport VisualizerDialog from '../VisualizerDialog/VisualizerDialog';\r\nimport VisualizerStage from '../VisualizerStage/VisualizerStage';\r\nimport VisualizersDrawer from '../VisualizersDrawer/VisualizersDrawer';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport VisualizerTutorial from '../VisualizerTutorial/VisualizerTutorial';\r\nimport VisualizerSmtDrawer from '../VisualizerSmtDrawer/VisualizerSmtDrawer';\r\nimport { selectSpinner } from '../../store/features/externalCmd/externalCmd';\r\n\r\nconst App: React.FC = () => {\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n    const [inTutorial, setInTutorial] = useState(false);\r\n    const [drawerIsOpen, setDrawerOpenState] = useState(false);\r\n    const [smtDrawerIsOpen, setSmtDrawerIsOpen] = useState(false);\r\n    const [, disableAllDrawers] = useReducer(() => {\r\n        if (dialogIsOpen) setDialogIsOpen(false);\r\n        if (inTutorial) setInTutorial(false);\r\n        if (drawerIsOpen) setDrawerOpenState(false);\r\n        if (smtDrawerIsOpen) setSmtDrawerIsOpen(false);\r\n        return null;\r\n    }, null);\r\n    const [smtOptions, setSmtOptions] = useState({ argsType: true, customArgs: '' });\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const spinner = useAppSelector(selectSpinner);\r\n\r\n    // Toaster\r\n    let toaster: Toaster;\r\n    const refHandlers = {\r\n        toaster: (ref: Toaster) => (toaster = ref),\r\n    };\r\n\r\n    const addErrorToast = (err: string) => {\r\n        toaster.show({ icon: 'warning-sign', intent: Intent.DANGER, message: err });\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.getElementsByClassName('bp3-overlay')[0]\r\n            ? (document.getElementsByClassName('bp3-overlay')[0].className = '')\r\n            : null;\r\n    }, [drawerIsOpen]);\r\n\r\n    return (\r\n        <div className={darkTheme ? ' bp3-dark' : ''} style={{ height: '100%' }}>\r\n            <VisualizerTutorial inTutorial={inTutorial} setInTutorial={setInTutorial} />\r\n            <Toaster position={Position.TOP} ref={refHandlers.toaster} />\r\n            <VisualizerNavbar\r\n                setDialogIsOpen={setDialogIsOpen}\r\n                setDrawerIsOpen={setDrawerOpenState}\r\n                addErrorToast={addErrorToast}\r\n                inTutorial={inTutorial}\r\n                setInTutorial={setInTutorial}\r\n                setSmtDrawerIsOpen={setSmtDrawerIsOpen}\r\n            />\r\n            <VisualizerDialog\r\n                dialogIsOpen={dialogIsOpen}\r\n                setDialogIsOpen={setDialogIsOpen}\r\n                addErrorToast={addErrorToast}\r\n            />\r\n            <VisualizerStage disableExternalDrawers={disableAllDrawers} />\r\n            {drawerIsOpen ? (\r\n                <VisualizersDrawer drawerIsOpen={drawerIsOpen} setDrawerIsOpen={setDrawerOpenState}></VisualizersDrawer>\r\n            ) : null}\r\n            {smtDrawerIsOpen ? (\r\n                <VisualizerSmtDrawer\r\n                    isOpen={smtDrawerIsOpen}\r\n                    setDrawerIsOpen={setSmtDrawerIsOpen}\r\n                    addErrorToast={addErrorToast}\r\n                    smtOptions={smtOptions}\r\n                    setSmtOptions={setSmtOptions}\r\n                />\r\n            ) : null}\r\n            <Overlay isOpen={spinner !== 'off'} className=\"spinner-overlay\">\r\n                <div className=\"overlay-container\">\r\n                    <div className=\"spinner-info\">\r\n                        <h1>{spinner === 'cvc5' ? 'cvc5 is running!' : 'rendering graph!'}</h1>\r\n                        <Spinner intent={spinner === 'cvc5' ? 'primary' : 'success'} size={80} />\r\n                    </div>\r\n                </div>\r\n            </Overlay>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport externalCmdReducer from './features/externalCmd/externalCmd';\r\nimport fileReducer from './features/file/fileSlice';\r\nimport proofReducer from './features/proof/proofSlice';\r\nimport themeReducer from './features/theme/themeSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        file: fileReducer,\r\n        proof: proofReducer,\r\n        theme: themeReducer,\r\n        externalCmd: externalCmdReducer,\r\n    },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './scss/index.scss';\r\n\r\nimport reportWebVitals from './ReactUtils/reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}