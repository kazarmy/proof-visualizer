{"version":3,"sources":["wasm/cvc5.js","interfaces/enum.ts","store/hooks.ts","store/features/file/fileSlice.ts","store/features/proof/auxi.ts","store/features/theme/auxi.ts","store/features/proof/proofSlice.ts","store/features/theme/themeSlice.ts","store/features/externalCmd/externalCmd.ts","examples/proofs-examples.ts","components/VisualizerNavbar/VisualizerNavbar.tsx","components/VisualizerDialog/VisualizerDialog.tsx","components/VisualizerStage/Canvas/VisualizerNode.tsx","components/VisualizerStage/Canvas/VisualizerLine.tsx","components/VisualizerStage/Canvas/VisualizerMenu.tsx","components/VisualizerStage/Canvas/VisualizerCanvas.tsx","components/VisualizerTree/VisualizerTree.tsx","components/VisualizerLetDrawer/let.ts","components/VisualizerLetDrawer/LetRender.tsx","components/VisualizerStage/VisualizerDirectoryStyle/VisualizerDirectoryStyle.tsx","components/VisualizerStage/VisualizerStage.tsx","components/VisualizerLetDrawer/VisualizerLetDrawer.tsx","components/VisualizerTheoryLemma/VisualizerTheoryLemma.tsx","components/VisualizersDrawer/VisualizersDrawer.tsx","components/VisualizerTutorial/TutorialPopover.tsx","components/VisualizerTutorial/VisualizerTutorial.tsx","components/VisualizerSmtDrawer/VisualizerSmtDrawer.tsx","components/App/App.tsx","store/store.ts","ReactUtils/reportWebVitals.ts","index.tsx"],"names":["Module","_scriptDir","window","location","origin","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","read_","readAsync","readBinary","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","scriptDirectory","document","currentScript","src","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","onload","onerror","responseType","response","wasmMemory","out","err","WebAssembly","abort","EXITSTATUS","ABORT","assert","condition","text","getCFunc","ident","ccall","returnType","argTypes","args","opts","toC","string","str","ret","undefined","len","length","outPtr","maxBytesToWrite","stringToUTF8Array","HEAPU8","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","func","cArgs","stack","i","converter","stackSave","apply","stackRestore","UTF8ToString","Boolean","convertReturnValue","onDone","buffer","HEAP8","HEAP16","HEAP32","HEAPU32","wasmTable","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","subarray","u0","u1","u2","String","fromCharCode","ch","ptr","heap","outIdx","startIdx","u","charCodeAt","lengthBytesUTF8","set","wasmBinaryFile","tempDouble","tempI64","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","e","RuntimeError","isDataURI","filename","startsWith","getBinary","file","callRuntimeCallbacks","callbacks","shift","wasmTableMirror","ExceptionInfo","excPtr","this","set_type","type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","set_adjusted_ptr","add_ref","value","release_ref","prev","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","PATH","isAbs","path","charAt","splitPath","exec","slice","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","split","filter","p","join","dirname","result","root","dir","basename","lastSlash","paths","Array","prototype","call","arguments","join2","l","r","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","flush","read","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","prompt","readline","intArrayFromString","val","default_tty1_ops","mmapAlloc","size","_emscripten_get_now","MEMFS","ops_table","mount","createNode","parent","name","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","Uint8Array","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","hasOwnProperty","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","w","a","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","defineProperties","object","get","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","syncfs","populate","completed","doCallback","done","errored","forEach","pseudo","mountRoot","unmount","keys","next","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","arg","readFile","encoding","buf","writeFile","data","actualNumBytes","ArrayBuffer","isView","byteLength","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","message","constructor","code","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","writeChunks","fn","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","Browser","handledByPreloadPlugin","noRunDep","dep","arrayBuffer","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","doStat","abs","floor","getTime","doMsync","addr","varargs","getStr","getStreamFromFD","PIPEFS","BUCKET_BUFFER_SIZE","createPipe","pipe","buckets","refcnt","roffset","rName","nextname","wName","rNode","wNode","readableStream","writableStream","readable_fd","writable_fd","poll","bucket","request","fsync","currentLength","toRead","totalRead","toRemove","currBucket","bucketSize","tmpSlice","dataLen","freeBytesInCurrBuffer","numBuckets","remElements","newBucket","performance","ENV","getEnvStrings","strings","env","USER","LOGNAME","PWD","HOME","LANG","navigator","languages","_","x","__isLeapYear","year","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","_strftime","s","maxsize","format","tm","tm_zone","date","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","toString","leadingNulls","compareByDay","date1","date2","sgn","compare","getFullYear","getMonth","getDate","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","__addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","index","sum","__arraySum","jan1","dec31","off","ahead","bytes","readMode","writeMode","stringy","dontAddNull","u8array","numBytesWritten","calledRun","asmLibraryArg","fp","sig","funcPtr","getWasmTableEntry","_malloc","b","h","___errno_location","y","op","argp","z","t","fdPtr","res","q","j","c","k","dest","num","copyWithin","o","requestedSize","v","__environ","environ_buf","bufSize","writeAsciiToMemory","penviron_count","penviron_buf_size","exit","g","pbuf","iov","iovcnt","pnum","curr","doReadv","offset_low","offset_high","newOffset","hi","lo","NaN","isNaN","f","doWritev","procExit","n","info","receiveInstance","instance","module","cb","exports","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","then","catch","binary","instantiate","reason","instantiateStreaming","createWasm","ExitStatus","callMain","entryFunction","argc","argv","argv_ptr","allocateUTF8OnStack","handleException","run","shouldRunNow","implicit","numericArgs","every","runCaller","ready","drawerHelpersKind","renderLetKind","ClusterKind","useAppDispatch","useDispatch","useAppSelector","useSelector","fileSlice","createSlice","initialState","filesCount","reducers","state","action","payload","actions","selectFileName","selectDot","JSON","parse","dot","selectFileCount","removeEscapedCharacters","newS","descendants","proof","nodeId","children","reduce","acc","childId","sliceNodesCluster","clusterMap","slicedClusters","currentNode","parentsClusters","parents","clusterType","target","clusterID","child","extractTheoryLemmas","clusters","haveCluster","conclusion","TL","map","hiddenNodes","colorConverter","colorName","color","proofSlice","view","style","letMap","theoryLemmaMap","visualInfo","clustersInfos","smt","process","proofJSON","isJSON","nodes","dependencies","NONE","comment","line","search","label","thisType","numbers","SAT","CNF","PP","IN","parseInt","attributes","commentJSON","subProofQty","processDot","clustersColors","clustersMap","fill","cluster","selected","hideNodes","toHideNodes","hiddenNodesArray","clusteredNodes","hiddenNode","hiddenID","some","_p","pastCluster","stringify","clusterParents","parentCluster","findNodesClusters","piNodeId","foldAllDescendants","self","unhideNodes","pi","hiddens","setVisualInfo","selectNodes","unselectNodes","changeStyle","applyView","visualInfoSize","proofSize","applyColor","setSmt","selectProof","piNodeChildren","haveHiddenParent","piNodeParents","piNodeDependencies","depMap","piId","depsId","groupPiNodeDependencies","piNode","proofNode","parentId","highHierarchyNodes","ac","childID","selectOriginalProof","selectView","selectStyle","selectLetMap","selectTheoryLemmas","selectVisualInfo","selectHiddenNodes","selectNodeClusters","selectSmt","themeSlice","toggle","selectTheme","theme","externalCmd","findData","nodeToFind","findOption","renderData","fileChanged","findNode","option","reRender","addRenderCount","blockRender","allowRenderNewFile","blockRenderNewFile","selectFindData","selectRenderData","examples","ex1","ex2","isNotMozz","userAgent","match","isNotMozzila","mapDispatchToProps","connect","ownProps","setDialogIsOpen","setDrawerIsOpen","addErrorToast","setInTutorial","setSmtDrawerIsOpen","inTutorial","fileName","darkTheme","windowSize","useState","width","height","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","command","setCommand","lastCommands","setLastCommands","commandId","setCommandId","matchableCmd","setMatchableCmd","matchableCmdIsOpen","setMatchableCmdIsOpen","dispatch","commandsMap","cmds","cmdArg","matches","matchAll","idList","insideBracket","insideMatches","rangeLim","numS","listStr","word","argMatch","argIsConclusion","regexString","regex","test","allNodesIds","hiddenIds","findIndex","find","commands","useRef","runCommands","exportJSON","downloadJSON","fName","createElement","download","href","encodeURIComponent","click","exportPNG","preventDefault","graph","getElementsByClassName","toDataURL","runExample","ex","isPseudoClick","menus","className","icon","onClick","onKeyDown","role","help","tabIndex","criticalWidth","Group","align","Alignment","LEFT","Heading","Divider","content","placement","modifiers","arrow","enabled","RIGHT","autoFocus","enforceFocus","list","renderMatchableCmd","isOpen","disabled","placeholder","onChange","findMatchableCmd","newId","rightElement","onFocusCapture","blur","autoComplete","marginLeft","stopPropagation","currentTarget","checked","readUploadedFileAsText","inputFile","temporaryFileReader","FileReader","DOMException","readAsText","VisualizerDialog","dialogIsOpen","inputIsFocused","setInputIsFocused","changeFileName","changeFile","useReducer","newFlag","focusFlag","flagCount","setFocusFlag","Classes","DIALOG_BODY","childNodes","focus","DIALOG_FOOTER_ACTIONS","closeDialog","dialogBody","outline","borderRadius","hasSelection","onInputChange","File","fileContents","onFocus","onBlur","succesButton","ext","intent","Intent","SUCCESS","onClose","usePortal","title","DIALOG_FOOTER","textColorFromBg","bgColor","sixDigitColor","Node","props","nHided","nDescendants","setNodeOnFocus","toggleNodeSelection","updateNodePosition","openDrawer","onDragEnd","createTree","tag","stroke","strokeWidth","fontSize","padding","depText","depSize","infos","idSize","setIdSize","descendantSize","setDescendantSize","font","calc","context","getContext","measureText","getTextWidth","draggable","onDragMove","attrs","evt","button","shiftKey","menuNode","getElementById","top","clientY","left","clientX","display","points","depLineSize","radius","Line","Menu","unfold","foldSelectedNodes","changeNodeColor","currentColor","options","setColor","foldSelected","vertical","handleWheel","stage","getStage","oldScale","scaleX","pointerPosition","getPointerPosition","mousePointTo","newScale","deltaY","stageScale","stageX","stageY","Canvas","nodeOnFocus","setState","nodesSelected","showingNodes","LineProps","saveNodePosition","copyNodePosition","showingEdges","edgeKey","edge","componentDidUpdate","bind","canvasSize","newShowingNodes","newNodeProps","updateEdgesAndFuncs","prevProps","found","onWheel","scaleY","onContextMenu","current_state","proofChanged","visualInfoChanged","nodeFindData","nodeWidth","nodeHeight","dagre","graphlib","Graph","setGraph","rankdir","ranker","setDefaultEdgeLabel","setNode","setEdge","layout","xOffset","yOffset","console","log","Component","newVisualInfo","visualInfos","VisualizerTree","positionMap","setNodeInfo","forceUpdate","setNodes","setSelected","forEachNode","backgroundColor","onNodeClick","nodeData","_nodePath","toBeShow","originallySelected","isSelected","onNodeCollapse","isExpanded","onNodeExpand","hasCaret","castProofNodeToTreeNode","ELEVATION_0","Let","letText","letsList","indices","lines","biggerID","externalLets","expandValue","shouldUpdate","keyList","let","letName","indentLevel","expandPartialy","externalRef","letIdx","indentedText","printLines","lastLine","newIdx","shrinkValue","fitsTheWindow","repeat","indent","someDoesntFit","newLines","thisLevel","thisLine","lastSpace","lastUsedSpace","lastOpenParenthesis","biggestSize","newBiggerID","thisSize","groupUp","original","numKey","LetRender","toRender","shouldExpand","shouldRevert","dispatchExpansion","widthRef","resizeMode","setResizeMode","newMap","letMapS","setLetMapS","letsRef","initializeLet","lets","currentLet","indice","newWidth","clientWidth","expandAll","EXPAND","revertLet","REVERT","maxHeight","overflow","margin","whiteSpace","thisLet","expandLet","overflowWrap","renderLet","VisualizerDirectoryStyle","proofTree","ruleHelper","translate","nodeInfo","ALL","ruleHelperIsOpen","argsHelperIsOpen","concHelperIsOpen","dispatchHelper","revertAll","dispatchLetExpansion","setMap","renderID","increaseRenderID","_map","offsetHeight","float","clear","borderRight","RULE","ARGS","CONC","dependency","secondaryLabel","parentsId","rootNode","tree","VisualizerStage","fileID","setProofTree","drawerIsOpen","setTree","canEscapeKeyClose","canOutsideClickClose","hasBackdrop","Position","BOTTOM","DRAWER_BODY","VisualizerLetDrawer","shouldResize","setLetMap","VisualizerTheoryLemma","theoryLemmas","setTheoryLemmas","tl","currentTL","minWidth","VisualizersDrawer","nodeClusters","tabID","setTabID","resizeFlag","setResizeFlag","bt","handleClusterClick","theoryLemma","newTabId","newResizeFlag","selectedTabId","panel","TutorialPopover","setIsOpen","nextTutorial","W","page","setPage","changePage","setTimeout","handleEsc","tW","borderBottomColor","positions","rel","insertAnchors","divsIds","tutorials","VisualizerTutorial","setStage","setPosition","sizeRef","toBeWrapped","getClientRects","newY","newX","newTW","pointerEvents","VisualizerSmtDrawer","proofSmt","stdoutRef","stderrRef","changeOutRef","spinnerOn","setSpinnerOn","optionsIsOpen","setOptionsIsOpen","textRef","argsType","setArgsType","shouldClusterize","printAsDag","setDefaultOptions","customArgs","setCustomArgs","defaultArgs","newArgs","divColor","helpDiv","maxWidth","boxShadow","textAlign","defaultArgsDiv","shouldClusterizeDiv","printAsDagDiv","updateStdout","updateStderr","postCVC5run","isThereError","replaceAll","cleanStdout","language","onMount","hoverCloseDelay","hoverOpenDelay","borderBottom","borderTop","proofTxt","postCVC5","binaryFileName","App","toaster","setDrawerOpenState","smtDrawerIsOpen","refHandlers","ref","show","DANGER","TOP","store","configureStore","reducer","fileReducer","proofReducer","themeReducer","externalCmdReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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AEIoG,GAAI,EACJ2oC,SAAUiC,EAAS/d,WACnBU,OAAQA,EACRqb,aAAcgB,EACdf,aAAcqC,EACdpC,kBAAmBqC,GANdE,GASTT,EAAS/d,gBAKpB+d,EAASxM,aACN,gCACI,8BACI,qDAEJ,8BAAKwM,EAASxM,kBAElB,KAEHwM,EAASzM,OACN,gCACI,8BACI,gDAEJ,yCAASyM,EAAS5d,YAAYD,KAAI,SAAChmB,GAAD,MAAU,IAAMA,KAAlD,WAEJ,KACH6jC,EAAS5c,aAAa/xB,OACnB,gCACI,8BACI,qDAEJ,wCAAQ2uC,EAAS5c,aAAajB,KAC1B,SAACgf,GAAD,iBAAoBA,EAAWva,KAA/B,cAAyCua,EAAWta,OAAO1E,KAAI,SAAC9S,GAAD,MAAS,IAAMA,KAA9E,gBAGR,iB,OClNxB,SAASywB,GAAWzpB,GAChB,OAAQA,EAAKpd,MAAM,KAAK,IACpB,IAAK,SACD,MAAO,8DACX,IAAK,SACD,OACIod,EACA,uYAER,IAAK,QACD,OACIA,EACA,gnBAER,IAAK,OACD,OACIA,EACA,sZAER,IAAK,UACD,OACIA,EACA,0PAER,IAAK,WACD,OACIA,EACA,6MAER,IAAK,oBACD,OACIA,EACA,moBAER,IAAK,sBACD,OACIA,EACA,6iCAER,IAAK,qBACD,OACIA,EACA,gcAER,IAAK,0BACD,OACIA,EACA,qsBAER,IAAK,4BACD,OACIA,EACA,4LAER,IAAK,eACD,OACIA,EACA,wVAER,IAAK,iBACD,OACIA,EACA,6mBAER,IAAK,aACD,OACIA,EACA,qRAER,IAAK,mBACD,OACIA,EACA,uKAER,IAAK,oBACD,OACIA,EACA,oNAER,IAAK,0BACD,OACIA,EACA,oKAER,IAAK,oBACD,OACIA,EACA,+MAER,IAAK,gBACD,OACIA,EACA,oNAER,IAAK,gBACD,OACIA,EACA,gOAER,IAAK,aACD,OACIA,EACA,mOAER,IAAK,iBACD,OACIA,EACA,0VAER,IAAK,gBACD,OACIA,EACA,uNAER,IAAK,iBACD,OACIA,EACA,kOAER,IAAK,aACD,OACIA,EACA,kpCAER,IAAK,mBACD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","file":"static/js/main.23641622.chunk.js","sourcesContent":["/* eslint-disable */\n/*\nAuthor: Vinícius Braga Freire (vinicius.braga.freire@gmail.com)\nDescription: WebAssembly glue code used to run cvc5 inside React web application.\nCompilation: the glue code and wasm were generated through the cvc5 bash in the \n                https://github.com/ufmg-smite/cvc5-wasm repository. The flags \n                passed to the emscripten compiler were:\n    -s EXPORTED_FUNCTIONS=_main             # Add the main as an exported \n                                            # function, but it's not necessary \n                                            # because the main() is already \n                                            # called when the Module is called.\n    -s EXPORTED_RUNTIME_METHODS=ccall,cwrap # Export JS functions that allow the \n                                            # user to call an exported function.\n    -s INCOMING_MODULE_JS_API=arguments     # Add the argument parsing to the \n                                            # Module.\n    -s INVOKE_RUN=1                         # Whether we will run the main() \n                                            # function.\n    -s EXIT_RUNTIME=0                       # If 0, the runtime is not quit when \n                                            # main() completes (allowing code to\n                                            # run afterwards, for example from \n                                            # the browser main event loop).\n    -s ENVIRONMENT=web                      # Signs that the wasm will run in \n                                            # the browser.\n    -s MODULARIZE                           # Make the glue code as an \n                                            # exportable function, just like a \n                                            # Module.\nObservations: The modifications made in the original glue code are the ones that\n                precedes of comments with //.\n              The changed functions/parts of the code to look at are:\n                - The definition of the wasm file base directory\n                - The definition of the out and err functions\n                - The read of the arguments passed through the Module\n                - The postRun function\n                - The read of the wasm file name passed through the Module\n                - The handleException function\n                - The get_char function\n                - The run function\nLast Update: 22/07/2022\n*/\n\nvar Module = (() => {\n    // The base directory to the wasm file\n    _scriptDir = window.location.origin + '/proof-visualizer/';\n\n    // This function is responsible for running the web assembly\n    return function (Module) {\n        Module = Module || {};\n\n        var Module = typeof Module != 'undefined' ? Module : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module['ready'] = new Promise(function (resolve, reject) {\n            readyPromiseResolve = resolve;\n            readyPromiseReject = reject;\n        });\n        var moduleOverrides = Object.assign({}, Module);\n        var arguments_ = [];\n        var thisProgram = './this.program';\n        var quit_ = (status, toThrow) => {\n            throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = true;\n        var ENVIRONMENT_IS_WORKER = false;\n        var scriptDirectory = '';\n        function locateFile(path) {\n            return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n            if (ENVIRONMENT_IS_WORKER) {\n                scriptDirectory = self.location.href;\n            } else if (typeof document != 'undefined' && document.currentScript) {\n                scriptDirectory = document.currentScript.src;\n            }\n            if (_scriptDir) {\n                scriptDirectory = _scriptDir;\n            }\n            if (scriptDirectory.indexOf('blob:') !== 0) {\n                scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1);\n            } else {\n                scriptDirectory = '';\n            }\n            {\n                read_ = (url) => {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('GET', url, false);\n                    xhr.send(null);\n                    return xhr.responseText;\n                };\n                if (ENVIRONMENT_IS_WORKER) {\n                    readBinary = (url) => {\n                        var xhr = new XMLHttpRequest();\n                        xhr.open('GET', url, false);\n                        xhr.responseType = 'arraybuffer';\n                        xhr.send(null);\n                        return new Uint8Array(xhr.response);\n                    };\n                }\n                readAsync = (url, onload, onerror) => {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('GET', url, true);\n                    xhr.responseType = 'arraybuffer';\n                    xhr.onload = () => {\n                        if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n                            onload(xhr.response);\n                            return;\n                        }\n                        onerror();\n                    };\n                    xhr.onerror = onerror;\n                    xhr.send(null);\n                };\n            }\n            setWindowTitle = (title) => (document.title = title);\n        } else {\n        }\n        // The out variable is the function that updates the stdout varible\n        // (it's in the react scope) and its argument is a string (the content\n        //  of the current stdout line to be written)\n        var out = Module['out'];\n        // The err is the same thing as out, but related to stderr\n        var err = Module['err'];\n        Object.assign(Module, moduleOverrides);\n        moduleOverrides = null;\n        // Assign the arguments passed through the Module (defined in the react\n        // scope) to a local variable. These arguments are arranged in an array\n        // of strings\n        if (Module['arguments']) arguments_ = Module['arguments'];\n        var wasmBinary;\n        var noExitRuntime = true;\n        if (typeof WebAssembly != 'object') {\n            abort('no native wasm support detected');\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n            if (!condition) {\n                abort(text);\n            }\n        }\n        function getCFunc(ident) {\n            var func = Module['_' + ident];\n            return func;\n        }\n        function ccall(ident, returnType, argTypes, args, opts) {\n            var toC = {\n                string: function (str) {\n                    var ret = 0;\n                    if (str !== null && str !== undefined && str !== 0) {\n                        var len = (str.length << 2) + 1;\n                        ret = stackAlloc(len);\n                        stringToUTF8(str, ret, len);\n                    }\n                    return ret;\n                },\n                array: function (arr) {\n                    var ret = stackAlloc(arr.length);\n                    writeArrayToMemory(arr, ret);\n                    return ret;\n                },\n            };\n            function convertReturnValue(ret) {\n                if (returnType === 'string') {\n                    return UTF8ToString(ret);\n                }\n                if (returnType === 'boolean') return Boolean(ret);\n                return ret;\n            }\n            var func = getCFunc(ident);\n            var cArgs = [];\n            var stack = 0;\n            if (args) {\n                for (var i = 0; i < args.length; i++) {\n                    var converter = toC[argTypes[i]];\n                    if (converter) {\n                        if (stack === 0) stack = stackSave();\n                        cArgs[i] = converter(args[i]);\n                    } else {\n                        cArgs[i] = args[i];\n                    }\n                }\n            }\n            var ret = func.apply(null, cArgs);\n            function onDone(ret) {\n                if (stack !== 0) stackRestore(stack);\n                return convertReturnValue(ret);\n            }\n            ret = onDone(ret);\n            return ret;\n        }\n        function cwrap(ident, returnType, argTypes, opts) {\n            argTypes = argTypes || [];\n            var numericArgs = argTypes.every(function (type) {\n                return type === 'number';\n            });\n            var numericRet = returnType !== 'string';\n            if (numericRet && numericArgs && !opts) {\n                return getCFunc(ident);\n            }\n            return function () {\n                return ccall(ident, returnType, argTypes, arguments, opts);\n            };\n        }\n        var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n        function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n            var endIdx = idx + maxBytesToRead;\n            var endPtr = idx;\n            while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n            if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n                return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n            } else {\n                var str = '';\n                while (idx < endPtr) {\n                    var u0 = heapOrArray[idx++];\n                    if (!(u0 & 128)) {\n                        str += String.fromCharCode(u0);\n                        continue;\n                    }\n                    var u1 = heapOrArray[idx++] & 63;\n                    if ((u0 & 224) == 192) {\n                        str += String.fromCharCode(((u0 & 31) << 6) | u1);\n                        continue;\n                    }\n                    var u2 = heapOrArray[idx++] & 63;\n                    if ((u0 & 240) == 224) {\n                        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n                    } else {\n                        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n                    }\n                    if (u0 < 65536) {\n                        str += String.fromCharCode(u0);\n                    } else {\n                        var ch = u0 - 65536;\n                        str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n                    }\n                }\n            }\n            return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n            return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n            if (!(maxBytesToWrite > 0)) return 0;\n            var startIdx = outIdx;\n            var endIdx = outIdx + maxBytesToWrite - 1;\n            for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) {\n                    var u1 = str.charCodeAt(++i);\n                    u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\n                }\n                if (u <= 127) {\n                    if (outIdx >= endIdx) break;\n                    heap[outIdx++] = u;\n                } else if (u <= 2047) {\n                    if (outIdx + 1 >= endIdx) break;\n                    heap[outIdx++] = 192 | (u >> 6);\n                    heap[outIdx++] = 128 | (u & 63);\n                } else if (u <= 65535) {\n                    if (outIdx + 2 >= endIdx) break;\n                    heap[outIdx++] = 224 | (u >> 12);\n                    heap[outIdx++] = 128 | ((u >> 6) & 63);\n                    heap[outIdx++] = 128 | (u & 63);\n                } else {\n                    if (outIdx + 3 >= endIdx) break;\n                    heap[outIdx++] = 240 | (u >> 18);\n                    heap[outIdx++] = 128 | ((u >> 12) & 63);\n                    heap[outIdx++] = 128 | ((u >> 6) & 63);\n                    heap[outIdx++] = 128 | (u & 63);\n                }\n            }\n            heap[outIdx] = 0;\n            return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n            return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n            var len = 0;\n            for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) u = (65536 + ((u & 1023) << 10)) | (str.charCodeAt(++i) & 1023);\n                if (u <= 127) ++len;\n                else if (u <= 2047) len += 2;\n                else if (u <= 65535) len += 3;\n                else len += 4;\n            }\n            return len;\n        }\n        function allocateUTF8OnStack(str) {\n            var size = lengthBytesUTF8(str) + 1;\n            var ret = stackAlloc(size);\n            stringToUTF8Array(str, HEAP8, ret, size);\n            return ret;\n        }\n        function writeArrayToMemory(array, buffer) {\n            HEAP8.set(array, buffer);\n        }\n        function writeAsciiToMemory(str, buffer, dontAddNull) {\n            for (var i = 0; i < str.length; ++i) {\n                HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n            }\n            if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n            buffer = buf;\n            Module['HEAP8'] = HEAP8 = new Int8Array(buf);\n            Module['HEAP16'] = HEAP16 = new Int16Array(buf);\n            Module['HEAP32'] = HEAP32 = new Int32Array(buf);\n            Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n            Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\n            Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\n            Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\n            Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\n        }\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        function keepRuntimeAlive() {\n            return noExitRuntime;\n        }\n        function preRun() {\n            callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n            runtimeInitialized = true;\n            if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n            FS.ignorePermissions = false;\n            TTY.init();\n            PIPEFS.root = FS.mount(PIPEFS, {}, null);\n            callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n            callRuntimeCallbacks(__ATMAIN__);\n        }\n        // Function called after the cvc5 execution and no error happend\n        function postRun() {\n            callRuntimeCallbacks(__ATPOSTRUN__);\n            // Handle with the post cvc5 (end of execution) operations in the\n            // react scope. Signs that no error happend.\n            Module['postCVC5'](false);\n        }\n        function addOnInit(cb) {\n            __ATINIT__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n            return id;\n        }\n        function addRunDependency(id) {\n            runDependencies++;\n        }\n        function removeRunDependency(id) {\n            runDependencies--;\n            if (runDependencies == 0) {\n                if (runDependencyWatcher !== null) {\n                    clearInterval(runDependencyWatcher);\n                    runDependencyWatcher = null;\n                }\n                if (dependenciesFulfilled) {\n                    var callback = dependenciesFulfilled;\n                    dependenciesFulfilled = null;\n                    callback();\n                }\n            }\n        }\n        function abort(what) {\n            what = 'Aborted(' + what + ')';\n            err(what);\n            ABORT = true;\n            EXITSTATUS = 1;\n            what += '. Build with -sASSERTIONS for more info.';\n            var e = new WebAssembly.RuntimeError(what);\n            readyPromiseReject(e);\n            throw e;\n        }\n        var dataURIPrefix = 'data:application/octet-stream;base64,';\n        function isDataURI(filename) {\n            return filename.startsWith(dataURIPrefix);\n        }\n        var wasmBinaryFile;\n        // Definition of the binary file name\n        wasmBinaryFile = Module['binaryFileName'];\n        if (!isDataURI(wasmBinaryFile)) {\n            wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary(file) {\n            try {\n                if (file == wasmBinaryFile && wasmBinary) {\n                    return new Uint8Array(wasmBinary);\n                }\n                if (readBinary) {\n                    return readBinary(file);\n                } else {\n                    throw 'both async and sync fetching of the wasm failed';\n                }\n            } catch (err) {\n                abort(err);\n            }\n        }\n        function getBinaryPromise() {\n            if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n                if (typeof fetch == 'function') {\n                    return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n                        .then(function (response) {\n                            if (!response['ok']) {\n                                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                            }\n                            return response['arrayBuffer']();\n                        })\n                        .catch(function () {\n                            return getBinary(wasmBinaryFile);\n                        });\n                }\n            }\n            return Promise.resolve().then(function () {\n                return getBinary(wasmBinaryFile);\n            });\n        }\n        function createWasm() {\n            var info = { a: asmLibraryArg };\n            function receiveInstance(instance, module) {\n                var exports = instance.exports;\n                Module['asm'] = exports;\n                wasmMemory = Module['asm']['A'];\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                wasmTable = Module['asm']['C'];\n                addOnInit(Module['asm']['B']);\n                removeRunDependency('wasm-instantiate');\n            }\n            addRunDependency('wasm-instantiate');\n            function receiveInstantiationResult(result) {\n                receiveInstance(result['instance']);\n            }\n            function instantiateArrayBuffer(receiver) {\n                return getBinaryPromise()\n                    .then(function (binary) {\n                        return WebAssembly.instantiate(binary, info);\n                    })\n                    .then(function (instance) {\n                        return instance;\n                    })\n                    .then(receiver, function (reason) {\n                        err('failed to asynchronously prepare wasm: ' + reason);\n                        abort(reason);\n                    });\n            }\n            function instantiateAsync() {\n                if (\n                    !wasmBinary &&\n                    typeof WebAssembly.instantiateStreaming == 'function' &&\n                    !isDataURI(wasmBinaryFile) &&\n                    typeof fetch == 'function'\n                ) {\n                    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\n                        var result = WebAssembly.instantiateStreaming(response, info);\n                        return result.then(receiveInstantiationResult, function (reason) {\n                            err('wasm streaming compile failed: ' + reason);\n                            err('falling back to ArrayBuffer instantiation');\n                            return instantiateArrayBuffer(receiveInstantiationResult);\n                        });\n                    });\n                } else {\n                    return instantiateArrayBuffer(receiveInstantiationResult);\n                }\n            }\n            if (Module['instantiateWasm']) {\n                try {\n                    var exports = Module['instantiateWasm'](info, receiveInstance);\n                    return exports;\n                } catch (e) {\n                    err('Module.instantiateWasm callback failed with error: ' + e);\n                    return false;\n                }\n            }\n            instantiateAsync().catch(readyPromiseReject);\n            return {};\n        }\n        var tempDouble;\n        var tempI64;\n        function callRuntimeCallbacks(callbacks) {\n            while (callbacks.length > 0) {\n                callbacks.shift()(Module);\n            }\n        }\n        var wasmTableMirror = [];\n        function getWasmTableEntry(funcPtr) {\n            var func = wasmTableMirror[funcPtr];\n            if (!func) {\n                if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n                wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n            }\n            return func;\n        }\n        // Function called after the cvc5 execution when an error happend\n        function handleException(e) {\n            if (e instanceof ExitStatus || e == 'unwind') {\n                return EXITSTATUS;\n            }\n            // Handle with the post cvc5 (end of execution) operations in the\n            // react scope and signs that a error happend.\n            Module['postCVC5'](true);\n            quit_(1, e);\n        }\n        function ___call_sighandler(fp, sig) {\n            getWasmTableEntry(fp)(sig);\n        }\n        function ___cxa_allocate_exception(size) {\n            return _malloc(size + 24) + 24;\n        }\n        function ExceptionInfo(excPtr) {\n            this.excPtr = excPtr;\n            this.ptr = excPtr - 24;\n            this.set_type = function (type) {\n                HEAPU32[(this.ptr + 4) >> 2] = type;\n            };\n            this.get_type = function () {\n                return HEAPU32[(this.ptr + 4) >> 2];\n            };\n            this.set_destructor = function (destructor) {\n                HEAPU32[(this.ptr + 8) >> 2] = destructor;\n            };\n            this.get_destructor = function () {\n                return HEAPU32[(this.ptr + 8) >> 2];\n            };\n            this.set_refcount = function (refcount) {\n                HEAP32[this.ptr >> 2] = refcount;\n            };\n            this.set_caught = function (caught) {\n                caught = caught ? 1 : 0;\n                HEAP8[(this.ptr + 12) >> 0] = caught;\n            };\n            this.get_caught = function () {\n                return HEAP8[(this.ptr + 12) >> 0] != 0;\n            };\n            this.set_rethrown = function (rethrown) {\n                rethrown = rethrown ? 1 : 0;\n                HEAP8[(this.ptr + 13) >> 0] = rethrown;\n            };\n            this.get_rethrown = function () {\n                return HEAP8[(this.ptr + 13) >> 0] != 0;\n            };\n            this.init = function (type, destructor) {\n                this.set_adjusted_ptr(0);\n                this.set_type(type);\n                this.set_destructor(destructor);\n                this.set_refcount(0);\n                this.set_caught(false);\n                this.set_rethrown(false);\n            };\n            this.add_ref = function () {\n                var value = HEAP32[this.ptr >> 2];\n                HEAP32[this.ptr >> 2] = value + 1;\n            };\n            this.release_ref = function () {\n                var prev = HEAP32[this.ptr >> 2];\n                HEAP32[this.ptr >> 2] = prev - 1;\n                return prev === 1;\n            };\n            this.set_adjusted_ptr = function (adjustedPtr) {\n                HEAPU32[(this.ptr + 16) >> 2] = adjustedPtr;\n            };\n            this.get_adjusted_ptr = function () {\n                return HEAPU32[(this.ptr + 16) >> 2];\n            };\n            this.get_exception_ptr = function () {\n                var isPointer = ___cxa_is_pointer_type(this.get_type());\n                if (isPointer) {\n                    return HEAPU32[this.excPtr >> 2];\n                }\n                var adjusted = this.get_adjusted_ptr();\n                if (adjusted !== 0) return adjusted;\n                return this.excPtr;\n            };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n            var info = new ExceptionInfo(ptr);\n            info.init(type, destructor);\n            exceptionLast = ptr;\n            uncaughtExceptionCount++;\n            throw ptr;\n        }\n        var PATH = {\n            isAbs: (path) => path.charAt(0) === '/',\n            splitPath: (filename) => {\n                var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n                return splitPathRe.exec(filename).slice(1);\n            },\n            normalizeArray: (parts, allowAboveRoot) => {\n                var up = 0;\n                for (var i = parts.length - 1; i >= 0; i--) {\n                    var last = parts[i];\n                    if (last === '.') {\n                        parts.splice(i, 1);\n                    } else if (last === '..') {\n                        parts.splice(i, 1);\n                        up++;\n                    } else if (up) {\n                        parts.splice(i, 1);\n                        up--;\n                    }\n                }\n                if (allowAboveRoot) {\n                    for (; up; up--) {\n                        parts.unshift('..');\n                    }\n                }\n                return parts;\n            },\n            normalize: (path) => {\n                var isAbsolute = PATH.isAbs(path),\n                    trailingSlash = path.substr(-1) === '/';\n                path = PATH.normalizeArray(\n                    path.split('/').filter((p) => !!p),\n                    !isAbsolute,\n                ).join('/');\n                if (!path && !isAbsolute) {\n                    path = '.';\n                }\n                if (path && trailingSlash) {\n                    path += '/';\n                }\n                return (isAbsolute ? '/' : '') + path;\n            },\n            dirname: (path) => {\n                var result = PATH.splitPath(path),\n                    root = result[0],\n                    dir = result[1];\n                if (!root && !dir) {\n                    return '.';\n                }\n                if (dir) {\n                    dir = dir.substr(0, dir.length - 1);\n                }\n                return root + dir;\n            },\n            basename: (path) => {\n                if (path === '/') return '/';\n                path = PATH.normalize(path);\n                path = path.replace(/\\/$/, '');\n                var lastSlash = path.lastIndexOf('/');\n                if (lastSlash === -1) return path;\n                return path.substr(lastSlash + 1);\n            },\n            join: function () {\n                var paths = Array.prototype.slice.call(arguments, 0);\n                return PATH.normalize(paths.join('/'));\n            },\n            join2: (l, r) => {\n                return PATH.normalize(l + '/' + r);\n            },\n        };\n        function getRandomDevice() {\n            if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n                var randomBuffer = new Uint8Array(1);\n                return function () {\n                    crypto.getRandomValues(randomBuffer);\n                    return randomBuffer[0];\n                };\n            } else\n                return function () {\n                    abort('randomDevice');\n                };\n        }\n        var PATH_FS = {\n            resolve: function () {\n                var resolvedPath = '',\n                    resolvedAbsolute = false;\n                for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n                    var path = i >= 0 ? arguments[i] : FS.cwd();\n                    if (typeof path != 'string') {\n                        throw new TypeError('Arguments to path.resolve must be strings');\n                    } else if (!path) {\n                        return '';\n                    }\n                    resolvedPath = path + '/' + resolvedPath;\n                    resolvedAbsolute = PATH.isAbs(path);\n                }\n                resolvedPath = PATH.normalizeArray(\n                    resolvedPath.split('/').filter((p) => !!p),\n                    !resolvedAbsolute,\n                ).join('/');\n                return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n            },\n            relative: (from, to) => {\n                from = PATH_FS.resolve(from).substr(1);\n                to = PATH_FS.resolve(to).substr(1);\n                function trim(arr) {\n                    var start = 0;\n                    for (; start < arr.length; start++) {\n                        if (arr[start] !== '') break;\n                    }\n                    var end = arr.length - 1;\n                    for (; end >= 0; end--) {\n                        if (arr[end] !== '') break;\n                    }\n                    if (start > end) return [];\n                    return arr.slice(start, end - start + 1);\n                }\n                var fromParts = trim(from.split('/'));\n                var toParts = trim(to.split('/'));\n                var length = Math.min(fromParts.length, toParts.length);\n                var samePartsLength = length;\n                for (var i = 0; i < length; i++) {\n                    if (fromParts[i] !== toParts[i]) {\n                        samePartsLength = i;\n                        break;\n                    }\n                }\n                var outputParts = [];\n                for (var i = samePartsLength; i < fromParts.length; i++) {\n                    outputParts.push('..');\n                }\n                outputParts = outputParts.concat(toParts.slice(samePartsLength));\n                return outputParts.join('/');\n            },\n        };\n        var TTY = {\n            ttys: [],\n            init: function () {},\n            shutdown: function () {},\n            register: function (dev, ops) {\n                TTY.ttys[dev] = { input: [], output: [], ops: ops };\n                FS.registerDevice(dev, TTY.stream_ops);\n            },\n            stream_ops: {\n                open: function (stream) {\n                    var tty = TTY.ttys[stream.node.rdev];\n                    if (!tty) {\n                        throw new FS.ErrnoError(43);\n                    }\n                    stream.tty = tty;\n                    stream.seekable = false;\n                },\n                close: function (stream) {\n                    stream.tty.ops.flush(stream.tty);\n                },\n                flush: function (stream) {\n                    stream.tty.ops.flush(stream.tty);\n                },\n                read: function (stream, buffer, offset, length, pos) {\n                    if (!stream.tty || !stream.tty.ops.get_char) {\n                        throw new FS.ErrnoError(60);\n                    }\n                    var bytesRead = 0;\n                    for (var i = 0; i < length; i++) {\n                        var result;\n                        try {\n                            result = stream.tty.ops.get_char(stream.tty);\n                        } catch (e) {\n                            throw new FS.ErrnoError(29);\n                        }\n                        if (result === undefined && bytesRead === 0) {\n                            throw new FS.ErrnoError(6);\n                        }\n                        if (result === null || result === undefined) break;\n                        bytesRead++;\n                        buffer[offset + i] = result;\n                    }\n                    if (bytesRead) {\n                        stream.node.timestamp = Date.now();\n                    }\n                    return bytesRead;\n                },\n                write: function (stream, buffer, offset, length, pos) {\n                    if (!stream.tty || !stream.tty.ops.put_char) {\n                        throw new FS.ErrnoError(60);\n                    }\n                    try {\n                        for (var i = 0; i < length; i++) {\n                            stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n                        }\n                    } catch (e) {\n                        throw new FS.ErrnoError(29);\n                    }\n                    if (length) {\n                        stream.node.timestamp = Date.now();\n                    }\n                    return i;\n                },\n            },\n            default_tty_ops: {\n                get_char: function (tty) {\n                    if (!tty.input.length) {\n                        var result = null;\n                        if (typeof window != 'undefined' && typeof window.prompt == 'function') {\n                            // Read the smt text send through the Module and\n                            //  pass it to the web assembly binary program as a\n                            //  'stdin' buffer\n                            result = Module['proofTxt'];\n                            // Call a function that cleans the 'stdout' variable\n                            //  in the react scope only a single time (at the\n                            //  first time it's called).\n                            // It's necessary becasuse cvc5, when running in the\n                            //  browser, identify at first time that there is no\n                            //  content in the 'stdin', then it generates an\n                            //  default cvc5 message about the library. This\n                            //  function only make sure that this 'trash' message\n                            //  is removed from the output.\n                            Module['cleanStdout']();\n                            if (result !== null) {\n                                result += '\\n';\n                            }\n                        } else if (typeof readline == 'function') {\n                            result = readline();\n                            if (result !== null) {\n                                result += '\\n';\n                            }\n                        }\n                        if (!result) {\n                            return null;\n                        }\n                        tty.input = intArrayFromString(result, true);\n                    }\n                    return tty.input.shift();\n                },\n                put_char: function (tty, val) {\n                    if (val === null || val === 10) {\n                        out(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    } else {\n                        if (val != 0) tty.output.push(val);\n                    }\n                },\n                flush: function (tty) {\n                    if (tty.output && tty.output.length > 0) {\n                        out(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    }\n                },\n            },\n            default_tty1_ops: {\n                put_char: function (tty, val) {\n                    if (val === null || val === 10) {\n                        err(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    } else {\n                        if (val != 0) tty.output.push(val);\n                    }\n                },\n                flush: function (tty) {\n                    if (tty.output && tty.output.length > 0) {\n                        err(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    }\n                },\n            },\n        };\n        function mmapAlloc(size) {\n            abort();\n        }\n        var MEMFS = {\n            ops_table: null,\n            mount: function (mount) {\n                return MEMFS.createNode(null, '/', 16384 | 511, 0);\n            },\n            createNode: function (parent, name, mode, dev) {\n                if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (!MEMFS.ops_table) {\n                    MEMFS.ops_table = {\n                        dir: {\n                            node: {\n                                getattr: MEMFS.node_ops.getattr,\n                                setattr: MEMFS.node_ops.setattr,\n                                lookup: MEMFS.node_ops.lookup,\n                                mknod: MEMFS.node_ops.mknod,\n                                rename: MEMFS.node_ops.rename,\n                                unlink: MEMFS.node_ops.unlink,\n                                rmdir: MEMFS.node_ops.rmdir,\n                                readdir: MEMFS.node_ops.readdir,\n                                symlink: MEMFS.node_ops.symlink,\n                            },\n                            stream: { llseek: MEMFS.stream_ops.llseek },\n                        },\n                        file: {\n                            node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },\n                            stream: {\n                                llseek: MEMFS.stream_ops.llseek,\n                                read: MEMFS.stream_ops.read,\n                                write: MEMFS.stream_ops.write,\n                                allocate: MEMFS.stream_ops.allocate,\n                                mmap: MEMFS.stream_ops.mmap,\n                                msync: MEMFS.stream_ops.msync,\n                            },\n                        },\n                        link: {\n                            node: {\n                                getattr: MEMFS.node_ops.getattr,\n                                setattr: MEMFS.node_ops.setattr,\n                                readlink: MEMFS.node_ops.readlink,\n                            },\n                            stream: {},\n                        },\n                        chrdev: {\n                            node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },\n                            stream: FS.chrdev_stream_ops,\n                        },\n                    };\n                }\n                var node = FS.createNode(parent, name, mode, dev);\n                if (FS.isDir(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.dir.node;\n                    node.stream_ops = MEMFS.ops_table.dir.stream;\n                    node.contents = {};\n                } else if (FS.isFile(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.file.node;\n                    node.stream_ops = MEMFS.ops_table.file.stream;\n                    node.usedBytes = 0;\n                    node.contents = null;\n                } else if (FS.isLink(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.link.node;\n                    node.stream_ops = MEMFS.ops_table.link.stream;\n                } else if (FS.isChrdev(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.chrdev.node;\n                    node.stream_ops = MEMFS.ops_table.chrdev.stream;\n                }\n                node.timestamp = Date.now();\n                if (parent) {\n                    parent.contents[name] = node;\n                    parent.timestamp = node.timestamp;\n                }\n                return node;\n            },\n            getFileDataAsTypedArray: function (node) {\n                if (!node.contents) return new Uint8Array(0);\n                if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n                return new Uint8Array(node.contents);\n            },\n            expandFileStorage: function (node, newCapacity) {\n                var prevCapacity = node.contents ? node.contents.length : 0;\n                if (prevCapacity >= newCapacity) return;\n                var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n                newCapacity = Math.max(\n                    newCapacity,\n                    (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>> 0,\n                );\n                if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n                var oldContents = node.contents;\n                node.contents = new Uint8Array(newCapacity);\n                if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n            },\n            resizeFileStorage: function (node, newSize) {\n                if (node.usedBytes == newSize) return;\n                if (newSize == 0) {\n                    node.contents = null;\n                    node.usedBytes = 0;\n                } else {\n                    var oldContents = node.contents;\n                    node.contents = new Uint8Array(newSize);\n                    if (oldContents) {\n                        node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n                    }\n                    node.usedBytes = newSize;\n                }\n            },\n            node_ops: {\n                getattr: function (node) {\n                    var attr = {};\n                    attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n                    attr.ino = node.id;\n                    attr.mode = node.mode;\n                    attr.nlink = 1;\n                    attr.uid = 0;\n                    attr.gid = 0;\n                    attr.rdev = node.rdev;\n                    if (FS.isDir(node.mode)) {\n                        attr.size = 4096;\n                    } else if (FS.isFile(node.mode)) {\n                        attr.size = node.usedBytes;\n                    } else if (FS.isLink(node.mode)) {\n                        attr.size = node.link.length;\n                    } else {\n                        attr.size = 0;\n                    }\n                    attr.atime = new Date(node.timestamp);\n                    attr.mtime = new Date(node.timestamp);\n                    attr.ctime = new Date(node.timestamp);\n                    attr.blksize = 4096;\n                    attr.blocks = Math.ceil(attr.size / attr.blksize);\n                    return attr;\n                },\n                setattr: function (node, attr) {\n                    if (attr.mode !== undefined) {\n                        node.mode = attr.mode;\n                    }\n                    if (attr.timestamp !== undefined) {\n                        node.timestamp = attr.timestamp;\n                    }\n                    if (attr.size !== undefined) {\n                        MEMFS.resizeFileStorage(node, attr.size);\n                    }\n                },\n                lookup: function (parent, name) {\n                    throw FS.genericErrors[44];\n                },\n                mknod: function (parent, name, mode, dev) {\n                    return MEMFS.createNode(parent, name, mode, dev);\n                },\n                rename: function (old_node, new_dir, new_name) {\n                    if (FS.isDir(old_node.mode)) {\n                        var new_node;\n                        try {\n                            new_node = FS.lookupNode(new_dir, new_name);\n                        } catch (e) {}\n                        if (new_node) {\n                            for (var i in new_node.contents) {\n                                throw new FS.ErrnoError(55);\n                            }\n                        }\n                    }\n                    delete old_node.parent.contents[old_node.name];\n                    old_node.parent.timestamp = Date.now();\n                    old_node.name = new_name;\n                    new_dir.contents[new_name] = old_node;\n                    new_dir.timestamp = old_node.parent.timestamp;\n                    old_node.parent = new_dir;\n                },\n                unlink: function (parent, name) {\n                    delete parent.contents[name];\n                    parent.timestamp = Date.now();\n                },\n                rmdir: function (parent, name) {\n                    var node = FS.lookupNode(parent, name);\n                    for (var i in node.contents) {\n                        throw new FS.ErrnoError(55);\n                    }\n                    delete parent.contents[name];\n                    parent.timestamp = Date.now();\n                },\n                readdir: function (node) {\n                    var entries = ['.', '..'];\n                    for (var key in node.contents) {\n                        if (!node.contents.hasOwnProperty(key)) {\n                            continue;\n                        }\n                        entries.push(key);\n                    }\n                    return entries;\n                },\n                symlink: function (parent, newname, oldpath) {\n                    var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n                    node.link = oldpath;\n                    return node;\n                },\n                readlink: function (node) {\n                    if (!FS.isLink(node.mode)) {\n                        throw new FS.ErrnoError(28);\n                    }\n                    return node.link;\n                },\n            },\n            stream_ops: {\n                read: function (stream, buffer, offset, length, position) {\n                    var contents = stream.node.contents;\n                    if (position >= stream.node.usedBytes) return 0;\n                    var size = Math.min(stream.node.usedBytes - position, length);\n                    if (size > 8 && contents.subarray) {\n                        buffer.set(contents.subarray(position, position + size), offset);\n                    } else {\n                        for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n                    }\n                    return size;\n                },\n                write: function (stream, buffer, offset, length, position, canOwn) {\n                    if (!length) return 0;\n                    var node = stream.node;\n                    node.timestamp = Date.now();\n                    if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                        if (canOwn) {\n                            node.contents = buffer.subarray(offset, offset + length);\n                            node.usedBytes = length;\n                            return length;\n                        } else if (node.usedBytes === 0 && position === 0) {\n                            node.contents = buffer.slice(offset, offset + length);\n                            node.usedBytes = length;\n                            return length;\n                        } else if (position + length <= node.usedBytes) {\n                            node.contents.set(buffer.subarray(offset, offset + length), position);\n                            return length;\n                        }\n                    }\n                    MEMFS.expandFileStorage(node, position + length);\n                    if (node.contents.subarray && buffer.subarray) {\n                        node.contents.set(buffer.subarray(offset, offset + length), position);\n                    } else {\n                        for (var i = 0; i < length; i++) {\n                            node.contents[position + i] = buffer[offset + i];\n                        }\n                    }\n                    node.usedBytes = Math.max(node.usedBytes, position + length);\n                    return length;\n                },\n                llseek: function (stream, offset, whence) {\n                    var position = offset;\n                    if (whence === 1) {\n                        position += stream.position;\n                    } else if (whence === 2) {\n                        if (FS.isFile(stream.node.mode)) {\n                            position += stream.node.usedBytes;\n                        }\n                    }\n                    if (position < 0) {\n                        throw new FS.ErrnoError(28);\n                    }\n                    return position;\n                },\n                allocate: function (stream, offset, length) {\n                    MEMFS.expandFileStorage(stream.node, offset + length);\n                    stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n                },\n                mmap: function (stream, length, position, prot, flags) {\n                    if (!FS.isFile(stream.node.mode)) {\n                        throw new FS.ErrnoError(43);\n                    }\n                    var ptr;\n                    var allocated;\n                    var contents = stream.node.contents;\n                    if (!(flags & 2) && contents.buffer === buffer) {\n                        allocated = false;\n                        ptr = contents.byteOffset;\n                    } else {\n                        if (position > 0 || position + length < contents.length) {\n                            if (contents.subarray) {\n                                contents = contents.subarray(position, position + length);\n                            } else {\n                                contents = Array.prototype.slice.call(contents, position, position + length);\n                            }\n                        }\n                        allocated = true;\n                        ptr = mmapAlloc(length);\n                        if (!ptr) {\n                            throw new FS.ErrnoError(48);\n                        }\n                        HEAP8.set(contents, ptr);\n                    }\n                    return { ptr: ptr, allocated: allocated };\n                },\n                msync: function (stream, buffer, offset, length, mmapFlags) {\n                    if (!FS.isFile(stream.node.mode)) {\n                        throw new FS.ErrnoError(43);\n                    }\n                    if (mmapFlags & 2) {\n                        return 0;\n                    }\n                    var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n                    return 0;\n                },\n            },\n        };\n        function asyncLoad(url, onload, onerror, noRunDep) {\n            var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n            readAsync(\n                url,\n                function (arrayBuffer) {\n                    assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n                    onload(new Uint8Array(arrayBuffer));\n                    if (dep) removeRunDependency(dep);\n                },\n                function (event) {\n                    if (onerror) {\n                        onerror();\n                    } else {\n                        throw 'Loading data file \"' + url + '\" failed.';\n                    }\n                },\n            );\n            if (dep) addRunDependency(dep);\n        }\n        var FS = {\n            root: null,\n            mounts: [],\n            devices: {},\n            streams: [],\n            nextInode: 1,\n            nameTable: null,\n            currentPath: '/',\n            initialized: false,\n            ignorePermissions: true,\n            ErrnoError: null,\n            genericErrors: {},\n            filesystems: null,\n            syncFSRequests: 0,\n            lookupPath: (path, opts = {}) => {\n                path = PATH_FS.resolve(FS.cwd(), path);\n                if (!path) return { path: '', node: null };\n                var defaults = { follow_mount: true, recurse_count: 0 };\n                opts = Object.assign(defaults, opts);\n                if (opts.recurse_count > 8) {\n                    throw new FS.ErrnoError(32);\n                }\n                var parts = PATH.normalizeArray(\n                    path.split('/').filter((p) => !!p),\n                    false,\n                );\n                var current = FS.root;\n                var current_path = '/';\n                for (var i = 0; i < parts.length; i++) {\n                    var islast = i === parts.length - 1;\n                    if (islast && opts.parent) {\n                        break;\n                    }\n                    current = FS.lookupNode(current, parts[i]);\n                    current_path = PATH.join2(current_path, parts[i]);\n                    if (FS.isMountpoint(current)) {\n                        if (!islast || (islast && opts.follow_mount)) {\n                            current = current.mounted.root;\n                        }\n                    }\n                    if (!islast || opts.follow) {\n                        var count = 0;\n                        while (FS.isLink(current.mode)) {\n                            var link = FS.readlink(current_path);\n                            current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                            var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\n                            current = lookup.node;\n                            if (count++ > 40) {\n                                throw new FS.ErrnoError(32);\n                            }\n                        }\n                    }\n                }\n                return { path: current_path, node: current };\n            },\n            getPath: (node) => {\n                var path;\n                while (true) {\n                    if (FS.isRoot(node)) {\n                        var mount = node.mount.mountpoint;\n                        if (!path) return mount;\n                        return mount[mount.length - 1] !== '/' ? mount + '/' + path : mount + path;\n                    }\n                    path = path ? node.name + '/' + path : node.name;\n                    node = node.parent;\n                }\n            },\n            hashName: (parentid, name) => {\n                var hash = 0;\n                for (var i = 0; i < name.length; i++) {\n                    hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n                }\n                return ((parentid + hash) >>> 0) % FS.nameTable.length;\n            },\n            hashAddNode: (node) => {\n                var hash = FS.hashName(node.parent.id, node.name);\n                node.name_next = FS.nameTable[hash];\n                FS.nameTable[hash] = node;\n            },\n            hashRemoveNode: (node) => {\n                var hash = FS.hashName(node.parent.id, node.name);\n                if (FS.nameTable[hash] === node) {\n                    FS.nameTable[hash] = node.name_next;\n                } else {\n                    var current = FS.nameTable[hash];\n                    while (current) {\n                        if (current.name_next === node) {\n                            current.name_next = node.name_next;\n                            break;\n                        }\n                        current = current.name_next;\n                    }\n                }\n            },\n            lookupNode: (parent, name) => {\n                var errCode = FS.mayLookup(parent);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode, parent);\n                }\n                var hash = FS.hashName(parent.id, name);\n                for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n                    var nodeName = node.name;\n                    if (node.parent.id === parent.id && nodeName === name) {\n                        return node;\n                    }\n                }\n                return FS.lookup(parent, name);\n            },\n            createNode: (parent, name, mode, rdev) => {\n                var node = new FS.FSNode(parent, name, mode, rdev);\n                FS.hashAddNode(node);\n                return node;\n            },\n            destroyNode: (node) => {\n                FS.hashRemoveNode(node);\n            },\n            isRoot: (node) => {\n                return node === node.parent;\n            },\n            isMountpoint: (node) => {\n                return !!node.mounted;\n            },\n            isFile: (mode) => {\n                return (mode & 61440) === 32768;\n            },\n            isDir: (mode) => {\n                return (mode & 61440) === 16384;\n            },\n            isLink: (mode) => {\n                return (mode & 61440) === 40960;\n            },\n            isChrdev: (mode) => {\n                return (mode & 61440) === 8192;\n            },\n            isBlkdev: (mode) => {\n                return (mode & 61440) === 24576;\n            },\n            isFIFO: (mode) => {\n                return (mode & 61440) === 4096;\n            },\n            isSocket: (mode) => {\n                return (mode & 49152) === 49152;\n            },\n            flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n            modeStringToFlags: (str) => {\n                var flags = FS.flagModes[str];\n                if (typeof flags == 'undefined') {\n                    throw new Error('Unknown file open mode: ' + str);\n                }\n                return flags;\n            },\n            flagsToPermissionString: (flag) => {\n                var perms = ['r', 'w', 'rw'][flag & 3];\n                if (flag & 512) {\n                    perms += 'w';\n                }\n                return perms;\n            },\n            nodePermissions: (node, perms) => {\n                if (FS.ignorePermissions) {\n                    return 0;\n                }\n                if (perms.includes('r') && !(node.mode & 292)) {\n                    return 2;\n                } else if (perms.includes('w') && !(node.mode & 146)) {\n                    return 2;\n                } else if (perms.includes('x') && !(node.mode & 73)) {\n                    return 2;\n                }\n                return 0;\n            },\n            mayLookup: (dir) => {\n                var errCode = FS.nodePermissions(dir, 'x');\n                if (errCode) return errCode;\n                if (!dir.node_ops.lookup) return 2;\n                return 0;\n            },\n            mayCreate: (dir, name) => {\n                try {\n                    var node = FS.lookupNode(dir, name);\n                    return 20;\n                } catch (e) {}\n                return FS.nodePermissions(dir, 'wx');\n            },\n            mayDelete: (dir, name, isdir) => {\n                var node;\n                try {\n                    node = FS.lookupNode(dir, name);\n                } catch (e) {\n                    return e.errno;\n                }\n                var errCode = FS.nodePermissions(dir, 'wx');\n                if (errCode) {\n                    return errCode;\n                }\n                if (isdir) {\n                    if (!FS.isDir(node.mode)) {\n                        return 54;\n                    }\n                    if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n                        return 10;\n                    }\n                } else {\n                    if (FS.isDir(node.mode)) {\n                        return 31;\n                    }\n                }\n                return 0;\n            },\n            mayOpen: (node, flags) => {\n                if (!node) {\n                    return 44;\n                }\n                if (FS.isLink(node.mode)) {\n                    return 32;\n                } else if (FS.isDir(node.mode)) {\n                    if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n                        return 31;\n                    }\n                }\n                return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n            },\n            MAX_OPEN_FDS: 4096,\n            nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n                for (var fd = fd_start; fd <= fd_end; fd++) {\n                    if (!FS.streams[fd]) {\n                        return fd;\n                    }\n                }\n                throw new FS.ErrnoError(33);\n            },\n            getStream: (fd) => FS.streams[fd],\n            createStream: (stream, fd_start, fd_end) => {\n                if (!FS.FSStream) {\n                    FS.FSStream = function () {\n                        this.shared = {};\n                    };\n                    FS.FSStream.prototype = {};\n                    Object.defineProperties(FS.FSStream.prototype, {\n                        object: {\n                            get: function () {\n                                return this.node;\n                            },\n                            set: function (val) {\n                                this.node = val;\n                            },\n                        },\n                        isRead: {\n                            get: function () {\n                                return (this.flags & 2097155) !== 1;\n                            },\n                        },\n                        isWrite: {\n                            get: function () {\n                                return (this.flags & 2097155) !== 0;\n                            },\n                        },\n                        isAppend: {\n                            get: function () {\n                                return this.flags & 1024;\n                            },\n                        },\n                        flags: {\n                            get: function () {\n                                return this.shared.flags;\n                            },\n                            set: function (val) {\n                                this.shared.flags = val;\n                            },\n                        },\n                        position: {\n                            get: function () {\n                                return this.shared.position;\n                            },\n                            set: function (val) {\n                                this.shared.position = val;\n                            },\n                        },\n                    });\n                }\n                stream = Object.assign(new FS.FSStream(), stream);\n                var fd = FS.nextfd(fd_start, fd_end);\n                stream.fd = fd;\n                FS.streams[fd] = stream;\n                return stream;\n            },\n            closeStream: (fd) => {\n                FS.streams[fd] = null;\n            },\n            chrdev_stream_ops: {\n                open: (stream) => {\n                    var device = FS.getDevice(stream.node.rdev);\n                    stream.stream_ops = device.stream_ops;\n                    if (stream.stream_ops.open) {\n                        stream.stream_ops.open(stream);\n                    }\n                },\n                llseek: () => {\n                    throw new FS.ErrnoError(70);\n                },\n            },\n            major: (dev) => dev >> 8,\n            minor: (dev) => dev & 255,\n            makedev: (ma, mi) => (ma << 8) | mi,\n            registerDevice: (dev, ops) => {\n                FS.devices[dev] = { stream_ops: ops };\n            },\n            getDevice: (dev) => FS.devices[dev],\n            getMounts: (mount) => {\n                var mounts = [];\n                var check = [mount];\n                while (check.length) {\n                    var m = check.pop();\n                    mounts.push(m);\n                    check.push.apply(check, m.mounts);\n                }\n                return mounts;\n            },\n            syncfs: (populate, callback) => {\n                if (typeof populate == 'function') {\n                    callback = populate;\n                    populate = false;\n                }\n                FS.syncFSRequests++;\n                if (FS.syncFSRequests > 1) {\n                    err(\n                        'warning: ' +\n                            FS.syncFSRequests +\n                            ' FS.syncfs operations in flight at once, probably just doing extra work',\n                    );\n                }\n                var mounts = FS.getMounts(FS.root.mount);\n                var completed = 0;\n                function doCallback(errCode) {\n                    FS.syncFSRequests--;\n                    return callback(errCode);\n                }\n                function done(errCode) {\n                    if (errCode) {\n                        if (!done.errored) {\n                            done.errored = true;\n                            return doCallback(errCode);\n                        }\n                        return;\n                    }\n                    if (++completed >= mounts.length) {\n                        doCallback(null);\n                    }\n                }\n                mounts.forEach((mount) => {\n                    if (!mount.type.syncfs) {\n                        return done(null);\n                    }\n                    mount.type.syncfs(mount, populate, done);\n                });\n            },\n            mount: (type, opts, mountpoint) => {\n                var root = mountpoint === '/';\n                var pseudo = !mountpoint;\n                var node;\n                if (root && FS.root) {\n                    throw new FS.ErrnoError(10);\n                } else if (!root && !pseudo) {\n                    var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n                    mountpoint = lookup.path;\n                    node = lookup.node;\n                    if (FS.isMountpoint(node)) {\n                        throw new FS.ErrnoError(10);\n                    }\n                    if (!FS.isDir(node.mode)) {\n                        throw new FS.ErrnoError(54);\n                    }\n                }\n                var mount = { type: type, opts: opts, mountpoint: mountpoint, mounts: [] };\n                var mountRoot = type.mount(mount);\n                mountRoot.mount = mount;\n                mount.root = mountRoot;\n                if (root) {\n                    FS.root = mountRoot;\n                } else if (node) {\n                    node.mounted = mount;\n                    if (node.mount) {\n                        node.mount.mounts.push(mount);\n                    }\n                }\n                return mountRoot;\n            },\n            unmount: (mountpoint) => {\n                var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n                if (!FS.isMountpoint(lookup.node)) {\n                    throw new FS.ErrnoError(28);\n                }\n                var node = lookup.node;\n                var mount = node.mounted;\n                var mounts = FS.getMounts(mount);\n                Object.keys(FS.nameTable).forEach((hash) => {\n                    var current = FS.nameTable[hash];\n                    while (current) {\n                        var next = current.name_next;\n                        if (mounts.includes(current.mount)) {\n                            FS.destroyNode(current);\n                        }\n                        current = next;\n                    }\n                });\n                node.mounted = null;\n                var idx = node.mount.mounts.indexOf(mount);\n                node.mount.mounts.splice(idx, 1);\n            },\n            lookup: (parent, name) => {\n                return parent.node_ops.lookup(parent, name);\n            },\n            mknod: (path, mode, dev) => {\n                var lookup = FS.lookupPath(path, { parent: true });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                if (!name || name === '.' || name === '..') {\n                    throw new FS.ErrnoError(28);\n                }\n                var errCode = FS.mayCreate(parent, name);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!parent.node_ops.mknod) {\n                    throw new FS.ErrnoError(63);\n                }\n                return parent.node_ops.mknod(parent, name, mode, dev);\n            },\n            create: (path, mode) => {\n                mode = mode !== undefined ? mode : 438;\n                mode &= 4095;\n                mode |= 32768;\n                return FS.mknod(path, mode, 0);\n            },\n            mkdir: (path, mode) => {\n                mode = mode !== undefined ? mode : 511;\n                mode &= 511 | 512;\n                mode |= 16384;\n                return FS.mknod(path, mode, 0);\n            },\n            mkdirTree: (path, mode) => {\n                var dirs = path.split('/');\n                var d = '';\n                for (var i = 0; i < dirs.length; ++i) {\n                    if (!dirs[i]) continue;\n                    d += '/' + dirs[i];\n                    try {\n                        FS.mkdir(d, mode);\n                    } catch (e) {\n                        if (e.errno != 20) throw e;\n                    }\n                }\n            },\n            mkdev: (path, mode, dev) => {\n                if (typeof dev == 'undefined') {\n                    dev = mode;\n                    mode = 438;\n                }\n                mode |= 8192;\n                return FS.mknod(path, mode, dev);\n            },\n            symlink: (oldpath, newpath) => {\n                if (!PATH_FS.resolve(oldpath)) {\n                    throw new FS.ErrnoError(44);\n                }\n                var lookup = FS.lookupPath(newpath, { parent: true });\n                var parent = lookup.node;\n                if (!parent) {\n                    throw new FS.ErrnoError(44);\n                }\n                var newname = PATH.basename(newpath);\n                var errCode = FS.mayCreate(parent, newname);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!parent.node_ops.symlink) {\n                    throw new FS.ErrnoError(63);\n                }\n                return parent.node_ops.symlink(parent, newname, oldpath);\n            },\n            rename: (old_path, new_path) => {\n                var old_dirname = PATH.dirname(old_path);\n                var new_dirname = PATH.dirname(new_path);\n                var old_name = PATH.basename(old_path);\n                var new_name = PATH.basename(new_path);\n                var lookup, old_dir, new_dir;\n                lookup = FS.lookupPath(old_path, { parent: true });\n                old_dir = lookup.node;\n                lookup = FS.lookupPath(new_path, { parent: true });\n                new_dir = lookup.node;\n                if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n                if (old_dir.mount !== new_dir.mount) {\n                    throw new FS.ErrnoError(75);\n                }\n                var old_node = FS.lookupNode(old_dir, old_name);\n                var relative = PATH_FS.relative(old_path, new_dirname);\n                if (relative.charAt(0) !== '.') {\n                    throw new FS.ErrnoError(28);\n                }\n                relative = PATH_FS.relative(new_path, old_dirname);\n                if (relative.charAt(0) !== '.') {\n                    throw new FS.ErrnoError(55);\n                }\n                var new_node;\n                try {\n                    new_node = FS.lookupNode(new_dir, new_name);\n                } catch (e) {}\n                if (old_node === new_node) {\n                    return;\n                }\n                var isdir = FS.isDir(old_node.mode);\n                var errCode = FS.mayDelete(old_dir, old_name, isdir);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!old_dir.node_ops.rename) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n                    throw new FS.ErrnoError(10);\n                }\n                if (new_dir !== old_dir) {\n                    errCode = FS.nodePermissions(old_dir, 'w');\n                    if (errCode) {\n                        throw new FS.ErrnoError(errCode);\n                    }\n                }\n                FS.hashRemoveNode(old_node);\n                try {\n                    old_dir.node_ops.rename(old_node, new_dir, new_name);\n                } catch (e) {\n                    throw e;\n                } finally {\n                    FS.hashAddNode(old_node);\n                }\n            },\n            rmdir: (path) => {\n                var lookup = FS.lookupPath(path, { parent: true });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, true);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!parent.node_ops.rmdir) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (FS.isMountpoint(node)) {\n                    throw new FS.ErrnoError(10);\n                }\n                parent.node_ops.rmdir(parent, name);\n                FS.destroyNode(node);\n            },\n            readdir: (path) => {\n                var lookup = FS.lookupPath(path, { follow: true });\n                var node = lookup.node;\n                if (!node.node_ops.readdir) {\n                    throw new FS.ErrnoError(54);\n                }\n                return node.node_ops.readdir(node);\n            },\n            unlink: (path) => {\n                var lookup = FS.lookupPath(path, { parent: true });\n                var parent = lookup.node;\n                if (!parent) {\n                    throw new FS.ErrnoError(44);\n                }\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, false);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                if (!parent.node_ops.unlink) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (FS.isMountpoint(node)) {\n                    throw new FS.ErrnoError(10);\n                }\n                parent.node_ops.unlink(parent, name);\n                FS.destroyNode(node);\n            },\n            readlink: (path) => {\n                var lookup = FS.lookupPath(path);\n                var link = lookup.node;\n                if (!link) {\n                    throw new FS.ErrnoError(44);\n                }\n                if (!link.node_ops.readlink) {\n                    throw new FS.ErrnoError(28);\n                }\n                return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n            },\n            stat: (path, dontFollow) => {\n                var lookup = FS.lookupPath(path, { follow: !dontFollow });\n                var node = lookup.node;\n                if (!node) {\n                    throw new FS.ErrnoError(44);\n                }\n                if (!node.node_ops.getattr) {\n                    throw new FS.ErrnoError(63);\n                }\n                return node.node_ops.getattr(node);\n            },\n            lstat: (path) => {\n                return FS.stat(path, true);\n            },\n            chmod: (path, mode, dontFollow) => {\n                var node;\n                if (typeof path == 'string') {\n                    var lookup = FS.lookupPath(path, { follow: !dontFollow });\n                    node = lookup.node;\n                } else {\n                    node = path;\n                }\n                if (!node.node_ops.setattr) {\n                    throw new FS.ErrnoError(63);\n                }\n                node.node_ops.setattr(node, { mode: (mode & 4095) | (node.mode & ~4095), timestamp: Date.now() });\n            },\n            lchmod: (path, mode) => {\n                FS.chmod(path, mode, true);\n            },\n            fchmod: (fd, mode) => {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                    throw new FS.ErrnoError(8);\n                }\n                FS.chmod(stream.node, mode);\n            },\n            chown: (path, uid, gid, dontFollow) => {\n                var node;\n                if (typeof path == 'string') {\n                    var lookup = FS.lookupPath(path, { follow: !dontFollow });\n                    node = lookup.node;\n                } else {\n                    node = path;\n                }\n                if (!node.node_ops.setattr) {\n                    throw new FS.ErrnoError(63);\n                }\n                node.node_ops.setattr(node, { timestamp: Date.now() });\n            },\n            lchown: (path, uid, gid) => {\n                FS.chown(path, uid, gid, true);\n            },\n            fchown: (fd, uid, gid) => {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                    throw new FS.ErrnoError(8);\n                }\n                FS.chown(stream.node, uid, gid);\n            },\n            truncate: (path, len) => {\n                if (len < 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                var node;\n                if (typeof path == 'string') {\n                    var lookup = FS.lookupPath(path, { follow: true });\n                    node = lookup.node;\n                } else {\n                    node = path;\n                }\n                if (!node.node_ops.setattr) {\n                    throw new FS.ErrnoError(63);\n                }\n                if (FS.isDir(node.mode)) {\n                    throw new FS.ErrnoError(31);\n                }\n                if (!FS.isFile(node.mode)) {\n                    throw new FS.ErrnoError(28);\n                }\n                var errCode = FS.nodePermissions(node, 'w');\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n            },\n            ftruncate: (fd, len) => {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                    throw new FS.ErrnoError(8);\n                }\n                if ((stream.flags & 2097155) === 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                FS.truncate(stream.node, len);\n            },\n            utime: (path, atime, mtime) => {\n                var lookup = FS.lookupPath(path, { follow: true });\n                var node = lookup.node;\n                node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n            },\n            open: (path, flags, mode) => {\n                if (path === '') {\n                    throw new FS.ErrnoError(44);\n                }\n                flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n                mode = typeof mode == 'undefined' ? 438 : mode;\n                if (flags & 64) {\n                    mode = (mode & 4095) | 32768;\n                } else {\n                    mode = 0;\n                }\n                var node;\n                if (typeof path == 'object') {\n                    node = path;\n                } else {\n                    path = PATH.normalize(path);\n                    try {\n                        var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n                        node = lookup.node;\n                    } catch (e) {}\n                }\n                var created = false;\n                if (flags & 64) {\n                    if (node) {\n                        if (flags & 128) {\n                            throw new FS.ErrnoError(20);\n                        }\n                    } else {\n                        node = FS.mknod(path, mode, 0);\n                        created = true;\n                    }\n                }\n                if (!node) {\n                    throw new FS.ErrnoError(44);\n                }\n                if (FS.isChrdev(node.mode)) {\n                    flags &= ~512;\n                }\n                if (flags & 65536 && !FS.isDir(node.mode)) {\n                    throw new FS.ErrnoError(54);\n                }\n                if (!created) {\n                    var errCode = FS.mayOpen(node, flags);\n                    if (errCode) {\n                        throw new FS.ErrnoError(errCode);\n                    }\n                }\n                if (flags & 512 && !created) {\n                    FS.truncate(node, 0);\n                }\n                flags &= ~(128 | 512 | 131072);\n                var stream = FS.createStream({\n                    node: node,\n                    path: FS.getPath(node),\n                    flags: flags,\n                    seekable: true,\n                    position: 0,\n                    stream_ops: node.stream_ops,\n                    ungotten: [],\n                    error: false,\n                });\n                if (stream.stream_ops.open) {\n                    stream.stream_ops.open(stream);\n                }\n                if (Module['logReadFiles'] && !(flags & 1)) {\n                    if (!FS.readFiles) FS.readFiles = {};\n                    if (!(path in FS.readFiles)) {\n                        FS.readFiles[path] = 1;\n                    }\n                }\n                return stream;\n            },\n            close: (stream) => {\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (stream.getdents) stream.getdents = null;\n                try {\n                    if (stream.stream_ops.close) {\n                        stream.stream_ops.close(stream);\n                    }\n                } catch (e) {\n                    throw e;\n                } finally {\n                    FS.closeStream(stream.fd);\n                }\n                stream.fd = null;\n            },\n            isClosed: (stream) => {\n                return stream.fd === null;\n            },\n            llseek: (stream, offset, whence) => {\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (!stream.seekable || !stream.stream_ops.llseek) {\n                    throw new FS.ErrnoError(70);\n                }\n                if (whence != 0 && whence != 1 && whence != 2) {\n                    throw new FS.ErrnoError(28);\n                }\n                stream.position = stream.stream_ops.llseek(stream, offset, whence);\n                stream.ungotten = [];\n                return stream.position;\n            },\n            read: (stream, buffer, offset, length, position) => {\n                if (length < 0 || position < 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if ((stream.flags & 2097155) === 1) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (FS.isDir(stream.node.mode)) {\n                    throw new FS.ErrnoError(31);\n                }\n                if (!stream.stream_ops.read) {\n                    throw new FS.ErrnoError(28);\n                }\n                var seeking = typeof position != 'undefined';\n                if (!seeking) {\n                    position = stream.position;\n                } else if (!stream.seekable) {\n                    throw new FS.ErrnoError(70);\n                }\n                var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n                if (!seeking) stream.position += bytesRead;\n                return bytesRead;\n            },\n            write: (stream, buffer, offset, length, position, canOwn) => {\n                if (length < 0 || position < 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if ((stream.flags & 2097155) === 0) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (FS.isDir(stream.node.mode)) {\n                    throw new FS.ErrnoError(31);\n                }\n                if (!stream.stream_ops.write) {\n                    throw new FS.ErrnoError(28);\n                }\n                if (stream.seekable && stream.flags & 1024) {\n                    FS.llseek(stream, 0, 2);\n                }\n                var seeking = typeof position != 'undefined';\n                if (!seeking) {\n                    position = stream.position;\n                } else if (!stream.seekable) {\n                    throw new FS.ErrnoError(70);\n                }\n                var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n                if (!seeking) stream.position += bytesWritten;\n                return bytesWritten;\n            },\n            allocate: (stream, offset, length) => {\n                if (FS.isClosed(stream)) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (offset < 0 || length <= 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                if ((stream.flags & 2097155) === 0) {\n                    throw new FS.ErrnoError(8);\n                }\n                if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n                    throw new FS.ErrnoError(43);\n                }\n                if (!stream.stream_ops.allocate) {\n                    throw new FS.ErrnoError(138);\n                }\n                stream.stream_ops.allocate(stream, offset, length);\n            },\n            mmap: (stream, length, position, prot, flags) => {\n                if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n                    throw new FS.ErrnoError(2);\n                }\n                if ((stream.flags & 2097155) === 1) {\n                    throw new FS.ErrnoError(2);\n                }\n                if (!stream.stream_ops.mmap) {\n                    throw new FS.ErrnoError(43);\n                }\n                return stream.stream_ops.mmap(stream, length, position, prot, flags);\n            },\n            msync: (stream, buffer, offset, length, mmapFlags) => {\n                if (!stream || !stream.stream_ops.msync) {\n                    return 0;\n                }\n                return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n            },\n            munmap: (stream) => 0,\n            ioctl: (stream, cmd, arg) => {\n                if (!stream.stream_ops.ioctl) {\n                    throw new FS.ErrnoError(59);\n                }\n                return stream.stream_ops.ioctl(stream, cmd, arg);\n            },\n            readFile: (path, opts = {}) => {\n                opts.flags = opts.flags || 0;\n                opts.encoding = opts.encoding || 'binary';\n                if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n                    throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n                }\n                var ret;\n                var stream = FS.open(path, opts.flags);\n                var stat = FS.stat(path);\n                var length = stat.size;\n                var buf = new Uint8Array(length);\n                FS.read(stream, buf, 0, length, 0);\n                if (opts.encoding === 'utf8') {\n                    ret = UTF8ArrayToString(buf, 0);\n                } else if (opts.encoding === 'binary') {\n                    ret = buf;\n                }\n                FS.close(stream);\n                return ret;\n            },\n            writeFile: (path, data, opts = {}) => {\n                opts.flags = opts.flags || 577;\n                var stream = FS.open(path, opts.flags, opts.mode);\n                if (typeof data == 'string') {\n                    var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n                    var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n                    FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n                } else if (ArrayBuffer.isView(data)) {\n                    FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n                } else {\n                    throw new Error('Unsupported data type');\n                }\n                FS.close(stream);\n            },\n            cwd: () => FS.currentPath,\n            chdir: (path) => {\n                var lookup = FS.lookupPath(path, { follow: true });\n                if (lookup.node === null) {\n                    throw new FS.ErrnoError(44);\n                }\n                if (!FS.isDir(lookup.node.mode)) {\n                    throw new FS.ErrnoError(54);\n                }\n                var errCode = FS.nodePermissions(lookup.node, 'x');\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n                FS.currentPath = lookup.path;\n            },\n            createDefaultDirectories: () => {\n                FS.mkdir('/tmp');\n                FS.mkdir('/home');\n                FS.mkdir('/home/web_user');\n            },\n            createDefaultDevices: () => {\n                FS.mkdir('/dev');\n                FS.registerDevice(FS.makedev(1, 3), {\n                    read: () => 0,\n                    write: (stream, buffer, offset, length, pos) => length,\n                });\n                FS.mkdev('/dev/null', FS.makedev(1, 3));\n                TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n                TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n                FS.mkdev('/dev/tty', FS.makedev(5, 0));\n                FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n                var random_device = getRandomDevice();\n                FS.createDevice('/dev', 'random', random_device);\n                FS.createDevice('/dev', 'urandom', random_device);\n                FS.mkdir('/dev/shm');\n                FS.mkdir('/dev/shm/tmp');\n            },\n            createSpecialDirectories: () => {\n                FS.mkdir('/proc');\n                var proc_self = FS.mkdir('/proc/self');\n                FS.mkdir('/proc/self/fd');\n                FS.mount(\n                    {\n                        mount: () => {\n                            var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n                            node.node_ops = {\n                                lookup: (parent, name) => {\n                                    var fd = +name;\n                                    var stream = FS.getStream(fd);\n                                    if (!stream) throw new FS.ErrnoError(8);\n                                    var ret = {\n                                        parent: null,\n                                        mount: { mountpoint: 'fake' },\n                                        node_ops: { readlink: () => stream.path },\n                                    };\n                                    ret.parent = ret;\n                                    return ret;\n                                },\n                            };\n                            return node;\n                        },\n                    },\n                    {},\n                    '/proc/self/fd',\n                );\n            },\n            createStandardStreams: () => {\n                if (Module['stdin']) {\n                    FS.createDevice('/dev', 'stdin', Module['stdin']);\n                } else {\n                    FS.symlink('/dev/tty', '/dev/stdin');\n                }\n                if (Module['stdout']) {\n                    FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n                } else {\n                    FS.symlink('/dev/tty', '/dev/stdout');\n                }\n                if (Module['stderr']) {\n                    FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n                } else {\n                    FS.symlink('/dev/tty1', '/dev/stderr');\n                }\n                var stdin = FS.open('/dev/stdin', 0);\n                var stdout = FS.open('/dev/stdout', 1);\n                var stderr = FS.open('/dev/stderr', 1);\n            },\n            ensureErrnoError: () => {\n                if (FS.ErrnoError) return;\n                FS.ErrnoError = function ErrnoError(errno, node) {\n                    this.node = node;\n                    this.setErrno = function (errno) {\n                        this.errno = errno;\n                    };\n                    this.setErrno(errno);\n                    this.message = 'FS error';\n                };\n                FS.ErrnoError.prototype = new Error();\n                FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n                [44].forEach((code) => {\n                    FS.genericErrors[code] = new FS.ErrnoError(code);\n                    FS.genericErrors[code].stack = '<generic error, no stack>';\n                });\n            },\n            staticInit: () => {\n                FS.ensureErrnoError();\n                FS.nameTable = new Array(4096);\n                FS.mount(MEMFS, {}, '/');\n                FS.createDefaultDirectories();\n                FS.createDefaultDevices();\n                FS.createSpecialDirectories();\n                FS.filesystems = { MEMFS: MEMFS };\n            },\n            init: (input, output, error) => {\n                FS.init.initialized = true;\n                FS.ensureErrnoError();\n                Module['stdin'] = input || Module['stdin'];\n                Module['stdout'] = output || Module['stdout'];\n                Module['stderr'] = error || Module['stderr'];\n                FS.createStandardStreams();\n            },\n            quit: () => {\n                FS.init.initialized = false;\n                for (var i = 0; i < FS.streams.length; i++) {\n                    var stream = FS.streams[i];\n                    if (!stream) {\n                        continue;\n                    }\n                    FS.close(stream);\n                }\n            },\n            getMode: (canRead, canWrite) => {\n                var mode = 0;\n                if (canRead) mode |= 292 | 73;\n                if (canWrite) mode |= 146;\n                return mode;\n            },\n            findObject: (path, dontResolveLastLink) => {\n                var ret = FS.analyzePath(path, dontResolveLastLink);\n                if (ret.exists) {\n                    return ret.object;\n                } else {\n                    return null;\n                }\n            },\n            analyzePath: (path, dontResolveLastLink) => {\n                try {\n                    var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n                    path = lookup.path;\n                } catch (e) {}\n                var ret = {\n                    isRoot: false,\n                    exists: false,\n                    error: 0,\n                    name: null,\n                    path: null,\n                    object: null,\n                    parentExists: false,\n                    parentPath: null,\n                    parentObject: null,\n                };\n                try {\n                    var lookup = FS.lookupPath(path, { parent: true });\n                    ret.parentExists = true;\n                    ret.parentPath = lookup.path;\n                    ret.parentObject = lookup.node;\n                    ret.name = PATH.basename(path);\n                    lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n                    ret.exists = true;\n                    ret.path = lookup.path;\n                    ret.object = lookup.node;\n                    ret.name = lookup.node.name;\n                    ret.isRoot = lookup.path === '/';\n                } catch (e) {\n                    ret.error = e.errno;\n                }\n                return ret;\n            },\n            createPath: (parent, path, canRead, canWrite) => {\n                parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n                var parts = path.split('/').reverse();\n                while (parts.length) {\n                    var part = parts.pop();\n                    if (!part) continue;\n                    var current = PATH.join2(parent, part);\n                    try {\n                        FS.mkdir(current);\n                    } catch (e) {}\n                    parent = current;\n                }\n                return current;\n            },\n            createFile: (parent, name, properties, canRead, canWrite) => {\n                var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(canRead, canWrite);\n                return FS.create(path, mode);\n            },\n            createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n                var path = name;\n                if (parent) {\n                    parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n                    path = name ? PATH.join2(parent, name) : parent;\n                }\n                var mode = FS.getMode(canRead, canWrite);\n                var node = FS.create(path, mode);\n                if (data) {\n                    if (typeof data == 'string') {\n                        var arr = new Array(data.length);\n                        for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n                        data = arr;\n                    }\n                    FS.chmod(node, mode | 146);\n                    var stream = FS.open(node, 577);\n                    FS.write(stream, data, 0, data.length, 0, canOwn);\n                    FS.close(stream);\n                    FS.chmod(node, mode);\n                }\n                return node;\n            },\n            createDevice: (parent, name, input, output) => {\n                var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(!!input, !!output);\n                if (!FS.createDevice.major) FS.createDevice.major = 64;\n                var dev = FS.makedev(FS.createDevice.major++, 0);\n                FS.registerDevice(dev, {\n                    open: (stream) => {\n                        stream.seekable = false;\n                    },\n                    close: (stream) => {\n                        if (output && output.buffer && output.buffer.length) {\n                            output(10);\n                        }\n                    },\n                    read: (stream, buffer, offset, length, pos) => {\n                        var bytesRead = 0;\n                        for (var i = 0; i < length; i++) {\n                            var result;\n                            try {\n                                result = input();\n                            } catch (e) {\n                                throw new FS.ErrnoError(29);\n                            }\n                            if (result === undefined && bytesRead === 0) {\n                                throw new FS.ErrnoError(6);\n                            }\n                            if (result === null || result === undefined) break;\n                            bytesRead++;\n                            buffer[offset + i] = result;\n                        }\n                        if (bytesRead) {\n                            stream.node.timestamp = Date.now();\n                        }\n                        return bytesRead;\n                    },\n                    write: (stream, buffer, offset, length, pos) => {\n                        for (var i = 0; i < length; i++) {\n                            try {\n                                output(buffer[offset + i]);\n                            } catch (e) {\n                                throw new FS.ErrnoError(29);\n                            }\n                        }\n                        if (length) {\n                            stream.node.timestamp = Date.now();\n                        }\n                        return i;\n                    },\n                });\n                return FS.mkdev(path, mode, dev);\n            },\n            forceLoadFile: (obj) => {\n                if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n                if (typeof XMLHttpRequest != 'undefined') {\n                    throw new Error(\n                        'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n                    );\n                } else if (read_) {\n                    try {\n                        obj.contents = intArrayFromString(read_(obj.url), true);\n                        obj.usedBytes = obj.contents.length;\n                    } catch (e) {\n                        throw new FS.ErrnoError(29);\n                    }\n                } else {\n                    throw new Error('Cannot load without read() or XMLHttpRequest.');\n                }\n            },\n            createLazyFile: (parent, name, url, canRead, canWrite) => {\n                function LazyUint8Array() {\n                    this.lengthKnown = false;\n                    this.chunks = [];\n                }\n                LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n                    if (idx > this.length - 1 || idx < 0) {\n                        return undefined;\n                    }\n                    var chunkOffset = idx % this.chunkSize;\n                    var chunkNum = (idx / this.chunkSize) | 0;\n                    return this.getter(chunkNum)[chunkOffset];\n                };\n                LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n                    this.getter = getter;\n                };\n                LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('HEAD', url, false);\n                    xhr.send(null);\n                    if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\n                        throw new Error(\"Couldn't load \" + url + '. Status: ' + xhr.status);\n                    var datalength = Number(xhr.getResponseHeader('Content-length'));\n                    var header;\n                    var hasByteServing = (header = xhr.getResponseHeader('Accept-Ranges')) && header === 'bytes';\n                    var usesGzip = (header = xhr.getResponseHeader('Content-Encoding')) && header === 'gzip';\n                    var chunkSize = 1024 * 1024;\n                    if (!hasByteServing) chunkSize = datalength;\n                    var doXHR = (from, to) => {\n                        if (from > to)\n                            throw new Error('invalid range (' + from + ', ' + to + ') or no bytes requested!');\n                        if (to > datalength - 1)\n                            throw new Error('only ' + datalength + ' bytes available! programmer error!');\n                        var xhr = new XMLHttpRequest();\n                        xhr.open('GET', url, false);\n                        if (datalength !== chunkSize) xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n                        xhr.responseType = 'arraybuffer';\n                        if (xhr.overrideMimeType) {\n                            xhr.overrideMimeType('text/plain; charset=x-user-defined');\n                        }\n                        xhr.send(null);\n                        if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\n                            throw new Error(\"Couldn't load \" + url + '. Status: ' + xhr.status);\n                        if (xhr.response !== undefined) {\n                            return new Uint8Array(xhr.response || []);\n                        } else {\n                            return intArrayFromString(xhr.responseText || '', true);\n                        }\n                    };\n                    var lazyArray = this;\n                    lazyArray.setDataGetter((chunkNum) => {\n                        var start = chunkNum * chunkSize;\n                        var end = (chunkNum + 1) * chunkSize - 1;\n                        end = Math.min(end, datalength - 1);\n                        if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                            lazyArray.chunks[chunkNum] = doXHR(start, end);\n                        }\n                        if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n                        return lazyArray.chunks[chunkNum];\n                    });\n                    if (usesGzip || !datalength) {\n                        chunkSize = datalength = 1;\n                        datalength = this.getter(0).length;\n                        chunkSize = datalength;\n                        out('LazyFiles on gzip forces download of the whole file when length is accessed');\n                    }\n                    this._length = datalength;\n                    this._chunkSize = chunkSize;\n                    this.lengthKnown = true;\n                };\n                if (typeof XMLHttpRequest != 'undefined') {\n                    if (!ENVIRONMENT_IS_WORKER)\n                        throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n                    var lazyArray = new LazyUint8Array();\n                    Object.defineProperties(lazyArray, {\n                        length: {\n                            get: function () {\n                                if (!this.lengthKnown) {\n                                    this.cacheLength();\n                                }\n                                return this._length;\n                            },\n                        },\n                        chunkSize: {\n                            get: function () {\n                                if (!this.lengthKnown) {\n                                    this.cacheLength();\n                                }\n                                return this._chunkSize;\n                            },\n                        },\n                    });\n                    var properties = { isDevice: false, contents: lazyArray };\n                } else {\n                    var properties = { isDevice: false, url: url };\n                }\n                var node = FS.createFile(parent, name, properties, canRead, canWrite);\n                if (properties.contents) {\n                    node.contents = properties.contents;\n                } else if (properties.url) {\n                    node.contents = null;\n                    node.url = properties.url;\n                }\n                Object.defineProperties(node, {\n                    usedBytes: {\n                        get: function () {\n                            return this.contents.length;\n                        },\n                    },\n                });\n                var stream_ops = {};\n                var keys = Object.keys(node.stream_ops);\n                keys.forEach((key) => {\n                    var fn = node.stream_ops[key];\n                    stream_ops[key] = function forceLoadLazyFile() {\n                        FS.forceLoadFile(node);\n                        return fn.apply(null, arguments);\n                    };\n                });\n                function writeChunks(stream, buffer, offset, length, position) {\n                    var contents = stream.node.contents;\n                    if (position >= contents.length) return 0;\n                    var size = Math.min(contents.length - position, length);\n                    if (contents.slice) {\n                        for (var i = 0; i < size; i++) {\n                            buffer[offset + i] = contents[position + i];\n                        }\n                    } else {\n                        for (var i = 0; i < size; i++) {\n                            buffer[offset + i] = contents.get(position + i);\n                        }\n                    }\n                    return size;\n                }\n                stream_ops.read = (stream, buffer, offset, length, position) => {\n                    FS.forceLoadFile(node);\n                    return writeChunks(stream, buffer, offset, length, position);\n                };\n                stream_ops.mmap = (stream, length, position, prot, flags) => {\n                    FS.forceLoadFile(node);\n                    var ptr = mmapAlloc(length);\n                    if (!ptr) {\n                        throw new FS.ErrnoError(48);\n                    }\n                    writeChunks(stream, HEAP8, ptr, length, position);\n                    return { ptr: ptr, allocated: true };\n                };\n                node.stream_ops = stream_ops;\n                return node;\n            },\n            createPreloadedFile: (\n                parent,\n                name,\n                url,\n                canRead,\n                canWrite,\n                onload,\n                onerror,\n                dontCreateFile,\n                canOwn,\n                preFinish,\n            ) => {\n                var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n                var dep = getUniqueRunDependency('cp ' + fullname);\n                function processData(byteArray) {\n                    function finish(byteArray) {\n                        if (preFinish) preFinish();\n                        if (!dontCreateFile) {\n                            FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n                        }\n                        if (onload) onload();\n                        removeRunDependency(dep);\n                    }\n                    if (\n                        Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n                            if (onerror) onerror();\n                            removeRunDependency(dep);\n                        })\n                    ) {\n                        return;\n                    }\n                    finish(byteArray);\n                }\n                addRunDependency(dep);\n                if (typeof url == 'string') {\n                    asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n                } else {\n                    processData(url);\n                }\n            },\n            indexedDB: () => {\n                return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n            },\n            DB_NAME: () => {\n                return 'EM_FS_' + window.location.pathname;\n            },\n            DB_VERSION: 20,\n            DB_STORE_NAME: 'FILE_DATA',\n            saveFilesToDB: (paths, onload, onerror) => {\n                onload = onload || (() => {});\n                onerror = onerror || (() => {});\n                var indexedDB = FS.indexedDB();\n                try {\n                    var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n                } catch (e) {\n                    return onerror(e);\n                }\n                openRequest.onupgradeneeded = () => {\n                    out('creating db');\n                    var db = openRequest.result;\n                    db.createObjectStore(FS.DB_STORE_NAME);\n                };\n                openRequest.onsuccess = () => {\n                    var db = openRequest.result;\n                    var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n                    var files = transaction.objectStore(FS.DB_STORE_NAME);\n                    var ok = 0,\n                        fail = 0,\n                        total = paths.length;\n                    function finish() {\n                        if (fail == 0) onload();\n                        else onerror();\n                    }\n                    paths.forEach((path) => {\n                        var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n                        putRequest.onsuccess = () => {\n                            ok++;\n                            if (ok + fail == total) finish();\n                        };\n                        putRequest.onerror = () => {\n                            fail++;\n                            if (ok + fail == total) finish();\n                        };\n                    });\n                    transaction.onerror = onerror;\n                };\n                openRequest.onerror = onerror;\n            },\n            loadFilesFromDB: (paths, onload, onerror) => {\n                onload = onload || (() => {});\n                onerror = onerror || (() => {});\n                var indexedDB = FS.indexedDB();\n                try {\n                    var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n                } catch (e) {\n                    return onerror(e);\n                }\n                openRequest.onupgradeneeded = onerror;\n                openRequest.onsuccess = () => {\n                    var db = openRequest.result;\n                    try {\n                        var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n                    } catch (e) {\n                        onerror(e);\n                        return;\n                    }\n                    var files = transaction.objectStore(FS.DB_STORE_NAME);\n                    var ok = 0,\n                        fail = 0,\n                        total = paths.length;\n                    function finish() {\n                        if (fail == 0) onload();\n                        else onerror();\n                    }\n                    paths.forEach((path) => {\n                        var getRequest = files.get(path);\n                        getRequest.onsuccess = () => {\n                            if (FS.analyzePath(path).exists) {\n                                FS.unlink(path);\n                            }\n                            FS.createDataFile(\n                                PATH.dirname(path),\n                                PATH.basename(path),\n                                getRequest.result,\n                                true,\n                                true,\n                                true,\n                            );\n                            ok++;\n                            if (ok + fail == total) finish();\n                        };\n                        getRequest.onerror = () => {\n                            fail++;\n                            if (ok + fail == total) finish();\n                        };\n                    });\n                    transaction.onerror = onerror;\n                };\n                openRequest.onerror = onerror;\n            },\n        };\n        var SYSCALLS = {\n            DEFAULT_POLLMASK: 5,\n            calculateAt: function (dirfd, path, allowEmpty) {\n                if (PATH.isAbs(path)) {\n                    return path;\n                }\n                var dir;\n                if (dirfd === -100) {\n                    dir = FS.cwd();\n                } else {\n                    var dirstream = FS.getStream(dirfd);\n                    if (!dirstream) throw new FS.ErrnoError(8);\n                    dir = dirstream.path;\n                }\n                if (path.length == 0) {\n                    if (!allowEmpty) {\n                        throw new FS.ErrnoError(44);\n                    }\n                    return dir;\n                }\n                return PATH.join2(dir, path);\n            },\n            doStat: function (func, path, buf) {\n                try {\n                    var stat = func(path);\n                } catch (e) {\n                    if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n                        return -54;\n                    }\n                    throw e;\n                }\n                HEAP32[buf >> 2] = stat.dev;\n                HEAP32[(buf + 4) >> 2] = 0;\n                HEAP32[(buf + 8) >> 2] = stat.ino;\n                HEAP32[(buf + 12) >> 2] = stat.mode;\n                HEAP32[(buf + 16) >> 2] = stat.nlink;\n                HEAP32[(buf + 20) >> 2] = stat.uid;\n                HEAP32[(buf + 24) >> 2] = stat.gid;\n                HEAP32[(buf + 28) >> 2] = stat.rdev;\n                HEAP32[(buf + 32) >> 2] = 0;\n                (tempI64 = [\n                    stat.size >>> 0,\n                    ((tempDouble = stat.size),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n                    (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n                HEAP32[(buf + 48) >> 2] = 4096;\n                HEAP32[(buf + 52) >> 2] = stat.blocks;\n                HEAP32[(buf + 56) >> 2] = (stat.atime.getTime() / 1e3) | 0;\n                HEAP32[(buf + 60) >> 2] = 0;\n                HEAP32[(buf + 64) >> 2] = (stat.mtime.getTime() / 1e3) | 0;\n                HEAP32[(buf + 68) >> 2] = 0;\n                HEAP32[(buf + 72) >> 2] = (stat.ctime.getTime() / 1e3) | 0;\n                HEAP32[(buf + 76) >> 2] = 0;\n                (tempI64 = [\n                    stat.ino >>> 0,\n                    ((tempDouble = stat.ino),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[(buf + 80) >> 2] = tempI64[0]),\n                    (HEAP32[(buf + 84) >> 2] = tempI64[1]);\n                return 0;\n            },\n            doMsync: function (addr, stream, len, flags, offset) {\n                var buffer = HEAPU8.slice(addr, addr + len);\n                FS.msync(stream, buffer, offset, len, flags);\n            },\n            varargs: undefined,\n            get: function () {\n                SYSCALLS.varargs += 4;\n                var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n                return ret;\n            },\n            getStr: function (ptr) {\n                var ret = UTF8ToString(ptr);\n                return ret;\n            },\n            getStreamFromFD: function (fd) {\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                return stream;\n            },\n        };\n        function setErrNo(value) {\n            HEAP32[___errno_location() >> 2] = value;\n            return value;\n        }\n        function ___syscall_fcntl64(fd, cmd, varargs) {\n            SYSCALLS.varargs = varargs;\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                switch (cmd) {\n                    case 0: {\n                        var arg = SYSCALLS.get();\n                        if (arg < 0) {\n                            return -28;\n                        }\n                        var newStream;\n                        newStream = FS.createStream(stream, arg);\n                        return newStream.fd;\n                    }\n                    case 1:\n                    case 2:\n                        return 0;\n                    case 3:\n                        return stream.flags;\n                    case 4: {\n                        var arg = SYSCALLS.get();\n                        stream.flags |= arg;\n                        return 0;\n                    }\n                    case 5: {\n                        var arg = SYSCALLS.get();\n                        var offset = 0;\n                        HEAP16[(arg + offset) >> 1] = 2;\n                        return 0;\n                    }\n                    case 6:\n                    case 7:\n                        return 0;\n                    case 16:\n                    case 8:\n                        return -28;\n                    case 9:\n                        setErrNo(28);\n                        return -1;\n                    default: {\n                        return -28;\n                    }\n                }\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_ioctl(fd, op, varargs) {\n            SYSCALLS.varargs = varargs;\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                switch (op) {\n                    case 21509:\n                    case 21505: {\n                        if (!stream.tty) return -59;\n                        return 0;\n                    }\n                    case 21510:\n                    case 21511:\n                    case 21512:\n                    case 21506:\n                    case 21507:\n                    case 21508: {\n                        if (!stream.tty) return -59;\n                        return 0;\n                    }\n                    case 21519: {\n                        if (!stream.tty) return -59;\n                        var argp = SYSCALLS.get();\n                        HEAP32[argp >> 2] = 0;\n                        return 0;\n                    }\n                    case 21520: {\n                        if (!stream.tty) return -59;\n                        return -28;\n                    }\n                    case 21531: {\n                        var argp = SYSCALLS.get();\n                        return FS.ioctl(stream, op, argp);\n                    }\n                    case 21523: {\n                        if (!stream.tty) return -59;\n                        return 0;\n                    }\n                    case 21524: {\n                        if (!stream.tty) return -59;\n                        return 0;\n                    }\n                    default:\n                        abort('bad ioctl syscall ' + op);\n                }\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_openat(dirfd, path, flags, varargs) {\n            SYSCALLS.varargs = varargs;\n            try {\n                path = SYSCALLS.getStr(path);\n                path = SYSCALLS.calculateAt(dirfd, path);\n                var mode = varargs ? SYSCALLS.get() : 0;\n                return FS.open(path, flags, mode).fd;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        var PIPEFS = {\n            BUCKET_BUFFER_SIZE: 8192,\n            mount: function (mount) {\n                return FS.createNode(null, '/', 16384 | 511, 0);\n            },\n            createPipe: function () {\n                var pipe = { buckets: [], refcnt: 2 };\n                pipe.buckets.push({ buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE), offset: 0, roffset: 0 });\n                var rName = PIPEFS.nextname();\n                var wName = PIPEFS.nextname();\n                var rNode = FS.createNode(PIPEFS.root, rName, 4096, 0);\n                var wNode = FS.createNode(PIPEFS.root, wName, 4096, 0);\n                rNode.pipe = pipe;\n                wNode.pipe = pipe;\n                var readableStream = FS.createStream({\n                    path: rName,\n                    node: rNode,\n                    flags: 0,\n                    seekable: false,\n                    stream_ops: PIPEFS.stream_ops,\n                });\n                rNode.stream = readableStream;\n                var writableStream = FS.createStream({\n                    path: wName,\n                    node: wNode,\n                    flags: 1,\n                    seekable: false,\n                    stream_ops: PIPEFS.stream_ops,\n                });\n                wNode.stream = writableStream;\n                return { readable_fd: readableStream.fd, writable_fd: writableStream.fd };\n            },\n            stream_ops: {\n                poll: function (stream) {\n                    var pipe = stream.node.pipe;\n                    if ((stream.flags & 2097155) === 1) {\n                        return 256 | 4;\n                    } else {\n                        if (pipe.buckets.length > 0) {\n                            for (var i = 0; i < pipe.buckets.length; i++) {\n                                var bucket = pipe.buckets[i];\n                                if (bucket.offset - bucket.roffset > 0) {\n                                    return 64 | 1;\n                                }\n                            }\n                        }\n                    }\n                    return 0;\n                },\n                ioctl: function (stream, request, varargs) {\n                    return 28;\n                },\n                fsync: function (stream) {\n                    return 28;\n                },\n                read: function (stream, buffer, offset, length, position) {\n                    var pipe = stream.node.pipe;\n                    var currentLength = 0;\n                    for (var i = 0; i < pipe.buckets.length; i++) {\n                        var bucket = pipe.buckets[i];\n                        currentLength += bucket.offset - bucket.roffset;\n                    }\n                    assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\n                    var data = buffer.subarray(offset, offset + length);\n                    if (length <= 0) {\n                        return 0;\n                    }\n                    if (currentLength == 0) {\n                        throw new FS.ErrnoError(6);\n                    }\n                    var toRead = Math.min(currentLength, length);\n                    var totalRead = toRead;\n                    var toRemove = 0;\n                    for (var i = 0; i < pipe.buckets.length; i++) {\n                        var currBucket = pipe.buckets[i];\n                        var bucketSize = currBucket.offset - currBucket.roffset;\n                        if (toRead <= bucketSize) {\n                            var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\n                            if (toRead < bucketSize) {\n                                tmpSlice = tmpSlice.subarray(0, toRead);\n                                currBucket.roffset += toRead;\n                            } else {\n                                toRemove++;\n                            }\n                            data.set(tmpSlice);\n                            break;\n                        } else {\n                            var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\n                            data.set(tmpSlice);\n                            data = data.subarray(tmpSlice.byteLength);\n                            toRead -= tmpSlice.byteLength;\n                            toRemove++;\n                        }\n                    }\n                    if (toRemove && toRemove == pipe.buckets.length) {\n                        toRemove--;\n                        pipe.buckets[toRemove].offset = 0;\n                        pipe.buckets[toRemove].roffset = 0;\n                    }\n                    pipe.buckets.splice(0, toRemove);\n                    return totalRead;\n                },\n                write: function (stream, buffer, offset, length, position) {\n                    var pipe = stream.node.pipe;\n                    assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\n                    var data = buffer.subarray(offset, offset + length);\n                    var dataLen = data.byteLength;\n                    if (dataLen <= 0) {\n                        return 0;\n                    }\n                    var currBucket = null;\n                    if (pipe.buckets.length == 0) {\n                        currBucket = { buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE), offset: 0, roffset: 0 };\n                        pipe.buckets.push(currBucket);\n                    } else {\n                        currBucket = pipe.buckets[pipe.buckets.length - 1];\n                    }\n                    assert(currBucket.offset <= PIPEFS.BUCKET_BUFFER_SIZE);\n                    var freeBytesInCurrBuffer = PIPEFS.BUCKET_BUFFER_SIZE - currBucket.offset;\n                    if (freeBytesInCurrBuffer >= dataLen) {\n                        currBucket.buffer.set(data, currBucket.offset);\n                        currBucket.offset += dataLen;\n                        return dataLen;\n                    } else if (freeBytesInCurrBuffer > 0) {\n                        currBucket.buffer.set(data.subarray(0, freeBytesInCurrBuffer), currBucket.offset);\n                        currBucket.offset += freeBytesInCurrBuffer;\n                        data = data.subarray(freeBytesInCurrBuffer, data.byteLength);\n                    }\n                    var numBuckets = (data.byteLength / PIPEFS.BUCKET_BUFFER_SIZE) | 0;\n                    var remElements = data.byteLength % PIPEFS.BUCKET_BUFFER_SIZE;\n                    for (var i = 0; i < numBuckets; i++) {\n                        var newBucket = {\n                            buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n                            offset: PIPEFS.BUCKET_BUFFER_SIZE,\n                            roffset: 0,\n                        };\n                        pipe.buckets.push(newBucket);\n                        newBucket.buffer.set(data.subarray(0, PIPEFS.BUCKET_BUFFER_SIZE));\n                        data = data.subarray(PIPEFS.BUCKET_BUFFER_SIZE, data.byteLength);\n                    }\n                    if (remElements > 0) {\n                        var newBucket = {\n                            buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n                            offset: data.byteLength,\n                            roffset: 0,\n                        };\n                        pipe.buckets.push(newBucket);\n                        newBucket.buffer.set(data);\n                    }\n                    return dataLen;\n                },\n                close: function (stream) {\n                    var pipe = stream.node.pipe;\n                    pipe.refcnt--;\n                    if (pipe.refcnt === 0) {\n                        pipe.buckets = null;\n                    }\n                },\n            },\n            nextname: function () {\n                if (!PIPEFS.nextname.current) {\n                    PIPEFS.nextname.current = 0;\n                }\n                return 'pipe[' + PIPEFS.nextname.current++ + ']';\n            },\n        };\n        function ___syscall_pipe(fdPtr) {\n            try {\n                if (fdPtr == 0) {\n                    throw new FS.ErrnoError(21);\n                }\n                var res = PIPEFS.createPipe();\n                HEAP32[fdPtr >> 2] = res.readable_fd;\n                HEAP32[(fdPtr + 4) >> 2] = res.writable_fd;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_rmdir(path) {\n            try {\n                path = SYSCALLS.getStr(path);\n                FS.rmdir(path);\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_stat64(path, buf) {\n            try {\n                path = SYSCALLS.getStr(path);\n                return SYSCALLS.doStat(FS.stat, path, buf);\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function ___syscall_unlinkat(dirfd, path, flags) {\n            try {\n                path = SYSCALLS.getStr(path);\n                path = SYSCALLS.calculateAt(dirfd, path);\n                if (flags === 0) {\n                    FS.unlink(path);\n                } else if (flags === 512) {\n                    FS.rmdir(path);\n                } else {\n                    abort('Invalid flags passed to unlinkat');\n                }\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return -e.errno;\n            }\n        }\n        function __emscripten_date_now() {\n            return Date.now();\n        }\n        var nowIsMonotonic = true;\n        function __emscripten_get_now_is_monotonic() {\n            return nowIsMonotonic;\n        }\n        function _abort() {\n            abort('');\n        }\n        var _emscripten_get_now;\n        _emscripten_get_now = () => performance.now();\n        function _emscripten_memcpy_big(dest, src, num) {\n            HEAPU8.copyWithin(dest, src, src + num);\n        }\n        function abortOnCannotGrowMemory(requestedSize) {\n            abort('OOM');\n        }\n        function _emscripten_resize_heap(requestedSize) {\n            var oldSize = HEAPU8.length;\n            requestedSize = requestedSize >>> 0;\n            abortOnCannotGrowMemory(requestedSize);\n        }\n        var ENV = {};\n        function getExecutableName() {\n            return thisProgram || './this.program';\n        }\n        function getEnvStrings() {\n            if (!getEnvStrings.strings) {\n                var lang =\n                    ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace(\n                        '-',\n                        '_',\n                    ) + '.UTF-8';\n                var env = {\n                    USER: 'web_user',\n                    LOGNAME: 'web_user',\n                    PATH: '/',\n                    PWD: '/',\n                    HOME: '/home/web_user',\n                    LANG: lang,\n                    _: getExecutableName(),\n                };\n                for (var x in ENV) {\n                    if (ENV[x] === undefined) delete env[x];\n                    else env[x] = ENV[x];\n                }\n                var strings = [];\n                for (var x in env) {\n                    strings.push(x + '=' + env[x]);\n                }\n                getEnvStrings.strings = strings;\n            }\n            return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n            var bufSize = 0;\n            getEnvStrings().forEach(function (string, i) {\n                var ptr = environ_buf + bufSize;\n                HEAPU32[(__environ + i * 4) >> 2] = ptr;\n                writeAsciiToMemory(string, ptr);\n                bufSize += string.length + 1;\n            });\n            return 0;\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n            var strings = getEnvStrings();\n            HEAPU32[penviron_count >> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function (string) {\n                bufSize += string.length + 1;\n            });\n            HEAPU32[penviron_buf_size >> 2] = bufSize;\n            return 0;\n        }\n        function _exit(status) {\n            exit(status);\n        }\n        function _fd_close(fd) {\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                FS.close(stream);\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function _fd_fdstat_get(fd, pbuf) {\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var type = stream.tty ? 2 : FS.isDir(stream.mode) ? 3 : FS.isLink(stream.mode) ? 7 : 4;\n                HEAP8[pbuf >> 0] = type;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function doReadv(stream, iov, iovcnt, offset) {\n            var ret = 0;\n            for (var i = 0; i < iovcnt; i++) {\n                var ptr = HEAPU32[iov >> 2];\n                var len = HEAPU32[(iov + 4) >> 2];\n                iov += 8;\n                var curr = FS.read(stream, HEAP8, ptr, len, offset);\n                if (curr < 0) return -1;\n                ret += curr;\n                if (curr < len) break;\n            }\n            return ret;\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = doReadv(stream, iov, iovcnt);\n                HEAP32[pnum >> 2] = num;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function convertI32PairToI53Checked(lo, hi) {\n            return (hi + 2097152) >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n            try {\n                var offset = convertI32PairToI53Checked(offset_low, offset_high);\n                if (isNaN(offset)) return 61;\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                FS.llseek(stream, offset, whence);\n                (tempI64 = [\n                    stream.position >>> 0,\n                    ((tempDouble = stream.position),\n                    +Math.abs(tempDouble) >= 1\n                        ? tempDouble > 0\n                            ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0\n                            : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0\n                        : 0),\n                ]),\n                    (HEAP32[newOffset >> 2] = tempI64[0]),\n                    (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n                if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function doWritev(stream, iov, iovcnt, offset) {\n            var ret = 0;\n            for (var i = 0; i < iovcnt; i++) {\n                var ptr = HEAPU32[iov >> 2];\n                var len = HEAPU32[(iov + 4) >> 2];\n                iov += 8;\n                var curr = FS.write(stream, HEAP8, ptr, len, offset);\n                if (curr < 0) return -1;\n                ret += curr;\n            }\n            return ret;\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = doWritev(stream, iov, iovcnt);\n                HEAPU32[pnum >> 2] = num;\n                return 0;\n            } catch (e) {\n                if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n                return e.errno;\n            }\n        }\n        function _proc_exit(code) {\n            procExit(code);\n        }\n        function __isLeapYear(year) {\n            return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n            var sum = 0;\n            for (var i = 0; i <= index; sum += array[i++]) {}\n            return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n            var newDate = new Date(date.getTime());\n            while (days > 0) {\n                var leap = __isLeapYear(newDate.getFullYear());\n                var currentMonth = newDate.getMonth();\n                var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n                if (days > daysInCurrentMonth - newDate.getDate()) {\n                    days -= daysInCurrentMonth - newDate.getDate() + 1;\n                    newDate.setDate(1);\n                    if (currentMonth < 11) {\n                        newDate.setMonth(currentMonth + 1);\n                    } else {\n                        newDate.setMonth(0);\n                        newDate.setFullYear(newDate.getFullYear() + 1);\n                    }\n                } else {\n                    newDate.setDate(newDate.getDate() + days);\n                    return newDate;\n                }\n            }\n            return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n            var tm_zone = HEAP32[(tm + 40) >> 2];\n            var date = {\n                tm_sec: HEAP32[tm >> 2],\n                tm_min: HEAP32[(tm + 4) >> 2],\n                tm_hour: HEAP32[(tm + 8) >> 2],\n                tm_mday: HEAP32[(tm + 12) >> 2],\n                tm_mon: HEAP32[(tm + 16) >> 2],\n                tm_year: HEAP32[(tm + 20) >> 2],\n                tm_wday: HEAP32[(tm + 24) >> 2],\n                tm_yday: HEAP32[(tm + 28) >> 2],\n                tm_isdst: HEAP32[(tm + 32) >> 2],\n                tm_gmtoff: HEAP32[(tm + 36) >> 2],\n                tm_zone: tm_zone ? UTF8ToString(tm_zone) : '',\n            };\n            var pattern = UTF8ToString(format);\n            var EXPANSION_RULES_1 = {\n                '%c': '%a %b %d %H:%M:%S %Y',\n                '%D': '%m/%d/%y',\n                '%F': '%Y-%m-%d',\n                '%h': '%b',\n                '%r': '%I:%M:%S %p',\n                '%R': '%H:%M',\n                '%T': '%H:%M:%S',\n                '%x': '%m/%d/%y',\n                '%X': '%H:%M:%S',\n                '%Ec': '%c',\n                '%EC': '%C',\n                '%Ex': '%m/%d/%y',\n                '%EX': '%H:%M:%S',\n                '%Ey': '%y',\n                '%EY': '%Y',\n                '%Od': '%d',\n                '%Oe': '%e',\n                '%OH': '%H',\n                '%OI': '%I',\n                '%Om': '%m',\n                '%OM': '%M',\n                '%OS': '%S',\n                '%Ou': '%u',\n                '%OU': '%U',\n                '%OV': '%V',\n                '%Ow': '%w',\n                '%OW': '%W',\n                '%Oy': '%y',\n            };\n            for (var rule in EXPANSION_RULES_1) {\n                pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\n            }\n            var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n            var MONTHS = [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December',\n            ];\n            function leadingSomething(value, digits, character) {\n                var str = typeof value == 'number' ? value.toString() : value || '';\n                while (str.length < digits) {\n                    str = character[0] + str;\n                }\n                return str;\n            }\n            function leadingNulls(value, digits) {\n                return leadingSomething(value, digits, '0');\n            }\n            function compareByDay(date1, date2) {\n                function sgn(value) {\n                    return value < 0 ? -1 : value > 0 ? 1 : 0;\n                }\n                var compare;\n                if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n                    if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                        compare = sgn(date1.getDate() - date2.getDate());\n                    }\n                }\n                return compare;\n            }\n            function getFirstWeekStartDate(janFourth) {\n                switch (janFourth.getDay()) {\n                    case 0:\n                        return new Date(janFourth.getFullYear() - 1, 11, 29);\n                    case 1:\n                        return janFourth;\n                    case 2:\n                        return new Date(janFourth.getFullYear(), 0, 3);\n                    case 3:\n                        return new Date(janFourth.getFullYear(), 0, 2);\n                    case 4:\n                        return new Date(janFourth.getFullYear(), 0, 1);\n                    case 5:\n                        return new Date(janFourth.getFullYear() - 1, 11, 31);\n                    case 6:\n                        return new Date(janFourth.getFullYear() - 1, 11, 30);\n                }\n            }\n            function getWeekBasedYear(date) {\n                var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n                var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n                var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n                var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n                    if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                        return thisDate.getFullYear() + 1;\n                    } else {\n                        return thisDate.getFullYear();\n                    }\n                } else {\n                    return thisDate.getFullYear() - 1;\n                }\n            }\n            var EXPANSION_RULES_2 = {\n                '%a': function (date) {\n                    return WEEKDAYS[date.tm_wday].substring(0, 3);\n                },\n                '%A': function (date) {\n                    return WEEKDAYS[date.tm_wday];\n                },\n                '%b': function (date) {\n                    return MONTHS[date.tm_mon].substring(0, 3);\n                },\n                '%B': function (date) {\n                    return MONTHS[date.tm_mon];\n                },\n                '%C': function (date) {\n                    var year = date.tm_year + 1900;\n                    return leadingNulls((year / 100) | 0, 2);\n                },\n                '%d': function (date) {\n                    return leadingNulls(date.tm_mday, 2);\n                },\n                '%e': function (date) {\n                    return leadingSomething(date.tm_mday, 2, ' ');\n                },\n                '%g': function (date) {\n                    return getWeekBasedYear(date).toString().substring(2);\n                },\n                '%G': function (date) {\n                    return getWeekBasedYear(date);\n                },\n                '%H': function (date) {\n                    return leadingNulls(date.tm_hour, 2);\n                },\n                '%I': function (date) {\n                    var twelveHour = date.tm_hour;\n                    if (twelveHour == 0) twelveHour = 12;\n                    else if (twelveHour > 12) twelveHour -= 12;\n                    return leadingNulls(twelveHour, 2);\n                },\n                '%j': function (date) {\n                    return leadingNulls(\n                        date.tm_mday +\n                            __arraySum(\n                                __isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR,\n                                date.tm_mon - 1,\n                            ),\n                        3,\n                    );\n                },\n                '%m': function (date) {\n                    return leadingNulls(date.tm_mon + 1, 2);\n                },\n                '%M': function (date) {\n                    return leadingNulls(date.tm_min, 2);\n                },\n                '%n': function () {\n                    return '\\n';\n                },\n                '%p': function (date) {\n                    if (date.tm_hour >= 0 && date.tm_hour < 12) {\n                        return 'AM';\n                    } else {\n                        return 'PM';\n                    }\n                },\n                '%S': function (date) {\n                    return leadingNulls(date.tm_sec, 2);\n                },\n                '%t': function () {\n                    return '\\t';\n                },\n                '%u': function (date) {\n                    return date.tm_wday || 7;\n                },\n                '%U': function (date) {\n                    var days = date.tm_yday + 7 - date.tm_wday;\n                    return leadingNulls(Math.floor(days / 7), 2);\n                },\n                '%V': function (date) {\n                    var val = Math.floor((date.tm_yday + 7 - ((date.tm_wday + 6) % 7)) / 7);\n                    if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n                        val++;\n                    }\n                    if (!val) {\n                        val = 52;\n                        var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n                        if (dec31 == 4 || (dec31 == 5 && __isLeapYear((date.tm_year % 400) - 1))) {\n                            val++;\n                        }\n                    } else if (val == 53) {\n                        var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n                        if (jan1 != 4 && (jan1 != 3 || !__isLeapYear(date.tm_year))) val = 1;\n                    }\n                    return leadingNulls(val, 2);\n                },\n                '%w': function (date) {\n                    return date.tm_wday;\n                },\n                '%W': function (date) {\n                    var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n                    return leadingNulls(Math.floor(days / 7), 2);\n                },\n                '%y': function (date) {\n                    return (date.tm_year + 1900).toString().substring(2);\n                },\n                '%Y': function (date) {\n                    return date.tm_year + 1900;\n                },\n                '%z': function (date) {\n                    var off = date.tm_gmtoff;\n                    var ahead = off >= 0;\n                    off = Math.abs(off) / 60;\n                    off = (off / 60) * 100 + (off % 60);\n                    return (ahead ? '+' : '-') + String('0000' + off).slice(-4);\n                },\n                '%Z': function (date) {\n                    return date.tm_zone;\n                },\n                '%%': function () {\n                    return '%';\n                },\n            };\n            pattern = pattern.replace(/%%/g, '\\0\\0');\n            for (var rule in EXPANSION_RULES_2) {\n                if (pattern.includes(rule)) {\n                    pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\n                }\n            }\n            pattern = pattern.replace(/\\0\\0/g, '%');\n            var bytes = intArrayFromString(pattern, false);\n            if (bytes.length > maxsize) {\n                return 0;\n            }\n            writeArrayToMemory(bytes, s);\n            return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n            return _strftime(s, maxsize, format, tm);\n        }\n        var FSNode = function (parent, name, mode, rdev) {\n            if (!parent) {\n                parent = this;\n            }\n            this.parent = parent;\n            this.mount = parent.mount;\n            this.mounted = null;\n            this.id = FS.nextInode++;\n            this.name = name;\n            this.mode = mode;\n            this.node_ops = {};\n            this.stream_ops = {};\n            this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, {\n            read: {\n                get: function () {\n                    return (this.mode & readMode) === readMode;\n                },\n                set: function (val) {\n                    val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n                },\n            },\n            write: {\n                get: function () {\n                    return (this.mode & writeMode) === writeMode;\n                },\n                set: function (val) {\n                    val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n                },\n            },\n            isFolder: {\n                get: function () {\n                    return FS.isDir(this.mode);\n                },\n            },\n            isDevice: {\n                get: function () {\n                    return FS.isChrdev(this.mode);\n                },\n            },\n        });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        function intArrayFromString(stringy, dontAddNull, length) {\n            var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n            var u8array = new Array(len);\n            var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n            if (dontAddNull) u8array.length = numBytesWritten;\n            return u8array;\n        }\n        var asmLibraryArg = {\n            s: ___call_sighandler,\n            a: ___cxa_allocate_exception,\n            b: ___cxa_throw,\n            h: ___syscall_fcntl64,\n            y: ___syscall_ioctl,\n            z: ___syscall_openat,\n            t: ___syscall_pipe,\n            q: ___syscall_rmdir,\n            p: ___syscall_stat64,\n            r: ___syscall_unlinkat,\n            e: __emscripten_date_now,\n            j: __emscripten_get_now_is_monotonic,\n            c: _abort,\n            i: _emscripten_get_now,\n            k: _emscripten_memcpy_big,\n            o: _emscripten_resize_heap,\n            v: _environ_get,\n            w: _environ_sizes_get,\n            d: _exit,\n            g: _fd_close,\n            u: _fd_fdstat_get,\n            x: _fd_read,\n            m: _fd_seek,\n            f: _fd_write,\n            l: _proc_exit,\n            n: _strftime_l,\n        };\n        var asm = createWasm();\n        var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n            return (___wasm_call_ctors = Module['___wasm_call_ctors'] = Module['asm']['B']).apply(null, arguments);\n        });\n        var _main = (Module['_main'] = function () {\n            return (_main = Module['_main'] = Module['asm']['D']).apply(null, arguments);\n        });\n        var ___errno_location = (Module['___errno_location'] = function () {\n            return (___errno_location = Module['___errno_location'] = Module['asm']['E']).apply(null, arguments);\n        });\n        var _malloc = (Module['_malloc'] = function () {\n            return (_malloc = Module['_malloc'] = Module['asm']['F']).apply(null, arguments);\n        });\n        var stackSave = (Module['stackSave'] = function () {\n            return (stackSave = Module['stackSave'] = Module['asm']['G']).apply(null, arguments);\n        });\n        var stackRestore = (Module['stackRestore'] = function () {\n            return (stackRestore = Module['stackRestore'] = Module['asm']['H']).apply(null, arguments);\n        });\n        var stackAlloc = (Module['stackAlloc'] = function () {\n            return (stackAlloc = Module['stackAlloc'] = Module['asm']['I']).apply(null, arguments);\n        });\n        var ___cxa_is_pointer_type = (Module['___cxa_is_pointer_type'] = function () {\n            return (___cxa_is_pointer_type = Module['___cxa_is_pointer_type'] = Module['asm']['J']).apply(\n                null,\n                arguments,\n            );\n        });\n        Module['ccall'] = ccall;\n        Module['cwrap'] = cwrap;\n        var calledRun;\n        function ExitStatus(status) {\n            this.name = 'ExitStatus';\n            this.message = 'Program terminated with exit(' + status + ')';\n            this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n            if (!calledRun) run();\n            if (!calledRun) dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n            var entryFunction = Module['_main'];\n            args = args || [];\n            args.unshift(thisProgram);\n            var argc = args.length;\n            var argv = stackAlloc((argc + 1) * 4);\n            var argv_ptr = argv >> 2;\n            args.forEach((arg) => {\n                HEAP32[argv_ptr++] = allocateUTF8OnStack(arg);\n            });\n            HEAP32[argv_ptr] = 0;\n            try {\n                var ret = entryFunction(argc, argv);\n                exit(ret, true);\n                return ret;\n            } catch (e) {\n                return handleException(e);\n            } finally {\n                calledMain = true;\n            }\n        }\n        // Function responsable for running the cvc5 web assembly code with the\n        //  arguments passed to the Module.\n        function run(args) {\n            // Get the arguments passed to the Module (an array of strings)\n            args = args || arguments_;\n            if (runDependencies > 0) {\n                return;\n            }\n            preRun();\n            if (runDependencies > 0) {\n                return;\n            }\n            function doRun() {\n                if (calledRun) return;\n                calledRun = true;\n                Module['calledRun'] = true;\n                if (ABORT) return;\n                initRuntime();\n                preMain();\n                readyPromiseResolve(Module);\n                // Call the execution of the main function\n                if (shouldRunNow) callMain(args);\n                // Call the post run function when no error happen\n                postRun();\n            }\n            {\n                doRun();\n            }\n        }\n        Module['run'] = run;\n        function exit(status, implicit) {\n            EXITSTATUS = status;\n            procExit(status);\n        }\n        function procExit(code) {\n            EXITSTATUS = code;\n            if (!keepRuntimeAlive()) {\n                ABORT = true;\n            }\n            quit_(code, new ExitStatus(code));\n        }\n        var shouldRunNow = true;\n        run();\n\n        return Module.ready;\n    };\n})();\nif (typeof exports === 'object' && typeof module === 'object') module.exports = Module;\nelse if (typeof define === 'function' && define['amd'])\n    define([], function () {\n        return Module;\n    });\nelse if (typeof exports === 'object') exports['Module'] = Module;\n","export enum drawerHelpersKind {\r\n    RULE,\r\n    ARGS,\r\n    CONC,\r\n    ALL,\r\n}\r\n\r\nexport enum renderLetKind {\r\n    EXPAND,\r\n    REVERT,\r\n}\r\n\r\nexport enum ClusterKind {\r\n    NONE,\r\n    SAT,\r\n    CNF,\r\n    TL,\r\n    PP,\r\n    IN,\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport { FileState } from '../../../interfaces/interfaces';\r\n\r\nconst initialState: FileState = {\r\n    name: 'ex.smt2',\r\n    value: 'digraph proof {\\n\\trankdir=\"BT\";\\n\\tnode [shape=record];\\n\\t0 [label=\"{SCOPE((not a), a)|(not (and (not a) a))}\", class = \" basic \", comment = \"{\\'subProofQty\\':1}\" ];\\n\\t1 [label=\"{CHAIN_RESOLUTION(true, a)|false}\", class = \" propositional \", comment = \"{\\'subProofQty\\':2}\" ];\\n\\t2 [label=\"{ASSUME(a)|a}\", comment = \"{\\'subProofQty\\':0}\"];\\n\\t3 [label=\"{ASSUME((not a))|(not a)}\", comment = \"{\\'subProofQty\\':0}\"];\\n\\t1->0;\\n\\t2->1;\\n\\t3->1;\\n}',\r\n    filesCount: 0,\r\n};\r\n\r\nexport const fileSlice = createSlice({\r\n    name: 'file',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        set: (state, action: PayloadAction<{ name: string; value: string }>) => {\r\n            state.name = action.payload.name;\r\n            if (state.value !== action.payload.value) {\r\n                state.value = action.payload.value;\r\n                state.filesCount++;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const { set } = fileSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectFileName = (state: RootState): string => state.file.name;\r\n\r\nexport const selectFileExtension = (state: RootState): string => {\r\n    const ext = state.file.name.split('.').pop();\r\n    return ext ? ext : '';\r\n};\r\n\r\nexport const selectDot = (state: RootState): string =>\r\n    state.file.name.split('.').pop() === 'json' ? JSON.parse(state.file.value).dot : state.file.value;\r\n\r\nexport const selectFile = (state: RootState): string => state.file.value;\r\n\r\nexport const selectFileCount = (state: RootState): number => state.file.filesCount;\r\n\r\nexport default fileSlice.reducer;\r\n","import { ClusterKind } from '../../../interfaces/enum';\r\nimport { NodeInterface, ProofState } from '../../../interfaces/interfaces';\r\n\r\ninterface ClusterColorMap {\r\n    [type: number]: string;\r\n}\r\n\r\nfunction removeEscapedCharacters(s: string): string {\r\n    let newS = '';\r\n    for (let i = 0; i < s.length; i += 1) {\r\n        if (\r\n            !(\r\n                s[i] === '\\\\' &&\r\n                (s[i + 1] === '\"' ||\r\n                    s[i + 1] === '>' ||\r\n                    s[i + 1] === '<' ||\r\n                    s[i + 1] === '{' ||\r\n                    s[i + 1] === '}' ||\r\n                    s[i + 1] === '|')\r\n            )\r\n        ) {\r\n            newS += s[i];\r\n        }\r\n    }\r\n\r\n    return newS;\r\n}\r\n\r\nexport function processDot(dot: string): [NodeInterface[], ProofState['letMap'], ClusterColorMap] {\r\n    const nodes: NodeInterface[] = [\r\n        {\r\n            id: 0,\r\n            conclusion: '',\r\n            rule: '',\r\n            args: '',\r\n            children: [],\r\n            parents: [NaN],\r\n            descendants: 0,\r\n            dependencies: [],\r\n            clusterType: ClusterKind.NONE,\r\n        },\r\n    ];\r\n    let comment: string | null = dot.slice(dot.indexOf('comment='));\r\n    comment = comment\r\n        ? removeEscapedCharacters(\r\n              removeEscapedCharacters(comment.slice(comment.indexOf('=') + 2, comment.indexOf(';') - 1)),\r\n          )\r\n        : null;\r\n\r\n    const clustersInfos: ClusterColorMap = {};\r\n    const lines = dot\r\n        .slice(dot.indexOf('{') + 1, dot.lastIndexOf('}') - 2)\r\n        .replace(/(\\n|\\t)/gm, '')\r\n        .split(';');\r\n    lines.forEach((line) => {\r\n        if (line.search('subgraph') !== -1) {\r\n            // Get the label of this node subgraph\r\n            let label = '';\r\n            let idx = line.indexOf('label=\"') + 7;\r\n            while (line[idx] !== '\"') {\r\n                label += line[idx];\r\n                idx++;\r\n            }\r\n\r\n            // Get the label of this node subgraph\r\n            let color = '';\r\n            idx = line.indexOf('bgcolor=\"') + 9;\r\n            while (line[idx] !== '\"') {\r\n                color += line[idx];\r\n                idx++;\r\n            }\r\n\r\n            // Get the nodes ID's\r\n            const numbers = line\r\n                .substring(idx + 1, line.length - 1)\r\n                .split(/\\s/)\r\n                .filter((str) => str.length)\r\n                .map((num) => Number(num));\r\n\r\n            let thisType: ClusterKind;\r\n            switch (label) {\r\n                case 'SAT':\r\n                    thisType = ClusterKind.SAT;\r\n                    break;\r\n                case 'CNF':\r\n                    thisType = ClusterKind.CNF;\r\n                    break;\r\n                case 'TL':\r\n                    thisType = ClusterKind.TL;\r\n                    break;\r\n                case 'PP':\r\n                    thisType = ClusterKind.PP;\r\n                    break;\r\n                case 'IN':\r\n                    thisType = ClusterKind.IN;\r\n                    break;\r\n                default:\r\n                    thisType = ClusterKind.NONE;\r\n            }\r\n\r\n            // Assign the type for each node\r\n            numbers.forEach((num) => {\r\n                nodes[num].clusterType = thisType;\r\n            });\r\n            clustersInfos[thisType] = color;\r\n        } else if (line.search('label') !== -1) {\r\n            const id = parseInt(line.slice(0, line.indexOf('[')).trim());\r\n            const attributes = line.slice(line.indexOf('[') + 1, line.lastIndexOf(']')).trim();\r\n\r\n            let label = attributes.slice(attributes.search(/[^\\\\]\"/) + 3);\r\n            label = label.slice(0, label.search(/[^\\\\]\"/));\r\n            let [conclusion, rule, args] = ['', '', ''];\r\n            [conclusion, rule] = label.split(/\\|/);\r\n            [rule, args] = rule.indexOf(' :args ') != -1 ? rule.split(' :args ') : [rule, ''];\r\n\r\n            const comment: string = removeEscapedCharacters(line.slice(line.indexOf('comment'), line.lastIndexOf('\"')));\r\n            const commentJSON = JSON.parse(comment.slice(comment.indexOf('\"') + 1).replace(/'/g, '\"'));\r\n\r\n            if (!nodes[id]) {\r\n                nodes[id] = {\r\n                    id: id,\r\n                    conclusion: '',\r\n                    rule: '',\r\n                    args: '',\r\n                    children: [],\r\n                    parents: [NaN],\r\n                    descendants: 0,\r\n                    dependencies: [],\r\n                    clusterType: ClusterKind.NONE,\r\n                };\r\n            }\r\n            nodes[id].conclusion = removeEscapedCharacters(conclusion);\r\n            nodes[id].rule = removeEscapedCharacters(rule);\r\n            nodes[id].args = removeEscapedCharacters(args);\r\n            nodes[id].descendants = commentJSON.subProofQty;\r\n        } else if (line.search('->') !== -1) {\r\n            const [child, parent] = line.split('->').map((x) => parseInt(x.trim()));\r\n            nodes[parent].children.push(child);\r\n            // If there isn't a child node\r\n            if (!nodes[child]) {\r\n                nodes[child] = {\r\n                    id: child,\r\n                    conclusion: '',\r\n                    rule: '',\r\n                    args: '',\r\n                    children: [],\r\n                    parents: [],\r\n                    descendants: 0,\r\n                    dependencies: [],\r\n                    clusterType: ClusterKind.NONE,\r\n                };\r\n            }\r\n            // If there is and is an invalid parent\r\n            else if (isNaN(nodes[child].parents[0])) {\r\n                nodes[child].parents = [];\r\n            }\r\n            nodes[child].parents.push(parent);\r\n        }\r\n    });\r\n\r\n    return comment ? [nodes, JSON.parse(comment)['letMap'], clustersInfos] : [nodes, {}, clustersInfos];\r\n}\r\n\r\nexport const piNodeParents = (\r\n    proof: NodeInterface[],\r\n    hiddenNodesArray: number[],\r\n    dependencies: { [parentId: number]: number[] } = {},\r\n): number[] => {\r\n    const parents = hiddenNodesArray\r\n        // Concat all the parents\r\n        .reduce((acc: number[], hiddenNode) => {\r\n            let haveHiddenParent = false;\r\n\r\n            proof[hiddenNode].parents.forEach((parent) => {\r\n                // If this parent is a hidden node\r\n                if (hiddenNodesArray.indexOf(parent) !== -1) {\r\n                    haveHiddenParent = true;\r\n                } else {\r\n                    dependencies[parent]\r\n                        ? dependencies[parent].push(hiddenNode)\r\n                        : (dependencies[parent] = [hiddenNode]);\r\n                }\r\n            });\r\n\r\n            if (haveHiddenParent) return acc;\r\n            return acc.concat(proof[hiddenNode].parents);\r\n        }, [])\r\n        // Filter the duplicated elements\r\n        .filter((parent, i, self) => self.indexOf(parent) === i)\r\n        // Only the parents that aren't in he hidden nodes array remains\r\n        .filter((parent) => hiddenNodesArray.indexOf(parent) === -1);\r\n\r\n    // Removes the pi node parents from the dependencies\r\n    Object.keys(dependencies).forEach((parent) => {\r\n        const n = Number(parent);\r\n        if (parents.indexOf(n) !== -1) delete dependencies[n];\r\n    });\r\n\r\n    return parents;\r\n};\r\n\r\nexport const descendants = (proof: NodeInterface[], nodeId: number): number[] => {\r\n    return proof[nodeId].children.concat(\r\n        proof[nodeId].children.reduce((acc: number[], childId) => acc.concat(descendants(proof, childId)), []),\r\n    );\r\n};\r\n\r\nexport const piNodeChildren = (proof: NodeInterface[], hiddenNodesArray: number[]): number[] => {\r\n    const children = hiddenNodesArray\r\n        // Get all the childrens\r\n        .reduce((acc: number[], hiddenNode) => acc.concat(proof[hiddenNode].children), [])\r\n        // Exclude the childrens that are part of the hidden nodes\r\n        .filter((child) => hiddenNodesArray.indexOf(child) === -1);\r\n    return children;\r\n};\r\n\r\nexport const findNodesClusters = (proof: NodeInterface[], hiddenNodesArray: number[]): number[][] => {\r\n    const hiddenNodes = [...hiddenNodesArray];\r\n    const clusters: number[][] = [];\r\n    let clusteredNodes = 0;\r\n    const parents = hiddenNodes.map((hiddenNode) => proof[hiddenNode].parents);\r\n\r\n    // Cluster the nodes based on similiar parents\r\n    parents.forEach((parent, clusterID) => {\r\n        // If not all of the nodes where clustered and is a non empty cluster\r\n        if (clusteredNodes !== parents.length && parents[clusterID].length) {\r\n            clusters.push([]);\r\n            parents.forEach((p, hiddenID) => {\r\n                // If those nodes have some parent in commom and they weren't verified yet\r\n                if (parents[hiddenID].length && parent.some((_p) => p.indexOf(_p) !== -1)) {\r\n                    clusters[clusters.length - 1].push(hiddenNodes[hiddenID]);\r\n                    // Removes these parents from the array, making shure they will not get verified again (already clustered)\r\n                    parents[hiddenID] = [];\r\n                    // Increases the number o clustered nodes\r\n                    clusteredNodes++;\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    let pastCluster: number[][] = [];\r\n    // Cluster the nodes until there aren't changes being made\r\n    while (JSON.stringify(pastCluster) != JSON.stringify(clusters)) {\r\n        pastCluster = [...clusters];\r\n        clusters.forEach((cluster, clusterID) => {\r\n            const clusterParents = proof[cluster[0]].parents;\r\n\r\n            // For each cluster\r\n            clusters.forEach((parentCluster, id) => {\r\n                // If this parentCluster (cluster) is parent of the current cluster\r\n                if (parentCluster.some((hiddenID) => clusterParents.indexOf(hiddenID) !== -1)) {\r\n                    // Group the nodes couple in one single cluster (the parent cluster)\r\n                    clusters[id] = clusters[id].concat(clusters[clusterID]);\r\n                    clusters.splice(clusterID, 1);\r\n                    clusterID--;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Filter the nodes with length 1\r\n    return clusters.filter((cluster) => cluster.length > 1);\r\n};\r\n\r\nexport const groupPiNodeDependencies = (\r\n    proof: NodeInterface[],\r\n    hiddenNodesArray: number[],\r\n): NodeInterface['dependencies'] => {\r\n    const piNodeDependencies: NodeInterface['dependencies'] = [];\r\n    const depMap: { [piID: number]: number } = {};\r\n\r\n    // Copy all the hidden nodes dependencies to the new pi node\r\n    proof.forEach((node) => {\r\n        // Search for all the hidden nodes that have deps\r\n        if (hiddenNodesArray.indexOf(node.id) !== -1 && node.dependencies.length) {\r\n            // For each dependence in this node\r\n            node.dependencies.forEach((dep) => {\r\n                // This pi node dependence wasn't inserted yet\r\n                if (Object.keys(depMap).indexOf(String(dep.piId)) === -1) {\r\n                    piNodeDependencies.push(dep);\r\n                    depMap[dep.piId] = piNodeDependencies.length - 1;\r\n                }\r\n                // Concat the nodes inside the pi node already inserted\r\n                else {\r\n                    piNodeDependencies[depMap[dep.piId]].depsId = piNodeDependencies[depMap[dep.piId]].depsId.concat(\r\n                        dep.depsId,\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return piNodeDependencies;\r\n};\r\n\r\nexport const sliceNodesCluster = (\r\n    proof: NodeInterface[],\r\n    clusterMap: number[],\r\n    nodeId = 0,\r\n    slicedClusters: number[][] = [],\r\n): number[][] => {\r\n    const currentNode = proof[nodeId];\r\n\r\n    // If the node id is valid and wasn't inserted yet\r\n    if (nodeId && clusterMap[currentNode.id] === -1) {\r\n        // Get all parents with the same type\r\n        const parentsClusters: { [parentID: number]: number } = {};\r\n        for (let i = 0; i < currentNode.parents.length; i++) {\r\n            const p = currentNode.parents[i];\r\n            if (proof[p].clusterType === currentNode.clusterType) {\r\n                parentsClusters[p] = clusterMap[p];\r\n                break;\r\n            }\r\n        }\r\n\r\n        const keys = Object.keys(parentsClusters);\r\n\r\n        // If the current node has the same type as (at least) one of it's parents\r\n        if (keys.length) {\r\n            // Put the current node in the cluster of the first parent with the same type\r\n            const target = parentsClusters[Number(keys[0])];\r\n            slicedClusters[target].push(currentNode.id);\r\n            clusterMap[currentNode.id] = target;\r\n        }\r\n        // Parent with different type\r\n        else {\r\n            const clusterID = slicedClusters.length;\r\n            clusterMap[currentNode.id] = clusterID;\r\n            slicedClusters.push([currentNode.id]);\r\n\r\n            // Add the brothers with the same type in the same cluster\r\n            proof[currentNode.parents[0]].children.forEach((c) => {\r\n                // If the brother node has the same type as the current one\r\n                if (proof[c].clusterType === currentNode.clusterType && c !== currentNode.id) {\r\n                    slicedClusters[clusterID].push(c);\r\n                    clusterMap[c] = clusterID;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    currentNode.children.forEach((child) => {\r\n        sliceNodesCluster(proof, clusterMap, child, slicedClusters);\r\n    });\r\n    return slicedClusters;\r\n};\r\n\r\nexport const extractTheoryLemmas = (\r\n    proof: NodeInterface[],\r\n    clusters: ProofState['clustersInfos'],\r\n    haveCluster: boolean,\r\n): ProofState['theoryLemmaMap'] => {\r\n    // If have clusters registered\r\n    if (haveCluster) {\r\n        return [proof[0].conclusion].concat(\r\n            clusters.filter((c) => c.type === ClusterKind.TL).map((c) => proof[c.hiddenNodes[0]].conclusion),\r\n        );\r\n    } else {\r\n        return proof.filter((n) => n.rule === 'SCOPE').map((n) => n.conclusion);\r\n    }\r\n};\r\n","export const colorConverter = (colorName: string): string => {\r\n    let color = '#fff';\r\n    switch (colorName) {\r\n        case 'red':\r\n            color = '#f72b34';\r\n            break;\r\n        case 'orange':\r\n            color = '#ff8334';\r\n            break;\r\n        case 'yellow':\r\n            color = '#ffc149';\r\n            break;\r\n        case 'green':\r\n            color = '#60aa51';\r\n            break;\r\n        case 'blue':\r\n            color = '#0097e4';\r\n            break;\r\n        case 'purple':\r\n            color = '#a73da5';\r\n            break;\r\n        case 'brown':\r\n            color = '#a95a49';\r\n            break;\r\n        case 'black':\r\n            color = '#464646';\r\n            break;\r\n\r\n        case 'white':\r\n            color = '#f0f0f0';\r\n            break;\r\n    }\r\n    return color;\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport {\r\n    processDot,\r\n    piNodeChildren,\r\n    piNodeParents,\r\n    descendants,\r\n    findNodesClusters,\r\n    groupPiNodeDependencies,\r\n    sliceNodesCluster,\r\n    extractTheoryLemmas,\r\n} from './auxi';\r\nimport { NodeInterface, ProofState } from '../../../interfaces/interfaces';\r\nimport { colorConverter } from '../theme/auxi';\r\nimport { ClusterKind } from '../../../interfaces/enum';\r\n\r\nconst initialState: ProofState = {\r\n    proof: [],\r\n    view: 'full',\r\n    style: 'graph',\r\n    hiddenNodes: [],\r\n    letMap: {},\r\n    theoryLemmaMap: [],\r\n    visualInfo: [],\r\n    clustersInfos: [],\r\n    smt: '',\r\n};\r\n\r\nexport const proofSlice = createSlice({\r\n    name: 'proof',\r\n    initialState,\r\n\r\n    reducers: {\r\n        process: (state, action: PayloadAction<string>) => {\r\n            // Reset the state\r\n            state.clustersInfos = [];\r\n\r\n            let proofJSON;\r\n            let dot = action.payload;\r\n            let isJSON = false;\r\n\r\n            // If the payload is a .json file\r\n            if (dot.indexOf('{\"dot\":\"') !== -1) {\r\n                proofJSON = JSON.parse(dot);\r\n                dot = proofJSON.dot;\r\n                isJSON = true;\r\n            }\r\n\r\n            const [proof, letMap, clustersColors] = processDot(dot);\r\n            state.proof = proof;\r\n            state.letMap = letMap;\r\n            state.view = 'full';\r\n\r\n            // If there are clusters\r\n            let clusters: number[][] = [];\r\n            if (Object.keys(clustersColors).length) {\r\n                state.view = 'clustered';\r\n\r\n                // Slice the clusters\r\n                const clustersMap: number[] = Array(state.proof.length).fill(-1);\r\n                clusters = sliceNodesCluster(state.proof, clustersMap);\r\n\r\n                // Maps the cluster infos\r\n                clusters.forEach((cluster) => {\r\n                    const type = state.proof[cluster[0]].clusterType;\r\n                    state.clustersInfos.push({\r\n                        hiddenNodes: cluster,\r\n                        type: type,\r\n                        color: colorConverter(clustersColors[type]),\r\n                    });\r\n                });\r\n\r\n                // Extract the theory lemmas\r\n                state.theoryLemmaMap = extractTheoryLemmas(state.proof, state.clustersInfos, true);\r\n            } else {\r\n                state.theoryLemmaMap = extractTheoryLemmas(state.proof, state.clustersInfos, false);\r\n            }\r\n\r\n            if (isJSON) {\r\n                state.view = proofJSON.view;\r\n                state.hiddenNodes = proofJSON.hiddenNodes;\r\n                state.visualInfo = proofJSON.visualInfo;\r\n            }\r\n            // Is .dot\r\n            else {\r\n                state.hiddenNodes = clusters.filter((c) => c.length > 1);\r\n\r\n                // Init the visual info\r\n                const visualInfo: ProofState['visualInfo'] = {};\r\n                state.proof.forEach((node) => {\r\n                    visualInfo[node.id] = {\r\n                        color: '#fff',\r\n                        x: 0,\r\n                        y: 0,\r\n                        selected: false,\r\n                    };\r\n                });\r\n\r\n                let size = state.proof.length;\r\n                state.clustersInfos.forEach((cluster) => {\r\n                    visualInfo[cluster.hiddenNodes.length !== 1 ? size++ : cluster.hiddenNodes[0]] = {\r\n                        color: cluster.color,\r\n                        x: 0,\r\n                        y: 0,\r\n                        selected: false,\r\n                    };\r\n                });\r\n\r\n                state.visualInfo = visualInfo;\r\n            }\r\n        },\r\n        hideNodes: (state, action: PayloadAction<number[]>) => {\r\n            const toHideNodes = action.payload.filter(\r\n                (id) =>\r\n                    id > 0 &&\r\n                    id < state.proof.length &&\r\n                    state.hiddenNodes.every((hiddenNodesArray) => hiddenNodesArray.indexOf(id) === -1),\r\n            );\r\n\r\n            const clusters = findNodesClusters(state.proof, toHideNodes);\r\n            state.hiddenNodes = state.hiddenNodes\r\n                .concat(clusters)\r\n                .filter((hiddenNodesArray) => hiddenNodesArray.length > 0);\r\n\r\n            // Set the visual info for the new pi nodes\r\n            const piNodeId = Object.keys(state.visualInfo).length;\r\n            for (let i = 0; i < clusters.length; i++) {\r\n                state.visualInfo = {\r\n                    ...state.visualInfo,\r\n                    [piNodeId + i]: {\r\n                        color: '#555',\r\n                        x: 0,\r\n                        y: 0,\r\n                        selected: false,\r\n                    },\r\n                };\r\n            }\r\n\r\n            // Unselect the selected nodes\r\n            toHideNodes.forEach(\r\n                (id) =>\r\n                    (state.visualInfo[id] = {\r\n                        ...state.visualInfo[id],\r\n                        selected: false,\r\n                    }),\r\n            );\r\n        },\r\n        foldAllDescendants: (state, action: PayloadAction<number>) => {\r\n            state.hiddenNodes = state.hiddenNodes\r\n                .concat([\r\n                    [action.payload, ...descendants(state.proof, action.payload)].filter(\r\n                        (id, index, self) =>\r\n                            id > 0 &&\r\n                            id < state.proof.length &&\r\n                            state.hiddenNodes.every((hiddenNodesArray) => hiddenNodesArray.indexOf(id) === -1) &&\r\n                            self.indexOf(id) === index,\r\n                    ),\r\n                ])\r\n                .filter((hiddenNodesArray) => hiddenNodesArray.length > 0);\r\n\r\n            // Set the visual info for the new pi node and the root node\r\n            const piNodeId = Object.keys(state.visualInfo).length;\r\n            state.visualInfo = {\r\n                ...state.visualInfo,\r\n                [action.payload]: {\r\n                    ...state.visualInfo[action.payload],\r\n                    selected: false,\r\n                },\r\n                [piNodeId]: {\r\n                    color: '#555',\r\n                    x: 0,\r\n                    y: 0,\r\n                    selected: false,\r\n                },\r\n            };\r\n        },\r\n        unhideNodes: (state, action: PayloadAction<{ pi: number; hiddens: number[] }>) => {\r\n            const { pi, hiddens } = action.payload;\r\n            state.hiddenNodes = state.hiddenNodes\r\n                .map((hiddenNodesArray) => hiddenNodesArray.filter((id) => hiddens.indexOf(id) === -1))\r\n                .filter((hiddenNodesArray) => hiddenNodesArray.length > 0);\r\n\r\n            const color = state.visualInfo[pi].color;\r\n            // Make sure the ids are realocated\r\n            const size = Object.keys(state.visualInfo).length;\r\n            for (let i = pi; i < size - 1; i++) {\r\n                state.visualInfo[i] = state.visualInfo[i + 1];\r\n            }\r\n            // Delete the last position\r\n            delete state.visualInfo[size - 1];\r\n\r\n            // Unselect the hidden nodes and set their color equal to the pi node\r\n            hiddens.forEach(\r\n                (id) =>\r\n                    (state.visualInfo[id] = {\r\n                        ...state.visualInfo[id],\r\n                        color: color !== '#555' ? color : state.visualInfo[id].color,\r\n                        selected: false,\r\n                    }),\r\n            );\r\n        },\r\n        setVisualInfo: (state, action: PayloadAction<ProofState['visualInfo']>) => {\r\n            state.visualInfo = action.payload;\r\n        },\r\n        selectNodes: (state, action: PayloadAction<number[]>) => {\r\n            const len = Object.keys(state.visualInfo).length;\r\n            action.payload.forEach((id) => {\r\n                if (id >= 0 && id < len) {\r\n                    state.visualInfo[id].selected = true;\r\n                }\r\n            });\r\n        },\r\n        unselectNodes: (state, action: PayloadAction<number[]>) => {\r\n            const len = Object.keys(state.visualInfo).length;\r\n            action.payload.forEach((id) => {\r\n                if (id >= 0 && id < len) {\r\n                    state.visualInfo[id].selected = false;\r\n                }\r\n            });\r\n        },\r\n        changeStyle: (state, action: PayloadAction<ProofState['style']>) => {\r\n            switch (action.payload) {\r\n                case 'graph':\r\n                    state.style = 'graph';\r\n                    break;\r\n                case 'directory':\r\n                    state.style = 'directory';\r\n                    break;\r\n            }\r\n        },\r\n        applyView: (state, action: PayloadAction<ProofState['view']>) => {\r\n            const visualInfoSize = Object.keys(state.visualInfo).length;\r\n            const proofSize = state.proof.length;\r\n            // Delete all the pi nodes\r\n            for (let i = 0; i < visualInfoSize - proofSize; i++) {\r\n                delete state.visualInfo[proofSize + i];\r\n            }\r\n\r\n            switch (action.payload) {\r\n                // View without hidden Nodes\r\n                case 'full':\r\n                    if (state.hiddenNodes.length || state.view === 'colored-full') {\r\n                        state.proof.forEach((node) => {\r\n                            state.visualInfo[node.id] = {\r\n                                color: '#fff',\r\n                                x: 0,\r\n                                y: 0,\r\n                                selected: false,\r\n                            };\r\n                        });\r\n\r\n                        state.hiddenNodes = [];\r\n                    }\r\n                    state.view = 'full';\r\n                    break;\r\n                // Cluster all the nodes in your respective group\r\n                case 'clustered':\r\n                    // If there are clusters infos\r\n                    if (state.clustersInfos.length) {\r\n                        state.view = 'clustered';\r\n\r\n                        state.hiddenNodes = [];\r\n                        let size = Object.keys(state.visualInfo).length;\r\n\r\n                        state.clustersInfos.forEach((cluster) => {\r\n                            if (cluster.hiddenNodes.length !== 1) {\r\n                                state.visualInfo[size++] = {\r\n                                    color: cluster.color,\r\n                                    x: 0,\r\n                                    y: 0,\r\n                                    selected: false,\r\n                                };\r\n\r\n                                state.hiddenNodes.push(cluster.hiddenNodes);\r\n                            }\r\n                            // Cluster with 1 node\r\n                            else {\r\n                                state.visualInfo[cluster.hiddenNodes[0]] = {\r\n                                    color: cluster.color,\r\n                                    x: 0,\r\n                                    y: 0,\r\n                                    selected: false,\r\n                                };\r\n                            }\r\n                        });\r\n                    }\r\n                    break;\r\n                // Apply full view but apply the clustrer color\r\n                case 'colored-full':\r\n                    state.view = 'colored-full';\r\n                    state.hiddenNodes = [];\r\n\r\n                    // If there are clusters infos\r\n                    if (state.clustersInfos.length) {\r\n                        state.clustersInfos.forEach((cluster) => {\r\n                            cluster.hiddenNodes.forEach((node) => {\r\n                                state.visualInfo[node] = {\r\n                                    color: cluster.color,\r\n                                    x: 0,\r\n                                    y: 0,\r\n                                    selected: false,\r\n                                };\r\n                            });\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        },\r\n        applyColor: (state, action: PayloadAction<string>) => {\r\n            Object.keys(state.visualInfo).forEach((id) => {\r\n                if (state.visualInfo[Number(id)].selected) {\r\n                    state.visualInfo[Number(id)].color = action.payload;\r\n                    state.visualInfo[Number(id)].selected = false;\r\n                }\r\n            });\r\n        },\r\n        setSmt: (state, action: PayloadAction<string>) => {\r\n            state.smt = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    process,\r\n    hideNodes,\r\n    foldAllDescendants,\r\n    unhideNodes,\r\n    setVisualInfo,\r\n    selectNodes,\r\n    unselectNodes,\r\n    changeStyle,\r\n    applyView,\r\n    applyColor,\r\n    setSmt,\r\n} = proofSlice.actions;\r\n\r\nexport const selectProof = (state: RootState): NodeInterface[] => {\r\n    let proof = state.proof.proof;\r\n    const hiddenNodes = state.proof.hiddenNodes;\r\n\r\n    hiddenNodes.forEach((hiddenNodesArray) => {\r\n        const dependencies: { [parentId: number]: number[] } = {};\r\n        const children = piNodeChildren(proof, hiddenNodesArray);\r\n        const parents = piNodeParents(proof, hiddenNodesArray, dependencies);\r\n        const piNodeDependencies = groupPiNodeDependencies(proof, hiddenNodesArray);\r\n\r\n        const piNodeId = proof.length;\r\n        proof = proof.concat({\r\n            id: piNodeId,\r\n            conclusion: '∴',\r\n            rule: 'π',\r\n            args: '',\r\n            children: children,\r\n            parents: parents,\r\n            hiddenNodes: hiddenNodesArray.map((hiddenNode) => proof[hiddenNode]),\r\n            descendants: 1,\r\n            dependencies: piNodeDependencies,\r\n            clusterType: ClusterKind.NONE,\r\n        });\r\n\r\n        const piNode = proof[piNodeId];\r\n\r\n        children.forEach(\r\n            (childId) =>\r\n                (proof[childId] = {\r\n                    ...proof[childId],\r\n                    parents: proof[childId].parents\r\n                        .concat([piNodeId])\r\n                        .filter((proofNode) => hiddenNodesArray.indexOf(proofNode) === -1),\r\n                }),\r\n        );\r\n        parents.forEach(\r\n            (parentId) =>\r\n                (proof[parentId] = {\r\n                    ...proof[parentId],\r\n                    children: proof[parentId].children\r\n                        .concat([piNodeId])\r\n                        .filter((proofNode) => hiddenNodesArray.indexOf(proofNode) === -1),\r\n                }),\r\n        );\r\n\r\n        // Set the dependencies array of each parent that has deps and remove\r\n        //  the children that are dependencies\r\n        Object.keys(dependencies).forEach((parent) => {\r\n            const parentId = Number(parent);\r\n            proof[parentId] = {\r\n                ...proof[parentId],\r\n                children: proof[parentId].children.filter((c) => dependencies[parentId].indexOf(c) === -1),\r\n                dependencies: [...proof[parentId].dependencies, { piId: piNodeId, depsId: dependencies[parentId] }],\r\n            };\r\n        });\r\n\r\n        // Get the high hierarchy nodes in this pi node\r\n        const highHierarchyNodes = hiddenNodesArray?.filter((node) =>\r\n            proof[node].parents.every((parentId) => piNode.parents.indexOf(parentId) !== -1),\r\n        );\r\n\r\n        // Get the conclusion array\r\n        const conclusion = highHierarchyNodes.map((node) => ' ' + proof[node].conclusion);\r\n        piNode.conclusion = conclusion.length > 1 ? `[${conclusion} ]` : `${conclusion}`;\r\n\r\n        // Get the rule array\r\n        const rule = highHierarchyNodes.map((node) => ' ' + proof[node].rule);\r\n        piNode.rule = rule.length > 1 ? `[${rule} ]` : `${rule} `;\r\n\r\n        // Set the descendants number\r\n        piNode.descendants = piNode.children.reduce(\r\n            (ac: number, childID) => ((ac += proof[childID].descendants), ac),\r\n            1,\r\n        );\r\n    });\r\n\r\n    proof = proof.filter((proofNode) =>\r\n        hiddenNodes.every((hiddenNodesArray) => hiddenNodesArray.indexOf(proofNode.id) === -1),\r\n    );\r\n\r\n    return proof;\r\n};\r\n\r\nexport const selectOriginalProof = (state: RootState): NodeInterface[] => {\r\n    return state.proof.proof;\r\n};\r\n\r\nexport const selectView = (state: RootState): ProofState['view'] => {\r\n    return state.proof.view;\r\n};\r\n\r\nexport const selectStyle = (state: RootState): 'graph' | 'directory' => {\r\n    return state.proof.style;\r\n};\r\n\r\nexport const selectLetMap = (state: RootState): { [Key: string]: string } => {\r\n    return state.proof.letMap;\r\n};\r\n\r\nexport const selectTheoryLemmas = (state: RootState): ProofState['theoryLemmaMap'] => {\r\n    return state.proof.theoryLemmaMap;\r\n};\r\n\r\nexport const selectVisualInfo = (state: RootState): ProofState['visualInfo'] => {\r\n    if (state.proof.proof.length) return state.proof.visualInfo;\r\n    // If there is no proof node\r\n    return { 0: { color: '#555', x: 0, y: 0, selected: false } };\r\n};\r\n\r\nexport const selectHiddenNodes = (state: RootState): number[][] => {\r\n    return state.proof.hiddenNodes;\r\n};\r\n\r\nexport const selectNodeClusters = (state: RootState): ProofState['clustersInfos'] => {\r\n    return state.proof.clustersInfos;\r\n};\r\n\r\nexport const selectSmt = (state: RootState): ProofState['smt'] => {\r\n    return state.proof.smt;\r\n};\r\n\r\nexport default proofSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport { ThemeState } from '../../../interfaces/interfaces';\r\n\r\nconst initialState: ThemeState = {\r\n    value: true,\r\n};\r\n\r\nexport const themeSlice = createSlice({\r\n    name: 'theme',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        toggle: (state) => {\r\n            state.value = !state.value;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { toggle } = themeSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice theme. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectTheme = (state: RootState): boolean => state.theme.value;\r\n\r\nexport default themeSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport { ExternalCmdState } from '../../../interfaces/interfaces';\r\n\r\nconst initialState: ExternalCmdState = {\r\n    findData: {\r\n        nodeToFind: -1,\r\n        findOption: false,\r\n    },\r\n    renderData: {\r\n        count: 0,\r\n        fileChanged: false,\r\n    },\r\n};\r\n\r\nexport const externalCmd = createSlice({\r\n    name: 'externalCmd',\r\n    initialState,\r\n    reducers: {\r\n        findNode: (state, action: PayloadAction<{ nodeId: number; option: boolean }>) => {\r\n            state.findData = { nodeToFind: action.payload.nodeId, findOption: action.payload.option };\r\n        },\r\n        reRender: (state) => {\r\n            state.renderData.count = 0;\r\n        },\r\n        addRenderCount: (state) => {\r\n            state.renderData.count++;\r\n        },\r\n        blockRender: (state) => {\r\n            state.renderData.count = 2;\r\n        },\r\n        allowRenderNewFile: (state) => {\r\n            state.renderData.fileChanged = true;\r\n        },\r\n        blockRenderNewFile: (state) => {\r\n            state.renderData.fileChanged = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { findNode, reRender, addRenderCount, blockRender, allowRenderNewFile, blockRenderNewFile } =\r\n    externalCmd.actions;\r\n\r\nexport const selectFindData = (state: RootState): { nodeToFind: number; findOption: boolean } =>\r\n    state.externalCmd.findData;\r\n\r\nexport const selectRenderData = (state: RootState): { count: number; fileChanged: boolean } =>\r\n    state.externalCmd.renderData;\r\n\r\nexport default externalCmd.reducer;\r\n","const examples: { [ex: string]: { dot: string; smt: string } } = {\r\n    ex1: {\r\n        dot: 'unsat\\r\\ndigraph proof {\\r\\n\\trankdir=\"BT\";\\r\\n\\tnode [shape=record];\\r\\n\\tcomment=\"{\\\\\"letMap\\\\\" : {\\\\\"let1\\\\\" : \\\\\"(f b)\\\\\", \\\\\"let2\\\\\" : \\\\\"(= (f a) let1)\\\\\", \\\\\"let3\\\\\" : \\\\\"(not let2)\\\\\", \\\\\"let4\\\\\" : \\\\\"(or p let3)\\\\\", \\\\\"let5\\\\\" : \\\\\"(not p)\\\\\", \\\\\"let6\\\\\" : \\\\\"(= a b)\\\\\", \\\\\"let7\\\\\" : \\\\\"(= let1 let1)\\\\\", \\\\\"let8\\\\\" : \\\\\"(not let7)\\\\\", \\\\\"let9\\\\\" : \\\\\"(not true)\\\\\", \\\\\"let10\\\\\" : \\\\\"(= p false)\\\\\"}}\";\\r\\n\\t0 [ label = \"{(not (and let6 let5 let4))|SCOPE :args [ let6, let5, let4 ]}\", comment = \"{\\\\\"subProofQty\\\\\":21}\" ];\\r\\n\\t1 [ label = \"{false|EQ_RESOLVE}\", comment = \"{\\\\\"subProofQty\\\\\":20}\" ];\\r\\n\\t2 [ label = \"{let3|CHAIN_RESOLUTION :args [ true, p ]}\", comment = \"{\\\\\"subProofQty\\\\\":3}\" ];\\r\\n\\t3 [ label = \"{let4|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t3 -> 2;\\r\\n\\t4 [ label = \"{let5|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t4 -> 2;\\r\\n\\t2 -> 1;\\r\\n\\t5 [ label = \"{(= let3 false)|TRANS}\", comment = \"{\\\\\"subProofQty\\\\\":16}\" ];\\r\\n\\t6 [ label = \"{(= let3 let8)|CONG :args [ not ]}\", comment = \"{\\\\\"subProofQty\\\\\":11}\" ];\\r\\n\\t7 [ label = \"{(= let2 let7)|CONG :args [ = ]}\", comment = \"{\\\\\"subProofQty\\\\\":10}\" ];\\r\\n\\t8 [ label = \"{let2|CONG :args [ f ]}\", comment = \"{\\\\\"subProofQty\\\\\":8}\" ];\\r\\n\\t9 [ label = \"{let6|AND_ELIM :args [ 1 ]}\", comment = \"{\\\\\"subProofQty\\\\\":7}\" ];\\r\\n\\t10 [ label = \"{(and let10 let6)|AND_INTRO}\", comment = \"{\\\\\"subProofQty\\\\\":6}\" ];\\r\\n\\t11 [ label = \"{let10|EQ_RESOLVE}\", comment = \"{\\\\\"subProofQty\\\\\":4}\" ];\\r\\n\\t4 -> 11;\\r\\n\\t12 [ label = \"{(= let5 let10)|SYMM}\", comment = \"{\\\\\"subProofQty\\\\\":2}\" ];\\r\\n\\t13 [ label = \"{(= let10 let5)|THEORY_REWRITE :args [ BOOL ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t13 -> 12;\\r\\n\\t12 -> 11;\\r\\n\\t11 -> 10;\\r\\n\\t14 [ label = \"{let6|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t14 -> 10;\\r\\n\\t10 -> 9;\\r\\n\\t9 -> 8;\\r\\n\\t8 -> 7;\\r\\n\\t15 [ label = \"{let7|REFL}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t15 -> 7;\\r\\n\\t7 -> 6;\\r\\n\\t6 -> 5;\\r\\n\\t16 [ label = \"{(= let8 false)|TRANS}\", comment = \"{\\\\\"subProofQty\\\\\":4}\" ];\\r\\n\\t17 [ label = \"{(= let8 let9)|CONG :args [ not ]}\", comment = \"{\\\\\"subProofQty\\\\\":2}\" ];\\r\\n\\t18 [ label = \"{(= let7 true)|THEORY_REWRITE :args [ UF ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t18 -> 17;\\r\\n\\t17 -> 16;\\r\\n\\t19 [ label = \"{(= let9 false)|THEORY_REWRITE :args [ BOOL ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t19 -> 16;\\r\\n\\t16 -> 5;\\r\\n\\t5 -> 1;\\r\\n\\t1 -> 0;\\r\\n\\r\\n}\\r\\n',\r\n        smt: `(set-logic QF_UF)\\n(set-info :category \"crafted\")\\n(set-info :status unsat)\\n(declare-sort U 0)\\n(declare-fun a () U)\\n(declare-fun b () U)\\n(declare-fun f (U) U)\\n(declare-fun p () Bool)\\n(assert (= a b))\\n(assert (not p))\\n(assert (or p (not (= (f a) (f b)))))\\n(check-sat)\\n(exit)`,\r\n    },\r\n    ex2: {\r\n        dot: 'unsat\\r\\ndigraph proof {\\r\\n\\trankdir=\"BT\";\\r\\n\\tnode [shape=record];\\r\\n\\tcomment=\"{\\\\\"letMap\\\\\" : {\\\\\"let1\\\\\" : \\\\\"(= (f a) (f b))\\\\\", \\\\\"let2\\\\\" : \\\\\"(not let1)\\\\\", \\\\\"let3\\\\\" : \\\\\"(or (not p3) let2)\\\\\", \\\\\"let4\\\\\" : \\\\\"(and p2 p3)\\\\\", \\\\\"let5\\\\\" : \\\\\"(or (not p1) let4)\\\\\", \\\\\"let6\\\\\" : \\\\\"(and p1 true)\\\\\", \\\\\"let7\\\\\" : \\\\\"(= a b)\\\\\", \\\\\"let8\\\\\" : \\\\\"(not let4)\\\\\", \\\\\"let9\\\\\" : \\\\\"(not let7)\\\\\"}}\";\\r\\n\\t0 [ label = \"{(not (and let7 let6 let5 let3))|SCOPE :args [ let7, let6, let5, let3 ]}\", comment = \"{\\\\\"subProofQty\\\\\":20}\" ];\\r\\n\\t1 [ label = \"{false|CHAIN_RESOLUTION :args [ true, let1, false, let7 ]}\", comment = \"{\\\\\"subProofQty\\\\\":19}\" ];\\r\\n\\t2 [ label = \"{(or let1 let9)|REORDERING}\", comment = \"{\\\\\"subProofQty\\\\\":7}\" ];\\r\\n\\t3 [ label = \"{(or let9 let1)|IMPLIES_ELIM}\", comment = \"{\\\\\"subProofQty\\\\\":6}\" ];\\r\\n\\t4 [ label = \"{(=\\\\> let7 let1)|SCOPE :args [ let7 ]}\", comment = \"{\\\\\"subProofQty\\\\\":5}\" ];\\r\\n\\t5 [ label = \"{let1|CONG :args [ f ]}\", comment = \"{\\\\\"subProofQty\\\\\":4}\" ];\\r\\n\\t6 [ label = \"{let7|SYMM}\", comment = \"{\\\\\"subProofQty\\\\\":3}\" ];\\r\\n\\t7 [ label = \"{(= b a)|SYMM}\", comment = \"{\\\\\"subProofQty\\\\\":2}\" ];\\r\\n\\t8 [ label = \"{let7|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t8 -> 7;\\r\\n\\t7 -> 6;\\r\\n\\t6 -> 5;\\r\\n\\t5 -> 4;\\r\\n\\t4 -> 3;\\r\\n\\t3 -> 2;\\r\\n\\t2 -> 1;\\r\\n\\t9 [ label = \"{let2|CHAIN_RESOLUTION :args [ false, p3 ]}\", comment = \"{\\\\\"subProofQty\\\\\":10}\" ];\\r\\n\\t10 [ label = \"{let3|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t10 -> 9;\\r\\n\\t11 [ label = \"{p3|CHAIN_RESOLUTION :args [ false, let4 ]}\", comment = \"{\\\\\"subProofQty\\\\\":8}\" ];\\r\\n\\t12 [ label = \"{(or p3 let8)|REORDERING}\", comment = \"{\\\\\"subProofQty\\\\\":2}\" ];\\r\\n\\t13 [ label = \"{(or let8 p3)|CNF_AND_POS :args [ let4, 1 ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t13 -> 12;\\r\\n\\t12 -> 11;\\r\\n\\t14 [ label = \"{let4|CHAIN_RESOLUTION :args [ false, p1 ]}\", comment = \"{\\\\\"subProofQty\\\\\":5}\" ];\\r\\n\\t15 [ label = \"{let5|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t15 -> 14;\\r\\n\\t16 [ label = \"{p1|EQ_RESOLVE}\", comment = \"{\\\\\"subProofQty\\\\\":3}\" ];\\r\\n\\t17 [ label = \"{let6|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t17 -> 16;\\r\\n\\t18 [ label = \"{(= let6 p1)|THEORY_REWRITE :args [ BOOL ]}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t18 -> 16;\\r\\n\\t16 -> 14;\\r\\n\\t14 -> 11;\\r\\n\\t11 -> 9;\\r\\n\\t9 -> 1;\\r\\n\\t19 [ label = \"{let7|ASSUME}\", comment = \"{\\\\\"subProofQty\\\\\":1}\" ];\\r\\n\\t19 -> 1;\\r\\n\\t1 -> 0;\\r\\n\\r\\n\\tsubgraph cluster_SAT {\\r\\n\\t\\tlabel=\"SAT\"\\r\\n\\t\\tbgcolor=\"purple\"\\r\\n\\t\\t1 2 9 11 12 14 \\r\\n\\t};\\r\\n\\tsubgraph cluster_CNF {\\r\\n\\t\\tlabel=\"CNF\"\\r\\n\\t\\tbgcolor=\"yellow\"\\r\\n\\t\\t3 13 \\r\\n\\t};\\r\\n\\tsubgraph cluster_TL {\\r\\n\\t\\tlabel=\"TL\"\\r\\n\\t\\tbgcolor=\"green\"\\r\\n\\t\\t4 5 6 7 8 \\r\\n\\t};\\r\\n\\tsubgraph cluster_PP {\\r\\n\\t\\tlabel=\"PP\"\\r\\n\\t\\tbgcolor=\"brown\"\\r\\n\\t\\t16 18 \\r\\n\\t};\\r\\n\\tsubgraph cluster_IN {\\r\\n\\t\\tlabel=\"IN\"\\r\\n\\t\\tbgcolor=\"blue\"\\r\\n\\t\\t10 15 17 19 \\r\\n\\t};\\r\\n}\\r\\n',\r\n        smt: `(set-logic QF_UF)\\n\\n(declare-sort U 0)\\n\\n(declare-const p1 Bool)\\n(declare-const p2 Bool)\\n(declare-const p3 Bool)\\n\\n(declare-const a U)\\n(declare-const b U)\\n(declare-fun f (U) U)\\n\\n(assert (= a b))\\n(assert (and p1 true))\\n(assert (or (not p1) (and p2 p3)))\\n(assert (or (not p3) (not (= (f a) (f b)))))\\n\\n(check-sat)`,\r\n    },\r\n};\r\n\r\nexport default examples;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useAppSelector, useAppDispatch } from '../../store/hooks';\r\nimport { selectDot, selectFileName, set } from '../../store/features/file/fileSlice';\r\nimport {\r\n    applyView,\r\n    changeStyle,\r\n    selectNodes,\r\n    applyColor,\r\n    hideNodes,\r\n    foldAllDescendants,\r\n    unhideNodes,\r\n    selectVisualInfo,\r\n    selectProof,\r\n    selectHiddenNodes,\r\n    selectView,\r\n    unselectNodes,\r\n    process,\r\n    setSmt,\r\n} from '../../store/features/proof/proofSlice';\r\nimport { ReduxState, NavbarPropsAndRedux, NavbarProps } from '../../interfaces/interfaces';\r\n\r\nimport { Alignment, Button, Icon, InputGroup, Navbar, Switch, Menu, MenuItem } from '@blueprintjs/core';\r\nimport { Popover2 } from '@blueprintjs/popover2';\r\nimport { selectTheme, toggle } from '../../store/features/theme/themeSlice';\r\nimport '../../scss/VisualizerNavbar.scss';\r\nimport { allowRenderNewFile, findNode, reRender } from '../../store/features/externalCmd/externalCmd';\r\nimport examples from '../../examples/proofs-examples';\r\n\r\nfunction useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: 0,\r\n        height: 0,\r\n    });\r\n    useEffect(() => {\r\n        // Handler to call on window resize\r\n        function handleResize() {\r\n            // Set window width/height to state\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        }\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n    return windowSize;\r\n}\r\n\r\nfunction isNotMozzila() {\r\n    const userAgent = navigator.userAgent;\r\n    let browserName;\r\n\r\n    if (userAgent.match(/chrome|chromium|crios/i)) {\r\n        return true;\r\n    } else if (userAgent.match(/firefox|fxios/i)) {\r\n        return false;\r\n    } else if (userAgent.match(/safari/i)) {\r\n        return true;\r\n    } else if (userAgent.match(/opr\\//i)) {\r\n        return true;\r\n    } else if (userAgent.match(/edg/i)) {\r\n        return true;\r\n    }\r\n    return browserName;\r\n}\r\nconst isNotMozz = isNotMozzila();\r\n\r\nconst VisualizerNavbar: React.FC<NavbarPropsAndRedux> = ({\r\n    setDialogIsOpen,\r\n    setDrawerIsOpen,\r\n    addErrorToast,\r\n    setInTutorial,\r\n    setSmtDrawerIsOpen,\r\n    inTutorial,\r\n    visualInfo,\r\n    proof,\r\n    dot,\r\n    view,\r\n    hiddenNodes,\r\n    hideNodes,\r\n}: NavbarPropsAndRedux) => {\r\n    const fileName = useAppSelector(selectFileName);\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const windowSize = useWindowSize();\r\n    const [command, setCommand] = useState('');\r\n    const [lastCommands, setLastCommands] = useState(['']);\r\n    const [commandId, setCommandId] = useState(0);\r\n    const [matchableCmd, setMatchableCmd] = useState<string[]>([]);\r\n    const [matchableCmdIsOpen, setMatchableCmdIsOpen] = useState(false);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const commandsMap: { [cmd: string]: (cmds: string[]) => void } = {\r\n        ['/view']: (cmds: string[]) => {\r\n            switch (cmds[1]) {\r\n                case 'full':\r\n                    dispatch(applyView('full'));\r\n                    dispatch(reRender());\r\n                    break;\r\n                case 'clustered':\r\n                    dispatch(applyView('clustered'));\r\n                    dispatch(reRender());\r\n                    break;\r\n                case 'colored-full':\r\n                    dispatch(applyView('colored-full'));\r\n                    dispatch(reRender());\r\n                    break;\r\n            }\r\n        },\r\n        ['/select']: (cmds: string[]) => {\r\n            if (cmds[1]) {\r\n                let cmdArg = '';\r\n                cmds.forEach((string, id) => id !== 0 && (cmdArg += string + ' '));\r\n                // Matches all the brackets\r\n                const matches = [...cmdArg.matchAll(/\\[([^\\[\\]]+)\\]/g)];\r\n                let idList: number[] = [];\r\n\r\n                // There is a case with brackets\r\n                if (matches[0]) {\r\n                    const insideBracket = matches[0][1].trim();\r\n                    let insideMatches = [...insideBracket.matchAll(/\\s*\\d+\\s*-\\s*\\d+\\s*/g)];\r\n\r\n                    // Number range notation\r\n                    if (insideMatches[0]) {\r\n                        // Get the range limits\r\n                        const rangeLim = insideMatches[0][0].split(/\\s*-\\s*/).map((numS) => Number(numS));\r\n                        idList = Array.from({ length: rangeLim[1] - rangeLim[0] + 1 }, (_, i) => rangeLim[0] + i);\r\n                    }\r\n                    // List notation\r\n                    else {\r\n                        insideMatches = [...insideBracket.matchAll(/(\\s*\\d+\\s*,*)+/g)];\r\n                        // Number list notation\r\n                        if (insideMatches[0]) {\r\n                            // Group all the matches\r\n                            let listStr = '';\r\n                            insideMatches.forEach((match) => (listStr += match[0]));\r\n                            // Convert to number\r\n                            idList = listStr\r\n                                .split(/,\\s*/)\r\n                                .filter((word) => word.length > 0 && !isNaN(Number(word)))\r\n                                .map((id) => Number(id));\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Is a regex select?\r\n                    const matches = [...cmdArg.matchAll(/\\/[^\\/]*\\//g)];\r\n                    const argMatch = [...cmdArg.matchAll(/--(c|r)/g)];\r\n                    // If there is a regex\r\n                    if (matches[0]) {\r\n                        let argIsConclusion = true;\r\n                        // Try to find the option\r\n                        if (argMatch[0]) {\r\n                            switch (argMatch[0][1]) {\r\n                                case 'r':\r\n                                    argIsConclusion = false;\r\n                                    break;\r\n                                case 'c':\r\n                                    argIsConclusion = true;\r\n                                    break;\r\n                            }\r\n                        }\r\n\r\n                        const regexString = matches[0][0].substring(1, matches[0][0].length - 1);\r\n                        try {\r\n                            // Search all the nodes with the specific regex matching in the conclusion\r\n                            const regex = new RegExp(regexString);\r\n                            idList = proof\r\n                                .filter((node) => regex.test(argIsConclusion ? node.conclusion : node.rule))\r\n                                .map((node) => node.id);\r\n                        } catch (err) {\r\n                            // If the inserted regex expression is invalid (probably missing \\)\r\n                            addErrorToast('Regex error: probably and wrong regex expression');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                dispatch(selectNodes(idList));\r\n            }\r\n        },\r\n        ['/unselect']: (cmds: string[]) => {\r\n            const allNodesIds = proof.map((node) => node.id);\r\n            dispatch(unselectNodes(allNodesIds));\r\n        },\r\n        ['/color']: (cmds: string[]) => {\r\n            if (cmds[1]) {\r\n                // Hex color\r\n                if (RegExp(/^#([0-9a-f]{3}){1,2}$/i).test(cmds[1])) {\r\n                    dispatch(applyColor(cmds[1]));\r\n                    return;\r\n                }\r\n                // Default colors\r\n                switch (cmds[1]) {\r\n                    case 'red':\r\n                        dispatch(applyColor('#f72b34'));\r\n                        break;\r\n                    case 'orange':\r\n                        dispatch(applyColor('#ff8334'));\r\n                        break;\r\n                    case 'yellow':\r\n                        dispatch(applyColor('#ffc149'));\r\n                        break;\r\n                    case 'green':\r\n                        dispatch(applyColor('#60aa51'));\r\n                        break;\r\n                    case 'blue':\r\n                        dispatch(applyColor('#0097e4'));\r\n                        break;\r\n                    case 'purple':\r\n                        dispatch(applyColor('#a73da5'));\r\n                        break;\r\n                    case 'brown':\r\n                        dispatch(applyColor('#a95a49'));\r\n                        break;\r\n                    case 'gray':\r\n                        dispatch(applyColor('#464646'));\r\n                        break;\r\n                    case 'white':\r\n                        dispatch(applyColor('#f0f0f0'));\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        ['/hide']: (cmds: string[]) => {\r\n            // Hide all the selected nodes\r\n            const hiddenIds = Object.keys(visualInfo)\r\n                .map((id) => Number(id))\r\n                .filter((id) => visualInfo[id].selected);\r\n            // Make sure there are nodes selected\r\n            if (hiddenIds.length > 1) {\r\n                // Re-render the canvas and update the store\r\n                dispatch(reRender());\r\n                dispatch(hideNodes(hiddenIds));\r\n            }\r\n        },\r\n        ['/fold']: (cmds: string[]) => {\r\n            // If the option is a number\r\n            if (cmds[1] && !isNaN(Number(cmds[1]))) {\r\n                const nodeId = Number(cmds[1]);\r\n                // Is a valid node\r\n                if (proof.findIndex((node) => node.id === nodeId) !== -1) {\r\n                    // Re-render the canvas and update the store\r\n                    dispatch(reRender());\r\n                    dispatch(foldAllDescendants(nodeId));\r\n                }\r\n            }\r\n        },\r\n        ['/unfold']: (cmds: string[]) => {\r\n            let hiddenIds: number[];\r\n            // If there is a number argument\r\n            if (cmds[1] && !isNaN(Number(cmds[1]))) {\r\n                const id = Number(cmds[1]);\r\n                // Get the pi node (to be unfold)\r\n                const obj = proof.find((node) => node.id === id);\r\n                // If it's a pi node\r\n                if (obj && obj.hiddenNodes?.length) {\r\n                    // Get the hidden nodes and their ids\r\n                    const hiddenNodes = obj.hiddenNodes ? obj.hiddenNodes : [];\r\n                    hiddenIds = hiddenNodes ? hiddenNodes.map((node) => node.id) : [];\r\n                    // Re-render the canvas and update the store\r\n                    dispatch(reRender());\r\n                    dispatch(unhideNodes({ pi: id, hiddens: hiddenIds }));\r\n                }\r\n            }\r\n        },\r\n        ['/find']: (cmds: string[]) => {\r\n            // If there is an argument and is a number\r\n            if (cmds[1] && !isNaN(Number(cmds[1]))) {\r\n                // Find the node\r\n                dispatch(\r\n                    findNode({\r\n                        nodeId: Number(cmds[1]),\r\n                        option: cmds[2] === '--s' ? true : false,\r\n                    }),\r\n                );\r\n            }\r\n        },\r\n    };\r\n    const commands = useRef(Object.keys(commandsMap)).current;\r\n\r\n    const openDialog = (content: string): void => {\r\n        setDialogIsOpen(true);\r\n    };\r\n\r\n    const findMatchableCmd = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.value.length) {\r\n            setMatchableCmd(commands.filter((cmd) => cmd.indexOf(e.target.value) !== -1));\r\n            setMatchableCmdIsOpen(true);\r\n        }\r\n        // If it's an empty string\r\n        else {\r\n            setMatchableCmd([]);\r\n            setMatchableCmdIsOpen(false);\r\n        }\r\n    };\r\n\r\n    const renderMatchableCmd = () => {\r\n        if (matchableCmd.length) {\r\n            const list: JSX.Element[] = [];\r\n            matchableCmd.forEach((cmd) => list.push(<MenuItem text={cmd} />));\r\n            return <Menu className=\"matchable-menu\">{list}</Menu>;\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    const handleInputKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        // Creates an commands historic, registering the past 4 commands\r\n        switch (e.key) {\r\n            case 'Enter':\r\n                // If the command is not a white space\r\n                if (command.trim() !== '') {\r\n                    runCommands(command);\r\n                    if (lastCommands.length === 5) {\r\n                        lastCommands.pop();\r\n                    }\r\n                    lastCommands.unshift('');\r\n                    setLastCommands(lastCommands);\r\n                    setCommand('');\r\n                }\r\n                setMatchableCmd([]);\r\n                break;\r\n            case 'ArrowUp':\r\n                if (commandId < lastCommands.length - 1) {\r\n                    const newId = commandId + 1;\r\n                    setCommandId(newId);\r\n                    setCommand(lastCommands[newId]);\r\n                    setMatchableCmd([]);\r\n                    setMatchableCmdIsOpen(false);\r\n                }\r\n                break;\r\n            case 'ArrowDown':\r\n                if (commandId > 0) {\r\n                    const newId = commandId - 1;\r\n                    setCommandId(newId);\r\n                    setCommand(lastCommands[newId]);\r\n                    setMatchableCmd([]);\r\n                    setMatchableCmdIsOpen(false);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    const runCommands = (command: string): void => {\r\n        const cmds = command.trim().split(/ +/);\r\n        // If the command exist\r\n        if (cmds[0] && commandsMap[cmds[0]]) {\r\n            commandsMap[cmds[0]](cmds);\r\n        }\r\n    };\r\n\r\n    const exportJSON = () => {\r\n        const downloadJSON = {\r\n            dot: dot,\r\n            visualInfo: visualInfo,\r\n            hiddenNodes: hiddenNodes,\r\n            view: view,\r\n        };\r\n        const fName = fileName.split('.')[0].replace(/\\s+/g, '_');\r\n\r\n        const link = document.createElement('a');\r\n        link.download = fName + '.json';\r\n        link.href = `data:attachment/text,${encodeURIComponent(JSON.stringify(downloadJSON))}`;\r\n        link.click();\r\n    };\r\n\r\n    const exportPNG = (e: React.MouseEvent<HTMLElement, MouseEvent> | null) => {\r\n        e?.preventDefault();\r\n        const link = document.createElement('a');\r\n        link.download = fileName ? `${fileName.split('.')[0].replace(/\\s+/g, '_')}.png` : '';\r\n        const graph = document.getElementsByClassName('konvajs-content');\r\n        if (graph.length) {\r\n            link.href = (graph[0].children[0] as HTMLCanvasElement).toDataURL('image/png');\r\n            link.click();\r\n        }\r\n    };\r\n\r\n    const runExample = (e: React.MouseEvent<HTMLElement, MouseEvent> | null, ex: string, id: number) => {\r\n        e?.preventDefault();\r\n        const dot = examples[ex].dot;\r\n        const smt = examples[ex].smt;\r\n\r\n        dispatch(set({ name: `ex-${id + 1}.dot`, value: dot }));\r\n        dispatch(allowRenderNewFile());\r\n        dispatch(reRender());\r\n        dispatch(setSmt(smt));\r\n\r\n        dispatch(process(dot));\r\n        setSmtDrawerIsOpen();\r\n    };\r\n\r\n    const isPseudoClick = (e: React.KeyboardEvent<HTMLAnchorElement>): boolean => e.key === 'Enter' || e.key === ' ';\r\n\r\n    const menus = {\r\n        style: (\r\n            <Menu className=\"nav-menu\">\r\n                <MenuItem\r\n                    icon=\"diagram-tree\"\r\n                    text=\"Graph\"\r\n                    onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                        e.preventDefault();\r\n                        dispatch(changeStyle('graph'));\r\n                    }}\r\n                    onKeyDown={(e) => isPseudoClick(e) && dispatch(changeStyle('graph'))}\r\n                />\r\n                <MenuItem\r\n                    icon=\"folder-open\"\r\n                    text=\"Directory\"\r\n                    onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                        e.preventDefault();\r\n                        dispatch(changeStyle('directory'));\r\n                    }}\r\n                    onKeyDown={(e) => isPseudoClick(e) && dispatch(changeStyle('directory'))}\r\n                />\r\n            </Menu>\r\n        ),\r\n        download: (\r\n            <Menu className=\"nav-menu\">\r\n                <MenuItem\r\n                    icon=\"layout\"\r\n                    text=\"JSON\"\r\n                    onClick={exportJSON}\r\n                    role=\"button\"\r\n                    onKeyDown={(e) => {\r\n                        (e.key == 'Enter' || e.key == ' ') && exportJSON();\r\n                    }}\r\n                />\r\n                <MenuItem\r\n                    icon=\"graph\"\r\n                    text=\"DOT\"\r\n                    href={`data:attachment/text,${encodeURIComponent(dot ? dot : '')}`}\r\n                    download={fileName ? `${fileName.split('.')[0].replace(/\\s+/g, '_')}.dot` : ''}\r\n                />\r\n                <MenuItem\r\n                    icon=\"square\"\r\n                    text=\"PNG\"\r\n                    onClick={exportPNG}\r\n                    onKeyDown={(e) => {\r\n                        (e.key == 'Enter' || e.key == ' ') && exportPNG(null);\r\n                    }}\r\n                />\r\n            </Menu>\r\n        ),\r\n        help: (\r\n            <Menu className=\"nav-menu\">\r\n                <MenuItem text=\"/view\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that changes the view mode.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /view {'<option>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Option:</u> full, clustered and colored-full.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/select\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that selects a group of nodes.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /select {'<option>'} {'<argument>'}\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Options:</u>\r\n                            <div className=\"option\">\r\n                                1 - A list of node ids wrapped by brackets and separated by commas (and spaces if\r\n                                wanted) (eg.: [1, 15, 6, 3]).\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                2 - A range of node ids wrapped by brackets and separated by hyphen (and spaces if\r\n                                wanted) (eg.: [4 - 15]). This range will include the last element.\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                3 - A regex expression used to select all the nodes which the conclusion owns a match\r\n                                (eg.: /\\.*false\\.*/ selects all the nodes with false anywhere in the conclusion).\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <u className=\"title\">Argument:</u> The argument can only be applied with the third option.\r\n                            <br />\r\n                            To search a match in the rule just insert the --r argument. The --c argument exists but the\r\n                            /select will by default search in the conclusion.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/unselect\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that unselect all the nodes.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /unselect.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/color\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that changes the color of the current selected\r\n                            nodes.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /color {'<option>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Options:</u>\r\n                            <div className=\"option\">1 - A valid hex color notation (eg.: #A7B).</div>\r\n                            <div className=\"option\">\r\n                                2 - A color name among: red🟥, orange🟧, yellow🟨, green🟩, blue🟦, purple🟪, brown🟫,\r\n                                black⬛ and white⬜.\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Prerequisites:</u> a group of nodes being selected.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/hide\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that try to fold (hide) a group of selected nodes.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /hide.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Prerequisites:</u> a group of nodes being selected.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/fold\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that fold all descendants of a specific node.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /fold {'<option>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Option:</u> a valid node id.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/unfold\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that unfold a specific pi node.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /unfold {'<option>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Option:</u> a valid pi node id.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n                <MenuItem text=\"/find\">\r\n                    <div className=\"cmd-desc\">\r\n                        <div>\r\n                            <u className=\"title\">Desc.:</u> Command that find a node and centralize the canvas at it.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Pattern:</u> /find {'<node number>'} {'<argument>'}.\r\n                        </div>\r\n                        <div>\r\n                            <u className=\"title\">Argument:</u> --s: find and select the node.\r\n                        </div>\r\n                    </div>\r\n                </MenuItem>\r\n            </Menu>\r\n        ),\r\n        examples: (\r\n            <Menu className=\"nav-menu\">\r\n                {Object.keys(examples).map((ex, id) => {\r\n                    return (\r\n                        <MenuItem\r\n                            key={id}\r\n                            text={`Example ${id + 1}`}\r\n                            onClick={(e) => runExample(e, ex, id)}\r\n                            onKeyDown={(e) => isPseudoClick(e) && runExample(null, ex, id)}\r\n                        />\r\n                    );\r\n                })}\r\n            </Menu>\r\n        ),\r\n    };\r\n\r\n    const tabIndex = inTutorial ? -1 : 0;\r\n\r\n    const criticalWidth = 1350;\r\n    return (\r\n        <Navbar>\r\n            <Navbar.Group align={Alignment.LEFT}>\r\n                <Navbar.Heading>\r\n                    <b id=\"proof-visualizer-name\">{windowSize.width >= criticalWidth ? 'Proof Visualizer' : 'PV'}</b>\r\n                </Navbar.Heading>\r\n                <Navbar.Divider />\r\n                <Button\r\n                    onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                        e.preventDefault();\r\n                        openDialog('upload-proof');\r\n                    }}\r\n                    id=\"upload-proof-bt\"\r\n                    className=\"bp3-minimal\"\r\n                    icon=\"upload\"\r\n                    text={windowSize.width >= criticalWidth ? 'Upload Proof' : ''}\r\n                    tabIndex={tabIndex}\r\n                />\r\n                <Popover2\r\n                    content={fileName ? menus.examples : undefined}\r\n                    placement=\"bottom-end\"\r\n                    modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                >\r\n                    <Button\r\n                        id=\"examples-bt\"\r\n                        className=\"bp3-minimal\"\r\n                        icon=\"manual\"\r\n                        text={windowSize.width >= criticalWidth ? 'Examples' : ''}\r\n                        tabIndex={tabIndex}\r\n                    />\r\n                </Popover2>\r\n                <Button\r\n                    id=\"input-smt-bt\"\r\n                    className=\"bp3-minimal\"\r\n                    icon=\"code\"\r\n                    text={windowSize.width >= criticalWidth ? 'SMT Input' : ''}\r\n                    onClick={() => setSmtDrawerIsOpen()}\r\n                    tabIndex={tabIndex}\r\n                />\r\n            </Navbar.Group>\r\n\r\n            <Navbar.Group align={Alignment.RIGHT}>\r\n                {fileName ? (\r\n                    <>\r\n                        <Navbar.Heading id=\"file-name-title\">{fileName}</Navbar.Heading>\r\n                        <Navbar.Divider />\r\n                        <Popover2\r\n                            autoFocus={false}\r\n                            enforceFocus={false}\r\n                            content={renderMatchableCmd()}\r\n                            isOpen={matchableCmdIsOpen}\r\n                            disabled={matchableCmd.length === 0}\r\n                            placement=\"bottom-end\"\r\n                            modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                        >\r\n                            <InputGroup\r\n                                id=\"command\"\r\n                                placeholder=\"/command\"\r\n                                value={command}\r\n                                onChange={(e) => {\r\n                                    setCommandId(0);\r\n                                    lastCommands[0] = e.target.value;\r\n                                    setLastCommands(lastCommands);\r\n                                    setCommand(e.target.value);\r\n                                    findMatchableCmd(e);\r\n                                }}\r\n                                onKeyDown={handleInputKeyDown}\r\n                                rightElement={\r\n                                    <Popover2\r\n                                        content={menus.help}\r\n                                        placement=\"bottom-end\"\r\n                                        modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                                    >\r\n                                        <Button\r\n                                            icon=\"help\"\r\n                                            className=\"bp3-minimal\"\r\n                                            onFocusCapture={(e) => inTutorial && e.target.blur()}\r\n                                            tabIndex={-1}\r\n                                        />\r\n                                    </Popover2>\r\n                                }\r\n                                autoComplete=\"off\"\r\n                                tabIndex={tabIndex}\r\n                            />\r\n                        </Popover2>\r\n                        <Button\r\n                            style={{ marginLeft: '5px' }}\r\n                            icon=\"play\"\r\n                            onClick={() => {\r\n                                runCommands(command);\r\n                                lastCommands.pop();\r\n                                lastCommands.unshift(command);\r\n                                lastCommands[0] = '';\r\n                                setLastCommands(lastCommands);\r\n                                setCommand('');\r\n                            }}\r\n                            onFocusCapture={(e) => inTutorial && e.target.blur()}\r\n                            tabIndex={-1}\r\n                        />\r\n                        <Navbar.Divider />\r\n                        <Popover2\r\n                            content={fileName ? menus.style : undefined}\r\n                            placement=\"bottom-end\"\r\n                            disabled={fileName ? false : true}\r\n                            modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                        >\r\n                            <Button\r\n                                id=\"style-bt\"\r\n                                icon=\"presentation\"\r\n                                className=\"bp3-minimal\"\r\n                                text={windowSize.width >= criticalWidth ? 'Style' : ''}\r\n                                disabled={fileName ? false : true}\r\n                                tabIndex={tabIndex}\r\n                            />\r\n                        </Popover2>\r\n                        <Button\r\n                            id=\"visualizers-bt\"\r\n                            className=\"bp3-minimal\"\r\n                            icon=\"applications\"\r\n                            text={windowSize.width >= criticalWidth ? 'Visualizers' : ''}\r\n                            disabled={fileName ? false : true}\r\n                            onClick={() => setDrawerIsOpen(true)}\r\n                            tabIndex={tabIndex}\r\n                        />\r\n                        <Popover2\r\n                            content={fileName ? menus.download : undefined}\r\n                            placement=\"bottom-end\"\r\n                            disabled={fileName ? false : true}\r\n                            modifiers={{ arrow: { enabled: isNotMozz } }}\r\n                        >\r\n                            <Button\r\n                                id=\"download-bt\"\r\n                                className=\"bp3-minimal\"\r\n                                icon=\"download\"\r\n                                text={windowSize.width >= criticalWidth ? 'Download' : ''}\r\n                                disabled={fileName ? false : true}\r\n                                tabIndex={tabIndex}\r\n                            />\r\n                        </Popover2>\r\n                        <Button\r\n                            className=\"bp3-minimal\"\r\n                            icon=\"learning\"\r\n                            text={windowSize.width >= criticalWidth ? 'Tutorial' : ''}\r\n                            disabled={fileName ? false : true}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.currentTarget.blur();\r\n                                setInTutorial(!inTutorial);\r\n                            }}\r\n                            tabIndex={tabIndex}\r\n                        />\r\n                        <Navbar.Divider />\r\n                    </>\r\n                ) : null}\r\n\r\n                <span id=\"switch-button-dark-theme\">\r\n                    <Switch\r\n                        checked={useAppSelector(selectTheme)}\r\n                        onChange={() => dispatch(toggle())}\r\n                        tabIndex={tabIndex}\r\n                    />\r\n                    <Icon icon={darkTheme ? 'moon' : 'flash'}></Icon>\r\n                </span>\r\n            </Navbar.Group>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state: ReduxState, ownProps: NavbarProps) {\r\n    return {\r\n        ...ownProps,\r\n        proof: selectProof(state),\r\n        dot: selectDot(state),\r\n        view: selectView(state),\r\n        visualInfo: selectVisualInfo(state),\r\n        hiddenNodes: selectHiddenNodes(state),\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = { hideNodes };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualizerNavbar);\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { MaybeElement } from '@blueprintjs/core/lib/esm/common/props';\r\nimport { IconName } from '@blueprintjs/core/lib/esm/components/icon/icon';\r\n\r\nimport { Button, Classes, Dialog, FileInput, Intent } from '@blueprintjs/core';\r\n\r\nimport '../../scss/VisualizerDialog.scss';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { set } from '../../store/features/file/fileSlice';\r\nimport { process } from '../../store/features/proof/proofSlice';\r\nimport { allowRenderNewFile, blockRender, reRender } from '../../store/features/externalCmd/externalCmd';\r\nimport { VisualizerDialogProps } from '../../interfaces/interfaces';\r\n\r\ninterface DialogProps {\r\n    icon: IconName | MaybeElement;\r\n    title: React.ReactNode;\r\n}\r\n\r\nconst readUploadedFileAsText = (inputFile: File) => {\r\n    const temporaryFileReader = new FileReader();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        temporaryFileReader.onerror = () => {\r\n            temporaryFileReader.abort();\r\n            reject(new DOMException('Problem parsing input file.'));\r\n        };\r\n\r\n        temporaryFileReader.onload = () => {\r\n            resolve(temporaryFileReader.result);\r\n        };\r\n        temporaryFileReader.readAsText(inputFile);\r\n    });\r\n};\r\n\r\nconst VisualizerDialog: React.FC<VisualizerDialogProps> = ({\r\n    dialogIsOpen,\r\n    setDialogIsOpen,\r\n    addErrorToast,\r\n}: VisualizerDialogProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [inputIsFocused, setInputIsFocused] = useState(false);\r\n    const [fileName, changeFileName] = useState('Choose file...');\r\n    const [file, changeFile] = useState('');\r\n    const [[focusFlag, flagCount], setFocusFlag] = useReducer(\r\n        (state: number[], newFlag: number): number[] => [newFlag, state[1] + 1],\r\n        [0, 0],\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (dialogIsOpen) setFocusFlag(1);\r\n    }, [dialogIsOpen]);\r\n\r\n    useEffect(() => {\r\n        let el;\r\n        switch (focusFlag) {\r\n            // Focus the file input\r\n            case 1:\r\n                el = document.getElementsByClassName(Classes.DIALOG_BODY + ' dialog-body');\r\n                (el[0].childNodes[0] as HTMLElement).focus();\r\n                break;\r\n            // Focus the upload button\r\n            case 2:\r\n                el = document.getElementsByClassName(Classes.DIALOG_FOOTER_ACTIONS);\r\n                (el[0].childNodes[0] as HTMLElement).focus();\r\n                break;\r\n        }\r\n    }, [flagCount]);\r\n\r\n    const closeDialog = () => {\r\n        setDialogIsOpen(false);\r\n        changeFileName('Choose file...');\r\n        changeFile('');\r\n    };\r\n\r\n    const dialogProps: DialogProps = { icon: 'upload', title: 'Upload Proof' };\r\n    const dialogBody = (\r\n        <FileInput\r\n            style={{\r\n                outline: inputIsFocused ? '2px  white solid' : '',\r\n                borderRadius: '3px',\r\n            }}\r\n            text={fileName}\r\n            hasSelection={fileName !== 'Choose file...'}\r\n            onInputChange={async (e) => {\r\n                const target = e.target as HTMLInputElement;\r\n                const file = target.files ? target.files[0] : new File([''], 'filename');\r\n                if (\r\n                    target.files &&\r\n                    target.files[0] &&\r\n                    target.files[0].name.split('.').slice(-1)[0] !== 'dot' &&\r\n                    target.files[0].name.split('.').slice(-1)[0] !== 'json'\r\n                ) {\r\n                    addErrorToast('Sorry! Our app only support DOT and JSON files.');\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    // Make sure the file was selected and none error of \"no\r\n                    //  file select\" will be prompted\r\n                    if (file) {\r\n                        const fileContents = await readUploadedFileAsText(file);\r\n                        changeFile(fileContents as string);\r\n                        changeFileName(file.name);\r\n\r\n                        // If succeded, set the focus of the page to the upload button\r\n                        setFocusFlag(2);\r\n                    }\r\n                } catch (er: any) {\r\n                    addErrorToast(er.message);\r\n                }\r\n            }}\r\n            fill={true}\r\n            onFocus={(e) => {\r\n                e.stopPropagation();\r\n                setInputIsFocused(true);\r\n            }}\r\n            onBlur={(e) => {\r\n                e.stopPropagation();\r\n                setInputIsFocused(false);\r\n            }}\r\n        />\r\n    );\r\n    const succesButton = (\r\n        <Button\r\n            onClick={() => {\r\n                dispatch(set({ name: fileName, value: file }));\r\n\r\n                dispatch(allowRenderNewFile());\r\n                const ext = fileName.split('.').pop();\r\n                if (ext === 'json') dispatch(blockRender());\r\n                else if (ext === 'dot') dispatch(reRender());\r\n\r\n                dispatch(process(file));\r\n                closeDialog();\r\n            }}\r\n            intent={Intent.SUCCESS}\r\n            disabled={fileName === 'Choose file...'}\r\n        >\r\n            Upload Proof\r\n        </Button>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                className={darkTheme ? ' bp3-dark' : ''}\r\n                isOpen={dialogIsOpen}\r\n                onClose={(): void => closeDialog()}\r\n                usePortal={true}\r\n                {...dialogProps}\r\n            >\r\n                <div className={Classes.DIALOG_BODY + ' dialog-body'}>{dialogBody}</div>\r\n                <div className={Classes.DIALOG_FOOTER}>\r\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>{succesButton}</div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VisualizerDialog;\r\n","import { KonvaEventObject } from 'konva/types/Node';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Label, Text, Tag, Group, Circle, Arrow } from 'react-konva';\r\nimport { NodeProps } from '../../../interfaces/interfaces';\r\n\r\nfunction getTextWidth(text: string, font: string): number {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    let size = 0;\r\n    if (context) {\r\n        context.font = font;\r\n        size = context.measureText(text).width;\r\n    }\r\n    return size;\r\n}\r\n\r\nfunction textColorFromBg(bgColor: string) {\r\n    const r = parseInt(bgColor.substring(0, 2), 16);\r\n    const g = parseInt(bgColor.substring(2, 4), 16);\r\n    const b = parseInt(bgColor.substring(4, 6), 16);\r\n    return r * 0.299 + g * 0.587 + b * 0.114 > 150 ? '#000000' : '#ffffff';\r\n}\r\n\r\nfunction sixDigitColor(bgColor: string): string {\r\n    if (bgColor.charAt(0) === '#') {\r\n        if (bgColor.length == 4) {\r\n            return bgColor\r\n                .substring(1, 7)\r\n                .split('')\r\n                .map((c) => c + c)\r\n                .join('');\r\n        } else if (bgColor.length == 7) {\r\n            return bgColor.substring(1, 7);\r\n        }\r\n    } else {\r\n        if (bgColor.length == 3) {\r\n            return bgColor\r\n                .split('')\r\n                .map((c) => c + c)\r\n                .join('');\r\n        } else if (bgColor.length == 6) {\r\n            return bgColor;\r\n        }\r\n    }\r\n    return '000000';\r\n}\r\n\r\nconst Node: React.FC<NodeProps> = (props: NodeProps): JSX.Element => {\r\n    const {\r\n        id,\r\n        conclusion,\r\n        rule,\r\n        args,\r\n        x,\r\n        y,\r\n        nHided,\r\n        nDescendants,\r\n        hiddenNodes,\r\n        dependencies,\r\n        selected,\r\n        color,\r\n        setNodeOnFocus,\r\n        toggleNodeSelection,\r\n        updateNodePosition,\r\n        openDrawer,\r\n        onDragEnd,\r\n        createTree,\r\n    } = props;\r\n\r\n    const handleClick = (e: KonvaEventObject<MouseEvent>): void => {\r\n        if (e.evt.button === 0) {\r\n            if (e.evt.shiftKey) {\r\n                toggleNodeSelection(id);\r\n            } else {\r\n                openDrawer(\r\n                    {\r\n                        rule: rule,\r\n                        args: args,\r\n                        conclusion: conclusion,\r\n                        nHided: nHided,\r\n                        nDescendants: nDescendants - (rule === 'π' ? 0 : 0),\r\n                        hiddenNodes: hiddenNodes,\r\n                        dependencies: dependencies,\r\n                    },\r\n                    createTree(id),\r\n                );\r\n            }\r\n        } else if (e.evt.button === 2) {\r\n            setNodeOnFocus(id);\r\n            const menuNode = document.getElementById('menu');\r\n            if (menuNode) {\r\n                menuNode.style.top = `${e.evt.clientY}px`;\r\n                menuNode.style.left = `${e.evt.clientX}px`;\r\n                menuNode.style.display = 'initial';\r\n                window.addEventListener('click', () => {\r\n                    menuNode.style.display = 'none';\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const depSize = 25,\r\n        depLineSize = 25;\r\n    const bgColor = color;\r\n\r\n    const style = {\r\n        tag: {\r\n            fill: bgColor,\r\n            stroke: selected ? 'red' : 'black',\r\n            strokeWidth: selected ? 3 : 1,\r\n        },\r\n        get dep() {\r\n            return { ...this.tag };\r\n        },\r\n        text: {\r\n            align: 'center',\r\n            fill: textColorFromBg(sixDigitColor(bgColor)),\r\n            fontSize: 15,\r\n            height: 35,\r\n            padding: 10,\r\n            width: 300,\r\n        },\r\n        get depText() {\r\n            return {\r\n                ...this.text,\r\n                padding: 0,\r\n                width: depSize * 2,\r\n            };\r\n        },\r\n    };\r\n    const infos = {\r\n        nHided: nHided ? `#hidden: ${nHided}` : '',\r\n        nDescendants: ` #descendants: ${nDescendants}`,\r\n        rule: nHided ? 'π' : rule,\r\n        dependencies: dependencies.length === 1 ? String(dependencies[0].piId) : 'π',\r\n    };\r\n\r\n    const [idSize, setIdSize] = useState(50);\r\n    const [descendantSize, setDescendantSize] = useState(style.text.width - 50);\r\n\r\n    // Component Did Mount\r\n    useEffect(() => {\r\n        const font = `${style.text.fontSize}px -apple-system, \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Open Sans\", \"Helvetica Neue\", \"Icons16\", sans-serif`;\r\n        const calc = getTextWidth(id.toString(), font) + style.text.padding * 3;\r\n        setIdSize(calc);\r\n        setDescendantSize(style.text.width - calc);\r\n    }, []);\r\n\r\n    return (\r\n        <Group\r\n            draggable\r\n            id={id.toString()}\r\n            key={id}\r\n            onDragMove={(e) => {\r\n                updateNodePosition(id, e.target.attrs.x, e.target.attrs.y);\r\n            }}\r\n            onDragEnd={onDragEnd}\r\n            x={x}\r\n            y={y}\r\n            onClick={handleClick}\r\n        >\r\n            <Label x={0} y={0}>\r\n                <Tag {...style.tag} />\r\n                <Text {...style.text} text={conclusion} />\r\n            </Label>\r\n            <Label x={0} y={35}>\r\n                <Tag {...style.tag} />\r\n                <Text {...style.text} text={infos.rule} />\r\n            </Label>\r\n            <Label x={0} y={70} {...{ align: 'right' }}>\r\n                <Tag {...style.tag} />\r\n                <Text {...{ ...style.text, width: idSize }} text={id.toString()} />\r\n            </Label>\r\n            <Label x={idSize} y={70}>\r\n                <Tag {...style.tag} />\r\n                <Text {...{ ...style.text, width: descendantSize }} text={infos.nHided + infos.nDescendants} />\r\n            </Label>\r\n            {dependencies.length ? (\r\n                <Label x={300} y={0}>\r\n                    <Arrow strokeWidth={1} stroke=\"black\" fill=\"black\" points={[depLineSize, 53, 0, 53]} />\r\n                    <Circle x={depLineSize + depSize} y={53} radius={depSize} {...style.dep}></Circle>\r\n                    <Label x={depLineSize} y={45}>\r\n                        <Text {...style.depText} text={infos.dependencies} />\r\n                    </Label>\r\n                </Label>\r\n            ) : null}\r\n        </Group>\r\n    );\r\n};\r\n\r\nexport default Node;\r\n","import React from 'react';\r\nimport { Arrow } from 'react-konva';\r\n\r\nimport { LineProps } from '../../../interfaces/interfaces';\r\n\r\nconst Line = ({ key, points }: LineProps): JSX.Element => {\r\n    return <Arrow key={key} strokeWidth={1} stroke=\"black\" fill=\"black\" points={[...points]} />;\r\n};\r\n\r\nexport default Line;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ControlGroup, Button, InputGroup } from '@blueprintjs/core';\r\nimport { colorConverter } from '../../../store/features/theme/auxi';\r\n\r\nconst Menu = ({\r\n    unfold,\r\n    foldSelectedNodes,\r\n    foldAllDescendants,\r\n    changeNodeColor,\r\n    currentColor,\r\n    options,\r\n}: {\r\n    unfold: () => void;\r\n    foldSelectedNodes: () => void;\r\n    foldAllDescendants: () => void;\r\n    changeNodeColor: (color: string) => void;\r\n    currentColor: string;\r\n    options: { unfold: boolean; foldSelected: boolean; foldAllDescendants: boolean };\r\n}): JSX.Element => {\r\n    const [color, setColor] = useState(currentColor);\r\n\r\n    useEffect(() => {\r\n        setColor(currentColor);\r\n    }, [currentColor]);\r\n\r\n    return (\r\n        <div className=\"bp3-popover2-content\">\r\n            <ul id=\"menu\" className=\"bp3-menu\">\r\n                {options.unfold ? (\r\n                    <li className=\"\">\r\n                        <a className=\"bp3-menu-item\" onClick={() => unfold()}>\r\n                            <div className=\"bp3-text-overflow-ellipsis bp3-fill bp3-icon-eye-open\">\r\n                                <span> Unfold</span>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                ) : null}\r\n                {options.foldSelected ? (\r\n                    <li className=\"\">\r\n                        <a className=\"bp3-menu-item\" onClick={() => foldSelectedNodes()}>\r\n                            <div className=\"bp3-text-overflow-ellipsis bp3-fill bp3-icon-eye-off\">\r\n                                <span> Fold selected nodes</span>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                ) : null}\r\n                {options.foldAllDescendants ? (\r\n                    <li className=\"\">\r\n                        <a className=\"bp3-menu-item\" onClick={() => foldAllDescendants()}>\r\n                            <div className=\"bp3-text-overflow-ellipsis bp3-fill bp3-icon-eye-off\">\r\n                                <span> Fold all descendants</span>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                ) : null}\r\n                <li className=\"\">\r\n                    <a className=\"bp3-menu-item\">\r\n                        <div className=\"bp3-text-overflow-ellipsis bp3-fill\">\r\n                            <span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('red'))}> 🟥</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('orange'))}> 🟧</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('yellow'))}> 🟨</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('green'))}> 🟩</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('blue'))}> 🟦</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('purple'))}> 🟪</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('brown'))}> 🟫</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('black'))}> ⬛</span>\r\n                                <span onClick={() => changeNodeColor(colorConverter('white'))}> ⬜</span>\r\n                            </span>\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"\">\r\n                    <a className=\"bp3-menu-item\">\r\n                        <div className=\"bp3-text-overflow-ellipsis bp3-fill\">\r\n                            <ControlGroup\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                }}\r\n                                fill={true}\r\n                                vertical={false}\r\n                            >\r\n                                <InputGroup\r\n                                    placeholder={currentColor}\r\n                                    value={color}\r\n                                    onChange={(e) => setColor(e.target.value)}\r\n                                />\r\n                                <Button\r\n                                    icon=\"style\"\r\n                                    onClick={() => {\r\n                                        changeNodeColor(color);\r\n                                        setColor('');\r\n                                    }}\r\n                                    disabled={color.match(/^#([0-9a-f]{3}){1,2}$/i) === null}\r\n                                ></Button>\r\n                            </ControlGroup>\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport { Stage, Layer } from 'react-konva';\r\nimport Konva from 'konva';\r\nimport dagre from 'dagre';\r\nimport Node from './VisualizerNode';\r\nimport Line from './VisualizerLine';\r\nimport Menu from './VisualizerMenu';\r\n\r\nimport {\r\n    NodeProps,\r\n    LineProps,\r\n    TreeNode,\r\n    CanvasPropsAndRedux,\r\n    NodeInterface,\r\n    ProofState,\r\n    ReduxState,\r\n} from '../../../interfaces/interfaces';\r\n\r\nimport '../../../scss/VisualizerCanvas.scss';\r\n\r\nimport { CanvasProps, CanvasState } from '../../../interfaces/interfaces';\r\nimport { connect } from 'react-redux';\r\nimport { selectProof, selectVisualInfo } from '../../../store/features/proof/proofSlice';\r\nimport {\r\n    hideNodes,\r\n    unhideNodes,\r\n    foldAllDescendants,\r\n    applyView,\r\n    setVisualInfo,\r\n} from '../../../store/features/proof/proofSlice';\r\nimport {\r\n    selectFindData,\r\n    findNode,\r\n    selectRenderData,\r\n    reRender,\r\n    addRenderCount,\r\n    blockRenderNewFile,\r\n} from '../../../store/features/externalCmd/externalCmd';\r\n\r\nconst nodeWidth = 300,\r\n    nodeHeight = 130;\r\n\r\nfunction handleWheel(e: Konva.KonvaEventObject<WheelEvent>): { stageScale: number; stageX: number; stageY: number } {\r\n    e.evt.preventDefault();\r\n\r\n    const scaleBy = 1.08;\r\n    const stage = e.target.getStage();\r\n    if (stage) {\r\n        const oldScale = stage.scaleX();\r\n        const pointerPosition = stage.getPointerPosition();\r\n        let x, y;\r\n\r\n        if (pointerPosition) {\r\n            [x, y] = [pointerPosition.x, pointerPosition.y];\r\n        } else {\r\n            [x, y] = [0, 0];\r\n        }\r\n\r\n        const mousePointTo = {\r\n            x: x / oldScale - stage.x() / oldScale,\r\n            y: y / oldScale - stage.y() / oldScale,\r\n        };\r\n\r\n        const newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n\r\n        return {\r\n            stageScale: newScale,\r\n            stageX: -(mousePointTo.x - x / newScale) * newScale,\r\n            stageY: -(mousePointTo.y - y / newScale) * newScale,\r\n        };\r\n    }\r\n    return {\r\n        stageScale: 1,\r\n        stageX: 0,\r\n        stageY: 0,\r\n    };\r\n}\r\n\r\nclass Canvas extends Component<CanvasPropsAndRedux, CanvasState> {\r\n    constructor(props: CanvasPropsAndRedux) {\r\n        super(props);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n        this.setNodeOnFocus = this.setNodeOnFocus.bind(this);\r\n\r\n        this.state = {\r\n            canvasSize: {\r\n                width: 520,\r\n                height: 300,\r\n            },\r\n            stage: {\r\n                stageScale: 1,\r\n                stageX: 0,\r\n                stageY: 0,\r\n            },\r\n            showingNodes: {},\r\n            showingEdges: {},\r\n            nodeOnFocus: NaN,\r\n            nodesSelected: [],\r\n            proof: [],\r\n            visualInfo: {},\r\n        };\r\n    }\r\n\r\n    static copyNodePosition = (\r\n        visualInfo: ProofState['visualInfo'],\r\n        showingNodes: CanvasState['showingNodes'],\r\n    ): ProofState['visualInfo'] => {\r\n        // Get the current position of the nodes and create a proofState with them included\r\n        const newVisualInfo: ProofState['visualInfo'] = {};\r\n        Object.keys(visualInfo).forEach((id) => {\r\n            const key = Number(id);\r\n\r\n            if (showingNodes[key]) {\r\n                newVisualInfo[key] = {\r\n                    ...visualInfo[key],\r\n                    x: showingNodes[key].props.x,\r\n                    y: showingNodes[key].props.y,\r\n                };\r\n            } else {\r\n                newVisualInfo[key] = {\r\n                    ...visualInfo[key],\r\n                };\r\n            }\r\n        });\r\n        return newVisualInfo;\r\n    };\r\n\r\n    static newNodeProps = (node: NodeInterface, visualInfos: ProofState['visualInfo']): NodeProps => {\r\n        const visualInfo = visualInfos[node.id];\r\n        return {\r\n            id: node.id,\r\n            conclusion: node.conclusion,\r\n            rule: node.rule,\r\n            args: node.args,\r\n            x: visualInfo.x,\r\n            y: visualInfo.y,\r\n            nHided: node.hiddenNodes ? node.hiddenNodes.length : 0,\r\n            nDescendants: node.descendants - 1,\r\n            hiddenNodes: node.hiddenNodes ? node.hiddenNodes.map((node) => node.id) : [],\r\n            dependencies: node.dependencies ? node.dependencies : [],\r\n            selected: visualInfo.selected,\r\n            color: visualInfo.color,\r\n            setNodeOnFocus: () => undefined,\r\n            toggleNodeSelection: () => undefined,\r\n            updateNodePosition: () => undefined,\r\n            openDrawer: () => undefined,\r\n            onDragEnd: () => undefined,\r\n            createTree: () => {\r\n                return [];\r\n            },\r\n        };\r\n    };\r\n\r\n    static getDerivedStateFromProps(props: CanvasPropsAndRedux, current_state: CanvasState) {\r\n        const proofChanged = JSON.stringify(current_state.proof) !== JSON.stringify(props.proof);\r\n        const visualInfoChanged = JSON.stringify(current_state.visualInfo) !== JSON.stringify(props.visualInfo);\r\n        const { nodeToFind, findOption } = props.nodeFindData;\r\n        const { count, fileChanged } = props.renderData;\r\n        const stage = current_state.stage;\r\n\r\n        // If there is a node to be found\r\n        if (nodeToFind > -1) {\r\n            // Is valid node\r\n            if (nodeToFind <= props.proof[props.proof.length - 1].id) {\r\n                // Change the stage position\r\n                const { x, y } = props.visualInfo[nodeToFind];\r\n                stage.stageX = current_state.canvasSize.width / 2 - (x + nodeWidth / 2) * stage.stageScale;\r\n                stage.stageY = current_state.canvasSize.height / 2 - (y + nodeHeight / 2) * stage.stageScale;\r\n\r\n                // Select the finded node\r\n                if (findOption) {\r\n                    props.setVisualInfo({\r\n                        ...props.visualInfo,\r\n                        [nodeToFind]: { ...props.visualInfo[nodeToFind], selected: true },\r\n                    });\r\n                }\r\n            }\r\n            // Reset the node finder\r\n            props.findNode({ nodeId: -1, option: false });\r\n        }\r\n\r\n        // If the proof or visual info changed or we have a new file being uploaded\r\n        if (proofChanged || visualInfoChanged || fileChanged) {\r\n            // Create the showing nodes array\r\n            const showingNodes: CanvasState['showingNodes'] = {};\r\n            props.proof.forEach((node, id) => {\r\n                showingNodes[node.id] = <Node key={id} {...Canvas.newNodeProps(node, props.visualInfo)} />;\r\n            });\r\n\r\n            // If has nodes and can render\r\n            if (showingNodes[0] && count < 2) {\r\n                props.addRenderCount();\r\n\r\n                const g = new dagre.graphlib.Graph();\r\n                g.setGraph({ rankdir: 'BT', ranker: 'tight-tree' });\r\n                g.setDefaultEdgeLabel(function () {\r\n                    return {};\r\n                });\r\n                props.proof.forEach((node) => {\r\n                    g.setNode(node.id.toString(), {\r\n                        width: nodeWidth + (node.dependencies.length ? 95 : 0),\r\n                        height: nodeHeight,\r\n                    });\r\n                    node.children.forEach((child) => {\r\n                        g.setEdge(child.toString(), node.id.toString());\r\n                    });\r\n                });\r\n                dagre.layout(g);\r\n\r\n                const xOffset = g.node('0').x - (showingNodes[0].props.x ? showingNodes[0].props.x : 0);\r\n                const yOffset = g.node('0').y - (showingNodes[0].props.y ? showingNodes[0].props.y : 0);\r\n                g.nodes().forEach((v) => {\r\n                    try {\r\n                        const { x, y } = g.node(v);\r\n                        const key = parseInt(v);\r\n                        showingNodes[key] = (\r\n                            <Node\r\n                                {...{\r\n                                    ...showingNodes[key].props,\r\n                                    x: x - xOffset,\r\n                                    y: y - yOffset,\r\n                                }}\r\n                            />\r\n                        );\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n                });\r\n\r\n                props.setVisualInfo(Canvas.copyNodePosition(props.visualInfo, showingNodes));\r\n            }\r\n            // Reset the new file indicator if it's true\r\n            if (fileChanged) props.blockRenderNewFile();\r\n\r\n            return {\r\n                showingNodes: showingNodes,\r\n                showingEdges: {},\r\n                proof: props.proof,\r\n                visualInfo: props.visualInfo,\r\n                stage: stage,\r\n            };\r\n        }\r\n        return { stage: stage };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { showingNodes } = this.state;\r\n        const { proof, visualInfo } = this.props;\r\n\r\n        const newShowingNodes: CanvasState['showingNodes'] = {};\r\n        proof.forEach((node, id) => {\r\n            newShowingNodes[node.id] = <Node key={id} {...Canvas.newNodeProps(node, visualInfo)} />;\r\n        });\r\n\r\n        this.setState({ proof: proof, showingNodes: newShowingNodes });\r\n\r\n        if (showingNodes[0]) {\r\n            const [width, height] = [window.innerWidth, window.innerHeight - 50];\r\n\r\n            // Make sure every time the Canvas is mounted the props are passed to the showing nodes\r\n            this.updateEdgesAndFuncs();\r\n\r\n            this.setState({\r\n                canvasSize: {\r\n                    width,\r\n                    height,\r\n                },\r\n                stage: {\r\n                    stageScale: 1,\r\n                    stageX: width / 2 - (showingNodes[0].props.x + 300 / 2),\r\n                    stageY: height / 10 - (showingNodes[0].props.y + 30 / 2),\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: CanvasPropsAndRedux) {\r\n        // If the proof changed\r\n        if (prevProps.proof !== this.props.proof) {\r\n            this.updateEdgesAndFuncs();\r\n        }\r\n    }\r\n\r\n    updateEdgesAndFuncs() {\r\n        const { showingNodes, showingEdges } = this.state;\r\n        const { proof } = this.props;\r\n\r\n        // Update edges\r\n        proof.forEach((node) => {\r\n            if (showingNodes[node.parents[0]]) {\r\n                node.parents.forEach((parent) => {\r\n                    showingEdges[`${node.id}->${parent}`] = Line(\r\n                        this.LineProps(\r\n                            `${node.id}->${parent}`,\r\n                            showingNodes[node.id].props,\r\n                            showingNodes[parent].props,\r\n                        ),\r\n                    );\r\n                });\r\n            }\r\n        });\r\n        Object.keys(showingNodes).forEach((nodeId: string) => {\r\n            // Make sure a function is updated once\r\n            if (!showingNodes[parseInt(nodeId)].props.setNodeOnFocus.length) {\r\n                const { openDrawer } = this.props;\r\n\r\n                // Set the node functions\r\n                showingNodes[parseInt(nodeId)] = (\r\n                    <Node\r\n                        {...{\r\n                            ...showingNodes[parseInt(nodeId)].props,\r\n                            setNodeOnFocus: this.setNodeOnFocus,\r\n                            toggleNodeSelection: this.toggleNodeSelection,\r\n                            updateNodePosition: this.updateNodePosition,\r\n                            openDrawer: openDrawer,\r\n                            onDragEnd: this.saveNodePosition,\r\n                            createTree: this.createTree,\r\n                        }}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        this.setState({ showingEdges, showingNodes });\r\n    }\r\n\r\n    /* NODE MENU ACTIONS */\r\n    foldAllDescendants = (): void => {\r\n        const { nodeOnFocus } = this.state;\r\n        const { foldAllDescendants, reRender } = this.props;\r\n\r\n        reRender();\r\n        foldAllDescendants(nodeOnFocus);\r\n        this.setState({ nodesSelected: [] });\r\n    };\r\n\r\n    foldSelectedNodes = (): void => {\r\n        const { nodesSelected } = this.state;\r\n        const { hideNodes, reRender } = this.props;\r\n\r\n        reRender();\r\n        hideNodes(nodesSelected);\r\n        this.setState({ nodesSelected: [] });\r\n    };\r\n\r\n    unfold = (): void => {\r\n        const { nodeOnFocus, proof } = this.state;\r\n        const { unhideNodes, reRender } = this.props;\r\n\r\n        // Get the pi node (to be unfold)\r\n        const obj = proof.find((node) => node.id === nodeOnFocus);\r\n        // Get the hidden nodes and their ids\r\n        const hiddenNodes = obj ? (obj.hiddenNodes ? obj.hiddenNodes : []) : [];\r\n        const hiddenIds = hiddenNodes ? hiddenNodes.map((node) => node.id) : [];\r\n\r\n        reRender();\r\n        unhideNodes({ pi: nodeOnFocus, hiddens: hiddenIds });\r\n\r\n        this.setState({ nodesSelected: [] });\r\n    };\r\n\r\n    changeNodeColor = (color: string): void => {\r\n        const { showingNodes, nodesSelected, nodeOnFocus } = this.state;\r\n        const { setVisualInfo } = this.props;\r\n        let { visualInfo } = this.props;\r\n\r\n        // Save the current position\r\n        nodesSelected.forEach((nodeId) => {\r\n            visualInfo = {\r\n                ...visualInfo,\r\n                [nodeId]: {\r\n                    ...visualInfo[nodeId],\r\n                    color: color,\r\n                    selected: false,\r\n                },\r\n            };\r\n        });\r\n        if (!nodesSelected.length && showingNodes[nodeOnFocus]) {\r\n            visualInfo = {\r\n                ...visualInfo,\r\n                [nodeOnFocus]: { ...visualInfo[nodeOnFocus], color: color, selected: false },\r\n            };\r\n        }\r\n\r\n        setVisualInfo(visualInfo);\r\n        this.setState({ nodesSelected: [] });\r\n    };\r\n\r\n    toggleNodeSelection = (id: number): void => {\r\n        let { nodesSelected } = this.state;\r\n        const { visualInfo, setVisualInfo } = this.props;\r\n\r\n        if (visualInfo[id].selected) {\r\n            nodesSelected = nodesSelected.filter((nodeId) => nodeId !== id);\r\n        } else {\r\n            nodesSelected.push(id);\r\n        }\r\n\r\n        // Save the current position\r\n        setVisualInfo({\r\n            ...visualInfo,\r\n            [id]: {\r\n                ...visualInfo[id],\r\n                selected: !visualInfo[id].selected,\r\n            },\r\n        });\r\n\r\n        this.setState({ nodesSelected });\r\n    };\r\n\r\n    /*TREE*/\r\n    createTree = (id: number): TreeNode[] => {\r\n        return this.props.createTree(this.state.proof, id);\r\n    };\r\n\r\n    /* UTILS */\r\n    setNodeOnFocus = (id: number): void => {\r\n        this.setState({ nodeOnFocus: id });\r\n    };\r\n\r\n    LineProps = (key: string, from: NodeProps, to: NodeProps): LineProps => ({\r\n        key,\r\n        points: [from.x + 150, from.y, to.x + 150, to.y + 105],\r\n    });\r\n\r\n    saveNodePosition = (): void => {\r\n        const { visualInfo, setVisualInfo } = this.props;\r\n        const { showingNodes } = this.state;\r\n\r\n        // Get the current position of the nodes and create a proofState with them included\r\n        setVisualInfo(Canvas.copyNodePosition(visualInfo, showingNodes));\r\n    };\r\n\r\n    updateNodePosition = (key: number, x: number, y: number): void => {\r\n        const { showingNodes, showingEdges } = this.state;\r\n\r\n        showingNodes[key] = <Node {...{ ...showingNodes[key].props, x, y }} />;\r\n\r\n        Object.keys(showingEdges)\r\n            .filter((edgeKey) => edgeKey.indexOf(key.toString()) !== -1)\r\n            .forEach((edge) => {\r\n                const [from, to] = edge.split('->').map((x) => parseInt(x));\r\n                showingEdges[edge] = Line(this.LineProps(edge, showingNodes[from].props, showingNodes[to].props));\r\n            });\r\n        this.setState({ showingNodes, showingEdges });\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const { canvasSize, stage, showingNodes, showingEdges, nodesSelected, nodeOnFocus, proof } = this.state;\r\n        const color = showingNodes[nodeOnFocus] ? showingNodes[nodeOnFocus].props.color : '';\r\n        const found = proof.find((o) => o.id === nodeOnFocus);\r\n\r\n        return (\r\n            <div>\r\n                <Menu\r\n                    unfold={this.unfold}\r\n                    foldSelectedNodes={this.foldSelectedNodes}\r\n                    foldAllDescendants={this.foldAllDescendants}\r\n                    changeNodeColor={this.changeNodeColor}\r\n                    options={{\r\n                        unfold: showingNodes[nodeOnFocus] ? Boolean(showingNodes[nodeOnFocus].props.nHided) : false,\r\n                        foldSelected: nodesSelected.length && nodesSelected.includes(nodeOnFocus) ? true : false,\r\n                        foldAllDescendants:\r\n                            Boolean(found?.children.length) && !Boolean(found?.hiddenNodes?.length) && found?.id != 0,\r\n                    }}\r\n                    currentColor={color}\r\n                ></Menu>\r\n                <Stage\r\n                    draggable\r\n                    onDragMove={() => null}\r\n                    onDragEnd={() => null}\r\n                    width={canvasSize.width}\r\n                    height={canvasSize.height}\r\n                    onWheel={(e) => this.setState({ stage: handleWheel(e) })}\r\n                    scaleX={stage.stageScale}\r\n                    scaleY={stage.stageScale}\r\n                    x={stage.stageX}\r\n                    y={stage.stageY}\r\n                    onContextMenu={(e) => e.evt.preventDefault()}\r\n                >\r\n                    <Layer>\r\n                        {Object.keys(showingEdges).length > 0 &&\r\n                            Object.keys(showingEdges).map(function (key) {\r\n                                return showingEdges[key];\r\n                            })}\r\n                        {Object.keys(showingNodes).length > 0 &&\r\n                            Object.keys(showingNodes).map(\r\n                                (value: string): JSX.Element => showingNodes[parseInt(value)],\r\n                            )}\r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: ReduxState, ownProps: CanvasProps) {\r\n    return {\r\n        visualInfo: selectVisualInfo(state),\r\n        nodeFindData: selectFindData(state),\r\n        renderData: selectRenderData(state),\r\n        ...ownProps,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideNodes,\r\n    unhideNodes,\r\n    foldAllDescendants,\r\n    applyView,\r\n    setVisualInfo,\r\n    findNode,\r\n    reRender,\r\n    addRenderCount,\r\n    blockRenderNewFile,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { useEffect, useReducer, useState } from 'react';\r\n\r\nimport { Classes, Tree, TreeNodeInfo } from '@blueprintjs/core';\r\nimport { TreeProps } from '../../interfaces/interfaces';\r\nimport { castProofNodeToTreeNode } from '../VisualizerStage/VisualizerStage';\r\n\r\nconst VisualizerTree: React.FC<TreeProps> = ({ darkTheme, proof, positionMap, content, setNodeInfo }: TreeProps) => {\r\n    // STATES:\r\n    const [, forceUpdate] = useReducer((x) => x + 1, 0);\r\n    const [nodes, setNodes] = useState(content);\r\n    const [selected, setSelected] = useState(NaN);\r\n\r\n    // USE EFFECT:\r\n    useEffect(() => setNodes(content), [content]);\r\n\r\n    // UTILS:\r\n    const forEachNode = (nodes: TreeNodeInfo[], callback: (node: TreeNodeInfo) => void) => {\r\n        if (nodes == null) {\r\n            return;\r\n        }\r\n\r\n        for (const node of nodes) {\r\n            callback(node);\r\n            forEachNode(node.childNodes ? node.childNodes : [], callback);\r\n        }\r\n    };\r\n\r\n    const handleNodeClick = (nodeData: any, _nodePath: number[], e: React.MouseEvent<HTMLElement>) => {\r\n        const toBeShow: any = selected !== nodeData.id ? nodeData : nodes[0];\r\n        setNodeInfo({\r\n            rule: toBeShow.rule ? toBeShow.rule : '',\r\n            args: toBeShow.args ? toBeShow.args : '',\r\n            conclusion: toBeShow.conclusion ? toBeShow.conclusion : '',\r\n            nHided: toBeShow.nHided ? toBeShow.nHided : 0,\r\n            nDescendants: toBeShow.descendants,\r\n            hiddenNodes: toBeShow.hiddenNodes,\r\n            dependencies: toBeShow.dependencies,\r\n        });\r\n        const originallySelected = nodeData.isSelected;\r\n\r\n        // Set all the nodes to be not selected\r\n        if (!e.shiftKey) forEachNode(nodes, (n) => (n.isSelected = false));\r\n\r\n        nodeData.isSelected = originallySelected == null ? true : !originallySelected;\r\n        setSelected(selected === nodeData.id ? NaN : nodeData.id);\r\n    };\r\n\r\n    const handleNodeCollapse = (nodeData: TreeNodeInfo) => {\r\n        nodeData.isExpanded = false;\r\n        forceUpdate();\r\n    };\r\n\r\n    const handleNodeExpand = (nodeData: TreeNodeInfo) => {\r\n        nodeData.isExpanded = true;\r\n        if (nodeData.hasCaret && !nodeData.childNodes?.length) {\r\n            const currentNode = proof[positionMap[nodeData.id]];\r\n            currentNode.children.forEach((c) => {\r\n                const child = proof[positionMap[c]];\r\n                nodeData.childNodes?.push(castProofNodeToTreeNode(child));\r\n            });\r\n        }\r\n        forceUpdate();\r\n    };\r\n\r\n    return (\r\n        <div style={{ backgroundColor: darkTheme ? '#394b59' : 'white' }}>\r\n            <Tree\r\n                contents={nodes}\r\n                onNodeClick={handleNodeClick}\r\n                onNodeCollapse={handleNodeCollapse}\r\n                onNodeExpand={handleNodeExpand}\r\n                className={Classes.ELEVATION_0}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerTree;\r\n","interface Line {\r\n    value: string;\r\n    indentLevel: number;\r\n}\r\n\r\nclass Let {\r\n    name: string;\r\n    value: string;\r\n    lines: Line[];\r\n    biggerID: number;\r\n    isExpanded: boolean;\r\n    externalLets: { [key: string]: { let: Let; idx: number[] } };\r\n\r\n    constructor(name: string, letText: string, letsList: { [key: string]: Let }, indices: { [key: number]: string }) {\r\n        this.name = name;\r\n        this.value = letText;\r\n        this.lines = [{ value: letText, indentLevel: 0 }];\r\n        this.biggerID = 0;\r\n        this.isExpanded = false;\r\n\r\n        this.externalLets = {};\r\n        Object.keys(indices).forEach((key) => {\r\n            const numKey = Number(key);\r\n            const letName = indices[numKey];\r\n            this.externalLets[letName] = {\r\n                let: letsList[letName],\r\n                idx: this.externalLets[letName] ? [...this.externalLets[letName].idx, numKey] : [numKey],\r\n            };\r\n        });\r\n    }\r\n\r\n    getTextWidth = (text: string, font: string): number => {\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        let size = 0;\r\n        if (context) {\r\n            context.font = font;\r\n            size = context.measureText(text).width;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    expandValue = (shouldUpdate = false): string => {\r\n        const keyList = Object.keys(this.externalLets).map((key) => this.externalLets[key].let.name);\r\n        let letText = this.value;\r\n\r\n        // Iterate from the last to the first external let\r\n        for (let i = keyList.length - 1; i >= 0; i--) {\r\n            const letName = keyList[i];\r\n\r\n            // For each let, iterate through all the indexes they show up inside the string\r\n            for (let k = this.externalLets[letName].idx.length - 1; k >= 0; k--) {\r\n                const idx = this.externalLets[letName].idx[k];\r\n\r\n                // Expand all the terms\r\n                letText =\r\n                    letText.substring(0, idx) +\r\n                    this.externalLets[letName].let.expandValue() +\r\n                    letText.substring(idx + letName.length, letText.length);\r\n            }\r\n        }\r\n        if (shouldUpdate) {\r\n            this.lines = [{ value: letText, indentLevel: 0 }];\r\n            this.biggerID = 0;\r\n        }\r\n        return letText;\r\n    };\r\n\r\n    expandPartialy = (externalRef: Let, letIdx: number): string => {\r\n        const key = externalRef.name;\r\n        const indentedText = this.printLines();\r\n\r\n        let lastLine = 0,\r\n            count = 0,\r\n            i;\r\n        // Iterates through the first lines until the point we reach the changed line\r\n        for (i = 0; i < this.lines.length; i++) {\r\n            lastLine = this.lines[i].value.length + 4 * this.lines[i].indentLevel + 1;\r\n            count += lastLine;\r\n            if (letIdx < count) break;\r\n        }\r\n        // New index (points to the start of the line content (ignores initial indent white space))\r\n        const newIdx = letIdx - (count - lastLine + 4 * this.lines[i].indentLevel);\r\n\r\n        // Update the new line to the new content\r\n        this.lines[i].value =\r\n            this.lines[i].value.substring(0, newIdx) +\r\n            externalRef.value +\r\n            this.lines[i].value.substring(newIdx + key.length, this.lines[i].value.length);\r\n\r\n        // Returns the indented text with the content to be replaced\r\n        return (\r\n            indentedText.substring(0, letIdx) +\r\n            externalRef.value +\r\n            indentedText.substring(letIdx + key.length, indentedText.length)\r\n        );\r\n    };\r\n\r\n    shrinkValue = (): string => {\r\n        this.lines = [{ value: this.value, indentLevel: 0 }];\r\n        this.biggerID = 0;\r\n        return this.value;\r\n    };\r\n\r\n    fitsTheWindow = (windowSize: number, font: string): boolean => {\r\n        const line = this.lines[this.biggerID];\r\n        const size = this.getTextWidth(`${'    '.repeat(line.indentLevel)}${line.value}`, font);\r\n        return size < windowSize;\r\n    };\r\n\r\n    indent = (windowSize: number, mode: boolean, font: string): string => {\r\n        let someDoesntFit;\r\n        if (mode) someDoesntFit = true;\r\n        else someDoesntFit = this.getTextWidth(this.lines[this.biggerID].value, font) < windowSize ? false : true;\r\n\r\n        // While there are lines that doesn't fit the window size\r\n        while (someDoesntFit) {\r\n            const { lines, biggerID } = this;\r\n            const newLines: Line[] = [];\r\n            const thisLevel = lines[biggerID].indentLevel;\r\n            const thisLine = lines[biggerID].value;\r\n\r\n            let lastSpace = -1,\r\n                lastUsedSpace = -1,\r\n                lastOpenParenthesis = -1,\r\n                indent = lines[biggerID].indentLevel - 1,\r\n                biggestSize = 0,\r\n                newBiggerID = 0;\r\n\r\n            // Iterate through the line and calculate the indentation levels\r\n            for (let i = 0; i < thisLine.length; i++) {\r\n                const c = thisLine[i];\r\n                // Opening parenthesis\r\n                if (c === '(') {\r\n                    indent++;\r\n                    // If it's one of the arguments of the operation\r\n                    if (indent === thisLevel + 1) lastOpenParenthesis = i;\r\n                }\r\n                // Closing parenthesis\r\n                else if (c === ')') {\r\n                    // If it's the end of this line\r\n                    if (indent === thisLevel) {\r\n                        // If the last argument was not inserted\r\n                        if (thisLine[i - 1] !== ')') {\r\n                            newLines.push({\r\n                                value: thisLine.substring(lastSpace + 1, i),\r\n                                indentLevel: indent + 1,\r\n                            });\r\n                        }\r\n                        newLines.push({ value: ')', indentLevel: indent });\r\n                    }\r\n                    // If it's the end of this argument\r\n                    else if (indent === thisLevel + 1) {\r\n                        newLines.push({\r\n                            value: thisLine.substring(lastOpenParenthesis, i + 1),\r\n                            indentLevel: indent,\r\n                        });\r\n                    }\r\n                    indent--;\r\n                }\r\n                // If a new space is detected in the current identation level\r\n                //   and the last argument is not between parenthesis\r\n                else if (c === ' ') {\r\n                    lastSpace = i;\r\n\r\n                    if (indent === thisLevel) {\r\n                        if (thisLine[i - 1] !== ')') {\r\n                            newLines.push({\r\n                                value: thisLine.substring(lastUsedSpace + 1, i),\r\n                                indentLevel: newLines.length ? indent + 1 : indent,\r\n                            });\r\n                        }\r\n                        lastUsedSpace = i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Insert new lines if happend some indentation\r\n            if (newLines.length > 0) this.lines.splice(biggerID, 1, ...newLines);\r\n\r\n            // Find the new biggest line\r\n            this.lines.forEach((line, id) => {\r\n                // Get the size of this new line\r\n                const thisSize = this.getTextWidth(`${'    '.repeat(line.indentLevel)}${line.value}`, font);\r\n                if (thisSize > biggestSize) {\r\n                    biggestSize = thisSize;\r\n                    newBiggerID = id;\r\n                }\r\n            });\r\n\r\n            this.biggerID = newBiggerID;\r\n\r\n            // If the biggest size fits the window or no new line was found (minimal indentation)\r\n            if (biggestSize < windowSize || newLines.length < 1) someDoesntFit = false;\r\n        }\r\n        return this.printLines();\r\n    };\r\n\r\n    groupUp = (): string => {\r\n        let original = '';\r\n        // Group up all the lines into one single string\r\n        this.lines.forEach((line, id, self) => {\r\n            original += line.value;\r\n            if (id < self.length - 1 && self[id + 1].value !== ')') {\r\n                original += ' ';\r\n            }\r\n        });\r\n        return original;\r\n    };\r\n\r\n    printLines = (): string => {\r\n        return this.lines.reduce((ac, line) => (ac += `${'    '.repeat(line.indentLevel)}${line.value}\\n`), '');\r\n    };\r\n}\r\n\r\nexport default Let;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { LetRenderProps } from '../../interfaces/interfaces';\r\nimport { renderLetKind } from '../../interfaces/enum';\r\nimport Let from './let';\r\nimport { Pre } from '@blueprintjs/core';\r\n\r\nconst font = '13px monospace';\r\n\r\nconst LetRender: React.FC<LetRenderProps> = ({\r\n    id,\r\n    toRender,\r\n    letMap,\r\n    shouldExpand,\r\n    shouldRevert,\r\n    dispatchExpansion,\r\n}: LetRenderProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const widthRef = useRef(0);\r\n    const [resizeMode, setResizeMode] = useState(0);\r\n    const [letMapS, setLetMapS] = useState(\r\n        (() => {\r\n            const newMap = { ...letMap };\r\n            if (toRender[0] !== '(' && toRender[toRender.length] !== ')') {\r\n                toRender = `(${toRender})`;\r\n            }\r\n            newMap['this'] = toRender;\r\n            return newMap;\r\n        })(),\r\n    );\r\n\r\n    const initializeLet = (key = 'this', lets: { [key: string]: Let } = {}) => {\r\n        const currentLet = letMapS[key];\r\n        const indices: { [key: number]: string } = {};\r\n\r\n        // Finds all occurences of let in the currentLet\r\n        [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n            if (match.index) indices[match.index] = match[0];\r\n        });\r\n\r\n        // Call recursive for all the external lets\r\n        Object.keys(indices).forEach((indice) => {\r\n            initializeLet(indices[Number(indice)], lets);\r\n        });\r\n\r\n        // If this let was not created yet\r\n        if (Object.keys(lets).indexOf(key) === -1) {\r\n            lets[key] = new Let(key, currentLet, lets, indices);\r\n        }\r\n\r\n        return lets;\r\n    };\r\n    const letsRef = useRef<{ [key: string]: Let }>(initializeLet());\r\n\r\n    // ComponentDidMount\r\n    useEffect(() => {\r\n        // Handler to call on window resize and set the value column width\r\n        function handleResize() {\r\n            const width = widthRef.current;\r\n\r\n            const newWidth = document.getElementsByClassName(`let-render-${id}`)[0].clientWidth - 30;\r\n            width === newWidth ? setResizeMode(1) : width > newWidth ? setResizeMode(0) : setResizeMode(2);\r\n\r\n            widthRef.current = newWidth;\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Expand\r\n        if (shouldExpand) {\r\n            expandAll('this');\r\n            dispatchExpansion({ type: renderLetKind.EXPAND, payload: false });\r\n        }\r\n        // Revert\r\n        else if (shouldRevert) {\r\n            revertLet('this');\r\n            dispatchExpansion({ type: renderLetKind.REVERT, payload: false });\r\n        }\r\n    }, [shouldExpand, shouldRevert]);\r\n\r\n    const expandLet = (parent: string, key: string, letIdx: number) => {\r\n        const lets = letsRef.current;\r\n\r\n        const externalRef = lets[key];\r\n        lets[parent].isExpanded = true;\r\n        letMapS[parent] = lets[parent].expandPartialy(externalRef, letIdx);\r\n        setLetMapS({ ...letMapS });\r\n    };\r\n\r\n    const expandAll = (key: string) => {\r\n        const lets = letsRef.current;\r\n\r\n        lets[key].isExpanded = true;\r\n        letMapS[key] = lets[key].expandValue(true);\r\n        setLetMapS({ ...letMapS });\r\n    };\r\n\r\n    const revertLet = (key: string) => {\r\n        const lets = letsRef.current;\r\n\r\n        // Only when is expanded\r\n        if (lets[key].isExpanded) {\r\n            lets[key].isExpanded = false;\r\n            letMapS[key] = lets[key].shrinkValue();\r\n            setLetMapS({ ...letMapS });\r\n        }\r\n    };\r\n\r\n    const renderLet = (): JSX.Element => {\r\n        const lets = letsRef.current;\r\n        const width = widthRef.current;\r\n        const key = 'this';\r\n\r\n        // Waits for the width to be updated and the DOM element to be updated\r\n        if (width) {\r\n            let currentLet = letMapS[key];\r\n            let indices: { [key: number]: string } = {};\r\n\r\n            // Finds all occurences of let in the currentLet\r\n            [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index !== undefined) indices[match.index] = match[0];\r\n            });\r\n\r\n            // If doesn't fits, then indent\r\n            if (!lets[key].fitsTheWindow(width, font)) {\r\n                currentLet = lets[key].indent(width, true, font);\r\n                letMapS[key] = currentLet;\r\n\r\n                indices = {};\r\n                // Finds all occurences of let in the currentLet after indentation\r\n                [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                    if (match.index) indices[match.index] = match[0];\r\n                });\r\n            }\r\n            // If fits\r\n            else {\r\n                // Only in the momment the page size is growing and the line is broken\r\n                if (resizeMode >= 0 && lets[key].lines.length > 1) {\r\n                    // Reset the line\r\n                    lets[key].lines = [\r\n                        { value: lets[key].isExpanded ? lets[key].groupUp() : lets[key].value, indentLevel: 0 },\r\n                    ];\r\n                    lets[key].biggerID = 0;\r\n\r\n                    // Indent it again\r\n                    currentLet = lets[key].indent(width, false, font);\r\n                    letMapS[key] = currentLet;\r\n\r\n                    indices = {};\r\n                    // Finds all occurences of let in the currentLet after indentation\r\n                    [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                        if (match.index) indices[match.index] = match[0];\r\n                    });\r\n                }\r\n            }\r\n\r\n            const arr: (JSX.Element | string)[] = [];\r\n            let start = 0;\r\n\r\n            // Slice the currentLet into an array with strings and JSX elements\r\n            Object.keys(indices).forEach((index, i, self) => {\r\n                const idx = Number(index);\r\n                const thisLet = indices[idx];\r\n\r\n                // Add the elements to the arr\r\n                arr.push(currentLet.substring(start, idx));\r\n                arr.push(\r\n                    <a\r\n                        className={darkTheme ? 'let-literal-or' : 'let-literal'}\r\n                        onClick={() => {\r\n                            expandLet(key, thisLet, idx);\r\n                        }}\r\n                    >\r\n                        {thisLet}\r\n                    </a>,\r\n                );\r\n                // Defines a new start\r\n                start = idx + thisLet.length;\r\n\r\n                // If it's the last let\r\n                if (i === self.length - 1) {\r\n                    arr.push(currentLet.substring(start, currentLet.length));\r\n                }\r\n            });\r\n\r\n            // If there is a let in this current let\r\n            if (Object.keys(indices).length) {\r\n                return (\r\n                    <span className=\"let-instance\" style={{ overflowWrap: 'break-word' }}>\r\n                        {arr}\r\n                    </span>\r\n                );\r\n            } else {\r\n                return (\r\n                    <span className=\"let-instance\" style={{ overflowWrap: 'break-word' }}>\r\n                        {currentLet}\r\n                    </span>\r\n                );\r\n            }\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    return (\r\n        <Pre\r\n            className={`let-render-${id}`}\r\n            style={{ maxHeight: '300px', overflow: 'auto', margin: '0', whiteSpace: 'pre-wrap' }}\r\n        >\r\n            {renderLet()}\r\n        </Pre>\r\n    );\r\n};\r\n\r\nexport default LetRender;\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\n\r\nimport { Icon, Collapse, Pre } from '@blueprintjs/core';\r\n\r\nimport '../../../scss/VisualizerDirectoryStyle.scss';\r\nimport { useAppSelector } from '../../../store/hooks';\r\nimport { selectTheme } from '../../../store/features/theme/themeSlice';\r\nimport { NodeInfo, DirectoryStyleProps } from '../../../interfaces/interfaces';\r\nimport { drawerHelpersKind, renderLetKind } from '../../../interfaces/enum';\r\nimport VisualizerTree from '../../VisualizerTree/VisualizerTree';\r\nimport { selectLetMap, selectOriginalProof } from '../../../store/features/proof/proofSlice';\r\nimport LetRender from '../../VisualizerLetDrawer/LetRender';\r\n\r\nconst VisualizerDirectoryStyle: React.FC<DirectoryStyleProps> = ({\r\n    proofTree,\r\n    ruleHelper,\r\n    indent,\r\n    translate,\r\n}: DirectoryStyleProps) => {\r\n    const letMap = useAppSelector(selectLetMap);\r\n    const proof = useAppSelector(selectOriginalProof);\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const [nodeInfo, setNodeInfo] = useState<NodeInfo>({\r\n        rule: '',\r\n        args: '',\r\n        conclusion: '',\r\n        nHided: 0,\r\n        nDescendants: 0,\r\n        hiddenNodes: [],\r\n        dependencies: [],\r\n    });\r\n    const [[ruleHelperIsOpen, argsHelperIsOpen, concHelperIsOpen], dispatchHelper] = useReducer(\r\n        (state: boolean[], action: { type: drawerHelpersKind; payload: boolean }): boolean[] => {\r\n            const { type, payload } = action;\r\n\r\n            // Act over all the positions\r\n            if (type === drawerHelpersKind.ALL) {\r\n                for (let i = 0; i < state.length; i++) {\r\n                    state[i] = payload;\r\n                }\r\n            }\r\n            // If wanna set a position\r\n            else if (payload) {\r\n                // Reset everything and set the wanted\r\n                for (let i = 0; i < state.length; i++) {\r\n                    state[i] = i === type ? payload : false;\r\n                }\r\n            }\r\n            // If wanna only reset a position\r\n            else state[type] = payload;\r\n\r\n            return [...state];\r\n        },\r\n        // Rule, args, conclusion\r\n        [false, false, false],\r\n    );\r\n    const [[expandAll, revertAll], dispatchLetExpansion] = useReducer(\r\n        (state: boolean[], action: { type: renderLetKind; payload: boolean }): boolean[] => {\r\n            const { type, payload } = action;\r\n\r\n            for (let i = 0; i < state.length; i++) {\r\n                state[i] = i === type ? payload : false;\r\n            }\r\n\r\n            return [...state];\r\n        },\r\n        // Expand, revert\r\n        [false, false],\r\n    );\r\n    const [positionMap, setMap] = useState<any>({});\r\n    const [renderID, increaseRenderID] = useReducer((x) => x + 1, 0);\r\n\r\n    useEffect(() => {\r\n        const _map: any = {};\r\n        // Map the { [node id]: list array id }\r\n        proof.forEach((n, id) => (_map[n.id] = id));\r\n        setMap(_map);\r\n    }, [proof]);\r\n\r\n    useEffect(() => {\r\n        increaseRenderID();\r\n    }, [nodeInfo]);\r\n\r\n    const nodeInfoTable = () => {\r\n        return (\r\n            <table\r\n                id=\"table-node-info\"\r\n                className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-html-table-striped\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Property</th>\r\n                        <th>Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <strong>RULE </strong>\r\n                            <Icon\r\n                                id=\"icon\"\r\n                                icon=\"help\"\r\n                                onClick={() => {\r\n                                    dispatchHelper({ type: drawerHelpersKind.RULE, payload: !ruleHelperIsOpen });\r\n                                }}\r\n                            ></Icon>\r\n                        </td>\r\n                        <td>\r\n                            {nodeInfo.rule}\r\n                            <Collapse isOpen={ruleHelperIsOpen}>\r\n                                <Pre style={{ maxHeight: '300px', overflow: 'auto' }} id=\"pre-rule\">\r\n                                    {ruleHelper(nodeInfo.rule)}\r\n                                </Pre>\r\n                            </Collapse>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {nodeInfo.args && (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>ARGS</strong>{' '}\r\n                                {nodeInfo.args.indexOf('let') !== -1 ? (\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"translate\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.ARGS,\r\n                                                payload: !argsHelperIsOpen,\r\n                                            });\r\n                                        }}\r\n                                    ></Icon>\r\n                                ) : null}\r\n                            </td>\r\n                            <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                                {nodeInfo.args}\r\n                                {nodeInfo.args.indexOf('let') !== -1 ? (\r\n                                    <Collapse isOpen={argsHelperIsOpen}>\r\n                                        <Pre style={{ maxHeight: '300px', overflow: 'auto' }} id=\"pre-rule\">\r\n                                            {indent(translate(nodeInfo.args))}\r\n                                        </Pre>\r\n                                    </Collapse>\r\n                                ) : null}\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n\r\n                    <tr>\r\n                        <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                            <strong>CONCLUSION</strong>{' '}\r\n                            {nodeInfo.conclusion.indexOf('let') !== -1 ? (\r\n                                <>\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"translate\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.CONC,\r\n                                                payload: !concHelperIsOpen,\r\n                                            });\r\n                                            dispatchLetExpansion({\r\n                                                type: renderLetKind.EXPAND,\r\n                                                payload: true,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"undo\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.CONC,\r\n                                                payload: false,\r\n                                            });\r\n                                            dispatchLetExpansion({\r\n                                                type: renderLetKind.REVERT,\r\n                                                payload: true,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </>\r\n                            ) : null}\r\n                        </td>\r\n                        <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                            {nodeInfo.conclusion.indexOf('let') !== -1 ? (\r\n                                <LetRender\r\n                                    key={renderID}\r\n                                    id={0}\r\n                                    toRender={nodeInfo.conclusion}\r\n                                    letMap={letMap}\r\n                                    shouldExpand={expandAll}\r\n                                    shouldRevert={revertAll}\r\n                                    dispatchExpansion={dispatchLetExpansion}\r\n                                />\r\n                            ) : (\r\n                                nodeInfo.conclusion\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {nodeInfo.nDescendants ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>#DESCENDANTS</strong>\r\n                            </td>\r\n                            <td>{nodeInfo.nDescendants}</td>\r\n                        </tr>\r\n                    ) : null}\r\n\r\n                    {nodeInfo.nHided ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>#HIDDEN</strong>\r\n                            </td>\r\n                            <td>{`[${nodeInfo.hiddenNodes.map((node) => ' ' + node)} ]`}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                    {nodeInfo.dependencies.length ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>DEPENDENCIES</strong>\r\n                            </td>\r\n                            <td>{`${nodeInfo.dependencies.map(\r\n                                (dependency) => ` ${dependency.piId}: [${dependency.depsId.map((dep) => ' ' + dep)} ] `,\r\n                            )}`}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"dir-style\"\r\n            style={{\r\n                backgroundColor: darkTheme ? 'rgb(57, 75, 89)' : 'white',\r\n                height:\r\n                    window.innerHeight - (document.getElementsByClassName('bp3-navbar')[0] as HTMLElement).offsetHeight,\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    width: '50%',\r\n                    height: '100%',\r\n                    float: 'left',\r\n                    clear: 'none',\r\n                    borderRight: '1px solid black',\r\n                    overflow: 'auto',\r\n                }}\r\n            >\r\n                <VisualizerTree\r\n                    darkTheme={darkTheme}\r\n                    proof={proof}\r\n                    positionMap={positionMap}\r\n                    content={proofTree}\r\n                    setNodeInfo={setNodeInfo}\r\n                ></VisualizerTree>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    width: '50%',\r\n                    height: '100%',\r\n                    float: 'left',\r\n                    clear: 'none',\r\n                }}\r\n            >\r\n                {nodeInfoTable()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerDirectoryStyle;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { useEffect, useReducer, useState } from 'react';\r\n\r\nimport { Drawer, Position, Classes, Icon, Collapse, Pre, TreeNodeInfo } from '@blueprintjs/core';\r\nimport Canvas from './Canvas/VisualizerCanvas';\r\nimport VisualizerTree from '../VisualizerTree/VisualizerTree';\r\nimport VisualizerDirectoryStyle from './VisualizerDirectoryStyle/VisualizerDirectoryStyle';\r\n\r\nimport '../../scss/VisualizerStage.scss';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectFileCount } from '../../store/features/file/fileSlice';\r\nimport { selectStyle, selectLetMap, selectProof } from '../../store/features/proof/proofSlice';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { NodeInfo, NodeInterface, TreeNode } from '../../interfaces/interfaces';\r\nimport { renderLetKind, drawerHelpersKind } from '../../interfaces/enum';\r\nimport LetRender from '../VisualizerLetDrawer/LetRender';\r\n\r\nfunction ruleHelper(rule: string) {\r\n    switch (rule.split(' ')[0]) {\r\n        case 'π':\r\n            return 'This node hides some parts of the proof, you can unfold it.';\r\n        case 'ASSUME':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Assumption (a leaf)\\nChildren: none\\nArguments: (F)\\n--------------\\nConclusion: F\\n\\nThis rule has special status, in that an application of assume is an open leaf in a proof that is not (yet) justified. An assume leaf is analogous to a free variable in a term, where we say \"F is a free assumption in proof P\" if it contains an application of F that is not  bound by SCOPE.'\r\n            );\r\n        case 'SCOPE':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Scope (a binder for assumptions)\\nChildren: (P:F)\\nArguments: (F1, ..., Fn)\\n--------------\\nConclusion: (=> (and F1 ... Fn) F) or (not (and F1 ... Fn)) if F is false\\n\\nThis rule has a dual purpose with ASSUME. It is a way to close assumptions in a proof. We require that F1 ... Fn are free assumptions in P and say that F1, ..., Fn are not free in (SCOPE P). In other words, they are bound by this application. For example, the proof node: (SCOPE (ASSUME F) :args F) has the conclusion (=> F F) and has no free assumptions. More generally, a proof with no free assumptions always concludes a valid formula.'\r\n            );\r\n        case 'SUBS':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Substitution\\nChildren: (P1:F1, ..., Pn:Fn)\\nArguments: (t, (ids)?)\\n---------------------------------------------------------------\\nConclusion: (= t t*sigma{ids}(Fn)*...*sigma{ids}(F1))\\nwhere sigma{ids}(Fi) are substitutions, which notice are applied in reverse order. Notice that ids is a MethodId identifier, which determines how to convert the formulas F1, ..., Fn into substitutions.'\r\n            );\r\n        case 'REWRITE':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Rewrite\\nChildren: none\\nArguments: (t, (idr)?)\\n----------------------------------------\\nConclusion: (= t Rewriter{idr}(t))\\nwhere idr is a MethodId identifier, which determines the kind of rewriter to apply, e.g. Rewriter::rewrite.'\r\n            );\r\n        case 'EVALUATE':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Evaluate\\nChildren: none\\n\\nArguments: (t)\\n----------------------------------------\\nConclusion: (= t Evaluator::evaluate(t))\\nNote this is equivalent to: (REWRITE t MethodId::RW_EVALUATE)'\r\n            );\r\n        case 'MACRO_SR_EQ_INTRO':\r\n            return (\r\n                rule +\r\n                \"\\n\\nIn this rule, we provide a term t and conclude that it is equal to its rewritten form under a (proven) substitution.\\n\\nChildren: (P1:F1, ..., Pn:Fn)\\nArguments: (t, (ids (ida (idr)?)?)?)\\n---------------------------------------------------------------\\nConclusion: (= t t')\\nwhere t' is Rewriter{idr}(t*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1))\\n\\nIn other words, from the point of view of Skolem forms, this rule transforms t to t' by standard substitution + rewriting.\\n\\nThe arguments ids, ida and idr are optional and specify the identifier of the substitution, the substitution application and rewriter respectively to be used.\"\r\n            );\r\n        case 'MACRO_SR_PRED_INTRO':\r\n            return (\r\n                rule +\r\n                \"\\n\\nIn this rule, we provide a formula F and conclude it, under the condition that it rewrites to true under a proven substitution.\\n\\nChildren: (P1:F1, ..., Pn:Fn)\\nArguments: (F, (ids (ida (idr)?)?)?)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere Rewriter{idr}(F*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1)) == true where ids and idr are method identifiers.\\n\\nMore generally, this rule also holds when: Rewriter::rewrite(toOriginal(F')) == true where F' is the result of the left hand side of the equality above. Here, notice that we apply rewriting on the original form of F', meaning that this rule may conclude an F whose Skolem form is justified by the definition of its (fresh) Skolem variables. For example, this rule may justify the conclusion (= k t) where k is the purification Skolem for t, e.g. where the original form of k is t.\\n\\nFurthermore, notice that the rewriting and substitution is applied only within the side condition, meaning the rewritten form of the original form of F does not escape this rule.\"\r\n            );\r\n        case 'MACRO_SR_PRED_ELIM':\r\n            return (\r\n                rule +\r\n                \"\\n\\nIn this rule, if we have proven a formula F, then we may conclude its rewritten form under a proven substitution.\\n\\nChildren: (P1:F, P2:F1, ..., P_{n+1}:Fn)\\nArguments: ((ids (ida (idr)?)?)?)\\n----------------------------------------\\nConclusion: F'\\nwhere F' is Rewriter{idr}(F*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1)). where ids and idr are method identifiers.\\n\\nWe rewrite only on the Skolem form of F, similar to MACRO_SR_EQ_INTRO.\"\r\n            );\r\n        case 'MACRO_SR_PRED_TRANSFORM':\r\n            return (\r\n                rule +\r\n                \"\\n\\nIn this rule, if we have proven a formula F, then we may provide a formula G and conclude it if F and G are equivalent after rewriting under a proven substitution.\\n\\nChildren: (P1:F, P2:F1, ..., P_{n+1}:Fn)\\nArguments: (G, (ids (ida (idr)?)?)?)\\n----------------------------------------\\nConclusion: G\\nwhere Rewriter{idr}(F*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1)) == Rewriter{idr}(G*sigma{ids, ida}(Fn)*...*sigma{ids, ida}(F1))\\n\\nMore generally, this rule also holds when:\\n  Rewriter::rewrite(toOriginal(F')) == Rewriter::rewrite(toOriginal(G'))\\nwhere F' and G' are the result of each side of the equation above. Here, original forms are used in a similar manner to MACRO_SR_PRED_INTRO above.\"\r\n            );\r\n        case 'REMOVE_TERM_FORMULA_AXIOM':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Remove Term Formulas Axiom\\nChildren: none\\nArguments: (t)\\n---------------------------------------------------------------\\nConclusion: RemoveTermFormulas::getAxiomFor(t).'\r\n            );\r\n        case 'THEORY_LEMMA':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Theory lemma\\nChildren: none\\nArguments: (F, tid)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is a (T-valid) theory lemma generated by theory with TheoryId tid. This is a \"coarse-grained\" rule that is used as a placeholder if a theory did not provide a proof for a lemma or conflict.'\r\n            );\r\n        case 'THEORY_REWRITE':\r\n            return (\r\n                rule +\r\n                \"\\n\\n======== Theory Rewrite\\nChildren: none\\nArguments: (F, tid, rid)\\n----------------------------------------\\nConclusion: F\\nwhere F is an equality of the form (= t t') where t' is obtained by applying the kind of rewriting given by the method identifier rid, which is one of: { RW_REWRITE_THEORY_PRE, RW_REWRITE_THEORY_POST, RW_REWRITE_EQ_EXT } Notice that the checker for this rule does not replay the rewrite to ensure correctness, since theory rewriter methods are not static. For example, the quantifiers rewriter involves constructing new bound variables that are not guaranteed to be consistent on each call.\"\r\n            );\r\n        case 'PREPROCESS':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality of the form t = t' where t was replaced by t' based on some preprocessing pass, or otherwise F was added as a new assertion by some preprocessing pass.\"\r\n            );\r\n        case 'PREPROCESS_LEMMA':\r\n            return (\r\n                rule +\r\n                '\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F was added as a new assertion by some preprocessing pass.'\r\n            );\r\n        case 'THEORY_PREPROCESS':\r\n            return (\r\n                rule +\r\n                '\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality of the form t = Theory::ppRewrite(t) for some theory. Notice this is a \"trusted\" rule.'\r\n            );\r\n        case 'THEORY_PREPROCESS_LEMMA':\r\n            return (\r\n                rule +\r\n                '\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F was added as a new assertion by theory preprocessing.'\r\n            );\r\n        case 'THEORY_EXPAND_DEF':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality of the form t = t' where t was replaced by t' based on theory expand definitions.\"\r\n            );\r\n        case 'WITNESS_AXIOM':\r\n            return (\r\n                rule +\r\n                '\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an existential (exists ((x T)) (P x)) used for introducing a witness term (witness ((x T)) (P x)).'\r\n            );\r\n        case 'TRUST_REWRITE':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality (= t t') that holds by a form of rewriting that could not be replayed during proof postprocessing.\"\r\n            );\r\n        case 'TRUST_SUBS':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality (= t t') that holds by a form of substitution that could not be replayed during proof postprocessing.\"\r\n            );\r\n        case 'TRUST_SUBS_MAP':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is an equality (= t t') that holds by a form of substitution that could not be determined by the TrustSubstitutionMap. This inference may contain possibly multiple children corresponding to the formulas used to derive the substitution.\"\r\n            );\r\n        case 'TRUST_SUBS_EQ':\r\n            return (\r\n                rule +\r\n                \"\\n\\nArguments: (F)\\n---------------------------------------------------------------\\nConclusion: F\\nwhere F is a solved equality of the form (= x t) derived as the solved form of F', where F' is given as a child.\"\r\n            );\r\n        case 'SAT_REFUTATION':\r\n            return (\r\n                rule +\r\n                '\\n\\n========= SAT Refutation for assumption-based unsat cores\\nChildren: (P1, ..., Pn)\\nArguments: none\\n---------------------\\nConclusion: false\\nNote: P1, ..., Pn correspond to the unsat core determined by the SAT solver.'\r\n            );\r\n        case 'RESOLUTION':\r\n            return (\r\n                rule +\r\n                \"\\n\\n======== Resolution\\nChildren:\\n(P1:C1, P2:C2)\\nArguments: (pol, L)\\n---------------------\\nConclusion: C\\nwhere\\n- C1 and C2 are nodes viewed as clauses, i.e., either an OR node with each children viewed as a literal or a node viewed as a literal. Note that an OR node could also be a literal.\\n- pol is either true or false, representing the polarity of the pivot on the first clause\\n- L is the pivot of the resolution, which occurs as is (resp. under a NOT) in C1 and negatively (as is) in C2 if pol = true (pol = false).\\nC is a clause resulting from collecting all the literals in C1, minus the first occurrence of the pivot or its negation, and C2, minus the first occurrence of the pivot or its negation, according to the policy above. If the resulting clause has a single literal, that literal itself is the result; if it has no literals, then the result is false; otherwise it's an OR node of the resulting literals.\\n\\nNote that it may be the case that the pivot does not occur in the clauses. In this case the rule is not unsound, but it does not correspond to resolution but rather to a weakening of the clause that did not have a literal eliminated.\"\r\n            );\r\n        case 'CHAIN_RESOLUTION':\r\n            return (\r\n                rule +\r\n                \"\\n\\n======== N-ary Resolution\\nChildren: (P1:C_1, ..., Pm:C_n)\\nArguments: (pol_1, L_1, ..., pol_{n-1}, L_{n-1})\\n---------------------\\nConclusion: C\\nwhere\\n- let C_1 ... C_n be nodes viewed as clauses, as defined above\\n- let \\\"C_1 <>_{L,pol} C_2\\\" represent the resolution of C_1 with C_2 with pivot L and polarity pol, as defined above\\n- let C_1' = C_1 (from P1),\\n- for each i > 1, let C_i' = C_{i-1} <>_{L_{i-1}, pol_{i-1}} C_i'\\nThe result of the chain resolution is C = C_n'\"\r\n            );\r\n        case 'FACTORING':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Factoring\\nChildren: (P:C1)\\nArguments: ()\\n---------------------\\nConclusion: C2\\nwhere Set representations of C1 and C2 is the same and the number of literals in C2 is smaller than that of C1'\r\n            );\r\n        case 'REORDERING':\r\n            return (\r\n                rule +\r\n                '\\n\\n======== Reordering\\nChildren: (P:C1)\\nArguments: (C2)\\n---------------------\\nConclusion: C2\\nwhere Set representations of C1 and C2 are the same and the number of literals in C2 is the same of that of C1'\r\n            );\r\n        case 'MACRO_RESOLUTION':\r\n            return (\r\n                rule +\r\n                \"\\n\\n======== N-ary Resolution + Factoring + Reordering\\nChildren: (P1:C_1, ..., Pm:C_n)\\nArguments: (C, pol_1, L_1, ..., pol_{n-1}, L_{n-1})\\n---------------------\\nConclusion: C\\nwhere\\n- let C_1 ... C_n be nodes viewed as clauses, as defined in RESOLUTION\\n- let \\\"C_1 <>_{L,pol} C_2\\\" represent the resolution of C_1 with C_2 with pivot L and polarity pol, as defined in RESOLUTION\\n- let C_1' be equal, in its set representation, to C_1 (from P1),\\n- for each i > 1, let C_i' be equal, it its set representation, to C_{i-1} <>_{L_{i-1}, pol_{i-1}} C_i'\\nThe result of the chain resolution is C, which is equal, in its set representation, to C_n'\"\r\n            );\r\n        case 'MACRO_RESOLUTION_TRUST':\r\n            return (\r\n                rule +\r\n                \"\\n\\nAs MACRO_RESOLUTION but not checked\\n\\nMACRO_RESOLUTION definition:\\n======== N-ary Resolution + Factoring + Reordering\\nChildren: (P1:C_1, ..., Pm:C_n)\\nArguments: (C, pol_1, L_1, ..., pol_{n-1}, L_{n-1})\\n---------------------\\nConclusion: C\\nwhere\\n- let C_1 ... C_n be nodes viewed as clauses, as defined in RESOLUTION\\n- let \\\"C_1 <>_{L,pol} C_2\\\" represent the resolution of C_1 with C_2 with pivot L and polarity pol, as defined in RESOLUTION\\n- let C_1' be equal, in its set representation, to C_1 (from P1),\\n- for each i > 1, let C_i' be equal, it its set representation, to C_{i-1} <>_{L_{i-1}, pol_{i-1}} C_i'\\nThe result of the chain resolution is C, which is equal, in its set representation, to C_n'\"\r\n            );\r\n        default:\r\n            return rule;\r\n    }\r\n}\r\n\r\nexport function castProofNodeToTreeNode(node: NodeInterface): TreeNode {\r\n    const label = node.hiddenNodes?.length\r\n        ? // Pi node\r\n          `${node.id} : π ➜ ${node.conclusion}`\r\n        : node.dependencies.length\r\n        ? // Node with dependencies\r\n          `${node.id} : β ➜ ${node.conclusion}`\r\n        : //Normal node\r\n          `${node.id} : ${node.conclusion}`;\r\n\r\n    // Create the node tree\r\n    return {\r\n        id: node.id,\r\n        icon: 'graph',\r\n        label: label,\r\n        secondaryLabel: `${node.rule}`,\r\n        rule: node.rule,\r\n        args: node.args,\r\n        conclusion: node.conclusion,\r\n        parentId: node.parents[0],\r\n        descendants: node.descendants - 1,\r\n        nHided: node.hiddenNodes ? node.hiddenNodes.length : 0,\r\n        hiddenNodes: node.hiddenNodes ? node.hiddenNodes.map((n) => n.id) : [],\r\n        childNodes: [],\r\n        dependencies: node.dependencies,\r\n        parentsId: node.parents,\r\n        hasCaret: Boolean(node.descendants - 1),\r\n    };\r\n}\r\n\r\nfunction createTree(proof: NodeInterface[], id: number): TreeNode[] {\r\n    const rootNode = proof.find((o) => o.id === id);\r\n    const tree: TreeNode[] = [];\r\n\r\n    // Make sure found the root node\r\n    if (rootNode) {\r\n        tree.push(castProofNodeToTreeNode(rootNode));\r\n    }\r\n    return tree;\r\n}\r\n\r\nconst VisualizerStage: React.FC = () => {\r\n    // Proof data\r\n    const letMap = useAppSelector(selectLetMap);\r\n    const proof = useAppSelector(selectProof);\r\n    const fileID = useAppSelector(selectFileCount);\r\n    const style = useAppSelector(selectStyle);\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    // Data structures\r\n    const [proofTree, setProofTree] = useState<TreeNodeInfo[]>([]);\r\n    const [nodeInfo, setNodeInfo] = useState<NodeInfo>({\r\n        rule: '',\r\n        args: '',\r\n        conclusion: '',\r\n        nHided: 0,\r\n        nDescendants: 0,\r\n        hiddenNodes: [],\r\n        dependencies: [],\r\n    });\r\n    const [map, setMap] = useState<any>({});\r\n    // Drawer\r\n    const [[ruleHelperIsOpen, argsHelperIsOpen, concHelperIsOpen], dispatchHelper] = useReducer(\r\n        (state: boolean[], action: { type: drawerHelpersKind; payload: boolean }): boolean[] => {\r\n            const { type, payload } = action;\r\n\r\n            // Act over all the positions\r\n            if (type === drawerHelpersKind.ALL) {\r\n                for (let i = 0; i < state.length; i++) {\r\n                    state[i] = payload;\r\n                }\r\n            }\r\n            // If wanna set a position\r\n            else if (payload) {\r\n                // Reset everything and set the wanted\r\n                for (let i = 0; i < state.length; i++) {\r\n                    state[i] = i === type ? payload : false;\r\n                }\r\n            }\r\n            // If wanna only reset a position\r\n            else state[type] = payload;\r\n\r\n            return [...state];\r\n        },\r\n        // Rule, args, conclusion\r\n        [false, false, false],\r\n    );\r\n    const [[expandAll, revertAll], dispatchLetExpansion] = useReducer(\r\n        (state: boolean[], action: { type: renderLetKind; payload: boolean }): boolean[] => {\r\n            const { type, payload } = action;\r\n\r\n            for (let i = 0; i < state.length; i++) {\r\n                state[i] = i === type ? payload : false;\r\n            }\r\n\r\n            return [...state];\r\n        },\r\n        // Expand, revert\r\n        [false, false],\r\n    );\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    const [tree, setTree] = useState<TreeNodeInfo[]>([]);\r\n\r\n    // Make sure that a new tree is created only when a new dot is used\r\n    useEffect(() => setProofTree(createTree(proof, 0)), [fileID]);\r\n    useEffect(() => {\r\n        const _map: any = {};\r\n        // Map the { [node id]: list array id }\r\n        proof.forEach((n, id) => (_map[n.id] = id));\r\n        setMap(_map);\r\n    }, [proof]);\r\n\r\n    const openDrawer = (nodeInfo: NodeInfo, tree?: TreeNodeInfo[]) => {\r\n        setNodeInfo(nodeInfo);\r\n        setTree(tree ? tree : []);\r\n        setDrawerIsOpen(true);\r\n    };\r\n\r\n    const nodeInfoTable = (): JSX.Element => {\r\n        return (\r\n            <table\r\n                id=\"table-node-info\"\r\n                className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-html-table-striped\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Property</th>\r\n                        <th>Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <strong>RULE </strong>\r\n                            <Icon\r\n                                id=\"icon\"\r\n                                icon=\"help\"\r\n                                onClick={() => {\r\n                                    dispatchHelper({ type: drawerHelpersKind.RULE, payload: !ruleHelperIsOpen });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            {nodeInfo.rule}\r\n                            <Collapse isOpen={ruleHelperIsOpen}>\r\n                                <Pre style={{ maxHeight: '300px', overflow: 'auto' }} id=\"pre-rule\">\r\n                                    {ruleHelper(nodeInfo.rule)}\r\n                                </Pre>\r\n                            </Collapse>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {nodeInfo.args && (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>ARGS</strong>{' '}\r\n                                {nodeInfo.args.indexOf('let') !== -1 ? (\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"translate\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.ARGS,\r\n                                                payload: !argsHelperIsOpen,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                ) : null}\r\n                            </td>\r\n                            <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                                {nodeInfo.args}\r\n                                {nodeInfo.args.indexOf('let') !== -1 ? (\r\n                                    <Collapse isOpen={argsHelperIsOpen}>\r\n                                        <Pre style={{ maxHeight: '300px', overflow: 'auto' }} id=\"pre-rule\">\r\n                                            {nodeInfo.args}\r\n                                        </Pre>\r\n                                    </Collapse>\r\n                                ) : null}\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n\r\n                    <tr>\r\n                        <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                            <strong>CONCLUSION</strong>{' '}\r\n                            {nodeInfo.conclusion.indexOf('let') !== -1 ? (\r\n                                <>\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"translate\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.CONC,\r\n                                                payload: !concHelperIsOpen,\r\n                                            });\r\n                                            dispatchLetExpansion({\r\n                                                type: renderLetKind.EXPAND,\r\n                                                payload: true,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                    <Icon\r\n                                        id=\"icon\"\r\n                                        icon=\"undo\"\r\n                                        onClick={() => {\r\n                                            dispatchHelper({\r\n                                                type: drawerHelpersKind.CONC,\r\n                                                payload: false,\r\n                                            });\r\n                                            dispatchLetExpansion({\r\n                                                type: renderLetKind.REVERT,\r\n                                                payload: true,\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </>\r\n                            ) : null}\r\n                        </td>\r\n                        <td style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n                            {nodeInfo.conclusion.indexOf('let') !== -1 ? (\r\n                                <LetRender\r\n                                    id={0}\r\n                                    toRender={nodeInfo.conclusion}\r\n                                    letMap={letMap}\r\n                                    shouldExpand={expandAll}\r\n                                    shouldRevert={revertAll}\r\n                                    dispatchExpansion={dispatchLetExpansion}\r\n                                />\r\n                            ) : (\r\n                                nodeInfo.conclusion\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {nodeInfo.nDescendants ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>#DESCENDANTS</strong>\r\n                            </td>\r\n                            <td>{nodeInfo.nDescendants}</td>\r\n                        </tr>\r\n                    ) : null}\r\n\r\n                    {nodeInfo.nHided ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>#HIDDEN</strong>\r\n                            </td>\r\n                            <td>{`[${nodeInfo.hiddenNodes.map((node) => ' ' + node)} ]`}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                    {nodeInfo.dependencies.length ? (\r\n                        <tr>\r\n                            <td>\r\n                                <strong>DEPENDENCIES</strong>\r\n                            </td>\r\n                            <td>{`${nodeInfo.dependencies.map(\r\n                                (dependency) => ` ${dependency.piId}: [${dependency.depsId.map((dep) => ' ' + dep)} ] `,\r\n                            )}`}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div onContextMenu={(e) => e.preventDefault()}>\r\n            {proof.length > 1 && (\r\n                <>\r\n                    {style === 'graph' ? (\r\n                        <Canvas key={fileID} proof={proof} openDrawer={openDrawer} createTree={createTree} />\r\n                    ) : (\r\n                        <VisualizerDirectoryStyle\r\n                            proofTree={proofTree}\r\n                            ruleHelper={ruleHelper}\r\n                            indent={() => ''}\r\n                            translate={() => ''}\r\n                        />\r\n                    )}\r\n                    <Drawer\r\n                        className={darkTheme ? 'bp3-dark' : ''}\r\n                        autoFocus={true}\r\n                        canEscapeKeyClose={true}\r\n                        canOutsideClickClose={true}\r\n                        enforceFocus={true}\r\n                        hasBackdrop={false}\r\n                        isOpen={drawerIsOpen}\r\n                        position={Position.BOTTOM}\r\n                        usePortal={true}\r\n                        onClose={(e) => {\r\n                            e.preventDefault();\r\n                            setDrawerIsOpen(false);\r\n                            dispatchHelper({ type: drawerHelpersKind.ALL, payload: false });\r\n                        }}\r\n                        icon=\"info-sign\"\r\n                        title=\"Node info\"\r\n                    >\r\n                        <div className={Classes.DRAWER_BODY}>\r\n                            <div style={{ maxHeight: '500px', overflow: 'auto' }}>\r\n                                <VisualizerTree\r\n                                    darkTheme={darkTheme}\r\n                                    proof={proof}\r\n                                    positionMap={map}\r\n                                    content={tree}\r\n                                    setNodeInfo={setNodeInfo}\r\n                                />\r\n                            </div>\r\n                            <div className={Classes.DIALOG_BODY}>{nodeInfoTable()}</div>\r\n                        </div>\r\n                    </Drawer>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerStage;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Classes } from '@blueprintjs/core';\r\n\r\nimport Let from './let';\r\nimport '../../scss/Let.scss';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { selectLetMap } from '../../store/features/proof/proofSlice';\r\nimport { DrawerVisualizerTabProps } from '../../interfaces/interfaces';\r\n\r\nconst font =\r\n    '14px / 18px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", Icons16, sans-serif';\r\n\r\nconst VisualizerLetDrawer: React.FC<DrawerVisualizerTabProps> = ({ shouldResize }: DrawerVisualizerTabProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const widthRef = useRef(0);\r\n    const [resizeMode, setResizeMode] = useState(0);\r\n\r\n    const [letMap, setLetMap] = useState({ ...useAppSelector(selectLetMap) });\r\n    const letsRef = useRef<{ [key: string]: Let }>({});\r\n\r\n    // Handler to call on window resize and set the value column width\r\n    function handleResize() {\r\n        const width = widthRef.current;\r\n\r\n        // -22 from the fixed padding size\r\n        const newWidth = document.getElementsByClassName('letMap-value-column')[0].clientWidth - 24;\r\n        width === newWidth ? setResizeMode(1) : width > newWidth ? setResizeMode(0) : setResizeMode(2);\r\n\r\n        widthRef.current = newWidth;\r\n    }\r\n\r\n    // ComponentDidMount\r\n    useEffect(() => {\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Init the let ref\r\n        Object.keys(letMap).forEach((key) => {\r\n            const currentLet = letMap[key];\r\n            const indices: { [key: number]: string } = {};\r\n            // Finds all occurences of let in the currentLet\r\n            [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n\r\n            letsRef.current[key] = new Let(key, currentLet, letsRef.current, indices);\r\n        });\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleResize();\r\n    }, [shouldResize]);\r\n\r\n    const expandLet = (parent: string, key: string, letIdx: number) => {\r\n        const lets = letsRef.current;\r\n\r\n        const externalRef = lets[key];\r\n        lets[parent].isExpanded = true;\r\n        letMap[parent] = lets[parent].expandPartialy(externalRef, letIdx);\r\n        setLetMap({ ...letMap });\r\n    };\r\n\r\n    const expandAll = (key: string) => {\r\n        const thisLet = letsRef.current[key];\r\n        thisLet.isExpanded = true;\r\n        letMap[key] = thisLet.expandValue(true);\r\n        setLetMap({ ...letMap });\r\n    };\r\n\r\n    const revertLet = (key: string) => {\r\n        const thisLet = letsRef.current[key];\r\n        // Only when is expanded\r\n        if (thisLet.isExpanded) {\r\n            thisLet.isExpanded = false;\r\n            letMap[key] = thisLet.shrinkValue();\r\n            setLetMap({ ...letMap });\r\n        }\r\n    };\r\n\r\n    const renderLet = (key: string): JSX.Element => {\r\n        const lets = letsRef.current;\r\n        const width = widthRef.current;\r\n\r\n        // Waits for the width to be updated and the DOM element to be updated\r\n        if (width) {\r\n            let currentLet = letMap[key];\r\n            const thisLet = lets[key];\r\n\r\n            // If doesn't fits, then indent\r\n            if (!thisLet.fitsTheWindow(width, font)) {\r\n                currentLet = thisLet.indent(width, true, font);\r\n                letMap[key] = currentLet;\r\n            }\r\n            // If fits, then only in the momment the page size is growing and the line is broken\r\n            else if (resizeMode >= 0 && thisLet.lines.length > 1) {\r\n                // Reset the line\r\n                thisLet.lines = [{ value: thisLet.isExpanded ? thisLet.groupUp() : thisLet.value, indentLevel: 0 }];\r\n                thisLet.biggerID = 0;\r\n\r\n                // Indent it again\r\n                currentLet = thisLet.indent(width, false, font);\r\n                letMap[key] = currentLet;\r\n            }\r\n\r\n            // Finds all occurences of let in the currentLet\r\n            const indices: { [key: number]: string } = {};\r\n            [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n\r\n            const arr: (JSX.Element | string)[] = [];\r\n            let start = 0;\r\n            // Slice the currentLet into an array with strings and JSX elements\r\n            Object.keys(indices).forEach((index, i, self) => {\r\n                const idx = Number(index);\r\n                const thisLet = indices[idx];\r\n\r\n                // Add the elements to the arr\r\n                arr.push(currentLet.substring(start, idx));\r\n                arr.push(\r\n                    <a\r\n                        className={darkTheme ? 'let-literal-or' : 'let-literal'}\r\n                        onClick={() => {\r\n                            expandLet(key, thisLet, idx);\r\n                        }}\r\n                    >\r\n                        {thisLet}\r\n                    </a>,\r\n                );\r\n                // Defines a new start\r\n                start = idx + thisLet.length;\r\n\r\n                // If it's the last let\r\n                if (i === self.length - 1) {\r\n                    arr.push(currentLet.substring(start, currentLet.length));\r\n                }\r\n            });\r\n\r\n            // If there is a let in this current let\r\n            if (Object.keys(indices).length) {\r\n                return <span className=\"let-instance\">{arr}</span>;\r\n            } else {\r\n                return <span className=\"let-instance\">{currentLet}</span>;\r\n            }\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    return (\r\n        <div className={Classes.DIALOG_BODY}>\r\n            <table\r\n                id=\"table-node-info-2\"\r\n                className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-html-table-striped\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ width: '50px' }}>Property</th>\r\n                        <th className=\"letMap-value-column\">Value</th>\r\n                        <th style={{ width: '100px' }}>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(letMap).map((key, id) => {\r\n                        return (\r\n                            <tr key={id}>\r\n                                <td>\r\n                                    <strong>{key}</strong>\r\n                                </td>\r\n                                <td style={{ width: '100%', whiteSpace: 'pre-wrap' }}>{renderLet(key)}</td>\r\n                                <td style={{ width: '100px', height: '100%' }}>\r\n                                    <Button\r\n                                        onClick={() => expandAll(key)}\r\n                                        className=\"bp3-minimal\"\r\n                                        icon=\"translate\"\r\n                                        text=\"Expand\"\r\n                                    />\r\n                                    <Button\r\n                                        onClick={() => revertLet(key)}\r\n                                        className=\"bp3-minimal\"\r\n                                        icon=\"undo\"\r\n                                        text=\"Revert\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerLetDrawer;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Classes } from '@blueprintjs/core';\r\nimport { selectLetMap, selectTheoryLemmas } from '../../store/features/proof/proofSlice';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport Let from '../VisualizerLetDrawer/let';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { DrawerVisualizerTabProps } from '../../interfaces/interfaces';\r\n\r\nconst font =\r\n    '14px / 18px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", Icons16, sans-serif';\r\n\r\nconst VisualizerTheoryLemma: React.FC<DrawerVisualizerTabProps> = ({ shouldResize }: DrawerVisualizerTabProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const letMap = useAppSelector(selectLetMap);\r\n    const widthRef = useRef(0);\r\n\r\n    const [theoryLemmas, setTheoryLemmas] = useState([...useAppSelector(selectTheoryLemmas)]);\r\n    const [resizeMode, setResizeMode] = useState(0);\r\n    const letsRef = useRef<{ [key: string]: Let }>({});\r\n\r\n    // Handler to call on window resize and set the value column width\r\n    function handleResize() {\r\n        const width = widthRef.current;\r\n\r\n        // -22 from the fixed padding size\r\n        const newWidth = document.getElementsByClassName('theoryLemma-value-column')[0].clientWidth - 24;\r\n        width === newWidth ? setResizeMode(1) : width > newWidth ? setResizeMode(0) : setResizeMode(2);\r\n\r\n        widthRef.current = newWidth;\r\n    }\r\n\r\n    // ComponentDidMount\r\n    useEffect(() => {\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Init the lets\r\n        Object.keys(letMap).forEach((key) => {\r\n            const currentLet = letMap[key];\r\n\r\n            const indices: { [key: number]: string } = {};\r\n            // Finds all occurences of let in the currentLet\r\n            [...currentLet.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n            letsRef.current[key] = new Let(key, currentLet, letsRef.current, indices);\r\n        });\r\n\r\n        // Init the theory lemmas\r\n        theoryLemmas.forEach((tl, id) => {\r\n            const indices: { [key: number]: string } = {};\r\n            // Finds all occurences of let in the currentTL\r\n            [...tl.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n\r\n            letsRef.current[id] = new Let(String(id), tl, letsRef.current, indices);\r\n        });\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleResize();\r\n    }, [shouldResize]);\r\n\r\n    const expandLet = (parent: number, key: string, letIdx: number) => {\r\n        const lets = letsRef.current;\r\n        const externalRef = lets[key];\r\n        lets[parent].isExpanded = true;\r\n        theoryLemmas[parent] = lets[parent].expandPartialy(externalRef, letIdx);\r\n        setTheoryLemmas([...theoryLemmas]);\r\n    };\r\n\r\n    const expandAll = (key: number) => {\r\n        const thisLet = letsRef.current[key];\r\n        thisLet.isExpanded = true;\r\n        theoryLemmas[key] = thisLet.expandValue(true);\r\n        setTheoryLemmas([...theoryLemmas]);\r\n    };\r\n\r\n    const revertLet = (key: number) => {\r\n        const thisLet = letsRef.current[key];\r\n        // Only when is expanded\r\n        if (thisLet.isExpanded) {\r\n            thisLet.isExpanded = false;\r\n            theoryLemmas[key] = thisLet.shrinkValue();\r\n            setTheoryLemmas([...theoryLemmas]);\r\n        }\r\n    };\r\n\r\n    const renderLet = (key: number): JSX.Element => {\r\n        const lets = letsRef.current;\r\n        const width = widthRef.current;\r\n\r\n        // Waits for the width to be updated and the DOM element to be updated\r\n        if (width) {\r\n            let currentTL = theoryLemmas[key];\r\n            const thisLet = lets[key];\r\n\r\n            // If doesn't fits, then indent\r\n            if (!thisLet.fitsTheWindow(width, font)) {\r\n                currentTL = thisLet.indent(width, true, font);\r\n                theoryLemmas[key] = currentTL;\r\n            }\r\n            // If fits, then only in the momment the page size is growing and the line is broken\r\n            else if (resizeMode >= 0 && thisLet.lines.length > 1) {\r\n                // Reset the line\r\n                thisLet.lines = [{ value: thisLet.isExpanded ? thisLet.groupUp() : thisLet.value, indentLevel: 0 }];\r\n                thisLet.biggerID = 0;\r\n\r\n                // Indent it again\r\n                currentTL = thisLet.indent(width, false, font);\r\n                theoryLemmas[key] = currentTL;\r\n            }\r\n\r\n            // Finds all occurences of let in the currentTL\r\n            const indices: { [key: number]: string } = {};\r\n            [...currentTL.matchAll(/let\\d+/g)].forEach((match) => {\r\n                if (match.index) indices[match.index] = match[0];\r\n            });\r\n\r\n            const arr: (JSX.Element | string)[] = [];\r\n            let start = 0;\r\n            // Slice the currentTL into an array with strings and JSX elements\r\n            Object.keys(indices).forEach((index, i, self) => {\r\n                const idx = Number(index);\r\n                const thisLet = indices[idx];\r\n\r\n                // Add the elements to the arr\r\n                arr.push(currentTL.substring(start, idx));\r\n                arr.push(\r\n                    <a\r\n                        className={darkTheme ? 'let-literal-or' : 'let-literal'}\r\n                        onClick={() => {\r\n                            expandLet(key, thisLet, idx);\r\n                        }}\r\n                    >\r\n                        {thisLet}\r\n                    </a>,\r\n                );\r\n                // Defines a new start\r\n                start = idx + thisLet.length;\r\n\r\n                // If it's the last let\r\n                if (i === self.length - 1) {\r\n                    arr.push(currentTL.substring(start, currentTL.length));\r\n                }\r\n            });\r\n\r\n            // If there is a let in this current let\r\n            if (Object.keys(indices).length) {\r\n                return <span className=\"let-instance\">{arr}</span>;\r\n            } else {\r\n                return <span className=\"let-instance\">{currentTL}</span>;\r\n            }\r\n        }\r\n        return <></>;\r\n    };\r\n\r\n    return (\r\n        <div className={Classes.DIALOG_BODY}>\r\n            <table\r\n                id=\"table-node-info-2\"\r\n                className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-html-table-striped\"\r\n                style={{ width: '100%', minWidth: '230px' }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"theoryLemma-value-column\">Value</th>\r\n                        <th style={{ width: '100px' }}>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {theoryLemmas.map((tl, id) => {\r\n                        return (\r\n                            <tr key={id}>\r\n                                <td style={{ width: '100%', whiteSpace: 'pre-wrap' }}>{renderLet(id)}</td>\r\n                                <td style={{ width: '100px', height: '100%' }}>\r\n                                    <Button\r\n                                        onClick={() => expandAll(id)}\r\n                                        className=\"bp3-minimal\"\r\n                                        icon=\"translate\"\r\n                                        text=\"Expand\"\r\n                                    />\r\n                                    <Button\r\n                                        onClick={() => revertLet(id)}\r\n                                        className=\"bp3-minimal\"\r\n                                        icon=\"undo\"\r\n                                        text=\"Revert\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisualizerTheoryLemma;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport '../../scss/VisualizersDrawer.scss';\r\nimport { Drawer, Position, Classes, Tabs, Tab, Button } from '@blueprintjs/core';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { DrawerProps } from '../../interfaces/interfaces';\r\n\r\nimport { useAppSelector, useAppDispatch } from '../../store/hooks';\r\nimport { applyView, selectNodeClusters, selectNodes } from '../../store/features/proof/proofSlice';\r\nimport { reRender } from '../../store/features/externalCmd/externalCmd';\r\nimport VisualizerLetDrawer from '../VisualizerLetDrawer/VisualizerLetDrawer';\r\nimport VisualizerTheoryLemma from '../VisualizerTheoryLemma/VisualizerTheoryLemma';\r\nimport { ClusterKind } from '../../interfaces/enum';\r\n\r\nconst VisualizersDrawer: React.FC<DrawerProps> = ({ drawerIsOpen, setDrawerIsOpen }: DrawerProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const nodeClusters = useAppSelector(selectNodeClusters);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [tabID, setTabID] = useState('lm');\r\n    const [resizeFlag, setResizeFlag] = useState([false, false]);\r\n\r\n    useEffect(() => {\r\n        // When drawer is initialized it focus the escape button\r\n        const bt = document\r\n            .getElementsByClassName('visualizers-drawer')[0]\r\n            .getElementsByClassName('bp3-button')[0] as HTMLElement;\r\n        bt.tabIndex = 1;\r\n        bt.focus();\r\n    }, []);\r\n\r\n    const handleTabChange = (newTabId: string, _: any, e: any): void => {\r\n        setTabID(newTabId);\r\n        const newResizeFlag = [...resizeFlag];\r\n        if (newTabId === 'lm') newResizeFlag[0] = !newResizeFlag[0];\r\n        else if (newTabId === 'tl') newResizeFlag[1] = !newResizeFlag[1];\r\n        setResizeFlag(newResizeFlag);\r\n    };\r\n\r\n    const handleClusterClick = (type: ClusterKind): void => {\r\n        if (type === ClusterKind.NONE) {\r\n            dispatch(selectNodes(nodeClusters.reduce((acc: number[], c) => acc.concat(c.hiddenNodes), [])));\r\n        } else {\r\n            dispatch(\r\n                selectNodes(\r\n                    nodeClusters.reduce((acc: number[], c) => (c.type === type ? acc.concat(c.hiddenNodes) : acc), []),\r\n                ),\r\n            );\r\n        }\r\n    };\r\n\r\n    const menus = {\r\n        view: (\r\n            <div className={'view-infos ' + Classes.DIALOG_BODY}>\r\n                <div className=\"bts\">\r\n                    <Button\r\n                        text=\"Full\"\r\n                        onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                            e.preventDefault();\r\n                            dispatch(applyView('full'));\r\n                            dispatch(reRender());\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        text=\"Clustered\"\r\n                        onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                            e.preventDefault();\r\n                            dispatch(applyView('clustered'));\r\n                            dispatch(reRender());\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        text=\"Full and Colored\"\r\n                        onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                            e.preventDefault();\r\n                            dispatch(applyView('colored-full'));\r\n                            dispatch(reRender());\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"views-color-map\">\r\n                    <span onClick={() => handleClusterClick(ClusterKind.NONE)}>⬜ First Scope</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.SAT)}>🟪 SAT</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.CNF)}>🟨 CNF</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.TL)}>🟩 Theory Lemma</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.PP)}>🟫 Pre Processing</span>\r\n                    <span onClick={() => handleClusterClick(ClusterKind.IN)}>🟦 Input</span>\r\n                </div>\r\n            </div>\r\n        ),\r\n        letMap: <VisualizerLetDrawer shouldResize={resizeFlag[0]} />,\r\n        theoryLemma: <VisualizerTheoryLemma shouldResize={resizeFlag[1]} />,\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            className={`visualizers-drawer ${darkTheme ? 'bp3-dark' : ''}`}\r\n            style={{ maxHeight: '65%', width: '35%' }}\r\n            autoFocus={true}\r\n            canEscapeKeyClose={true}\r\n            canOutsideClickClose={false}\r\n            enforceFocus={false}\r\n            hasBackdrop={false}\r\n            isOpen={drawerIsOpen}\r\n            position={Position.RIGHT}\r\n            usePortal={false}\r\n            onClose={(e) => {\r\n                e.preventDefault();\r\n                setDrawerIsOpen(false);\r\n            }}\r\n            icon=\"applications\"\r\n            title=\"Visualizers\"\r\n        >\r\n            <div className={Classes.DRAWER_BODY}>\r\n                <Tabs id=\"services-tabs\" onChange={handleTabChange} selectedTabId={tabID}>\r\n                    <Tab id=\"vw\" title=\"View\" panel={menus['view']} className=\"services-tab\" />\r\n                    <Tab id=\"lm\" title=\"Let Map\" panel={menus['letMap']} className=\"services-tab\" />\r\n                    <Tab id=\"tl\" title=\"Theory Lemma\" panel={menus['theoryLemma']} className=\"services-tab\" />\r\n                </Tabs>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default VisualizersDrawer;\r\n","import { Button, Divider } from '@blueprintjs/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TutorialPopoverProps } from '../../interfaces/interfaces';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nconst TutorialPopover: React.FC<TutorialPopoverProps> = ({\r\n    setIsOpen,\r\n    nextTutorial,\r\n    stage,\r\n    content,\r\n    W,\r\n    position,\r\n}: TutorialPopoverProps) => {\r\n    const [page, setPage] = useState(0);\r\n\r\n    const darkTheme = useAppSelector(selectTheme);\r\n\r\n    const renderPageBall = (): JSX.Element[] => {\r\n        return content.map((_, id) => (\r\n            <div key={id} className={`page-ball ${id === page && (darkTheme ? 'page-on' : 'page-on-light')}`} />\r\n        ));\r\n    };\r\n\r\n    const changePage = (type: string): void => {\r\n        if (type === '>') setPage(page + 1);\r\n        else setPage(page - 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const parent = document.getElementsByClassName('tutorial-popover')[0];\r\n        // Set the focus\r\n        let bt = parent.getElementsByClassName('next-page progress');\r\n        if (!bt.length) {\r\n            bt = parent.getElementsByClassName('bp3-button');\r\n            // Make sure the next stage button will not be instantly clicked\r\n            setTimeout(() => (bt[bt.length - 1] as HTMLElement).focus(), 150);\r\n        } else {\r\n            (bt[0] as HTMLElement).focus();\r\n        }\r\n    }, [stage, page]);\r\n\r\n    useEffect(() => {\r\n        function handleEsc(e: KeyboardEvent): void {\r\n            e.stopPropagation();\r\n            if (e.key === 'Escape') {\r\n                setIsOpen(false);\r\n            }\r\n        }\r\n        window.addEventListener('keydown', handleEsc, false);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleEsc, false);\r\n        };\r\n    }, []);\r\n\r\n    const insertAnchors = (text: string): (JSX.Element | string)[] => {\r\n        const list: (JSX.Element | string)[] = [];\r\n\r\n        let i = -1,\r\n            last = 0;\r\n        const positions = [0, 0, 0];\r\n        for (let j = 0; j < text.length; j++) {\r\n            if (text[j] === '\\0') {\r\n                i++;\r\n                positions[i] = j;\r\n            }\r\n            if (i === 2) {\r\n                list.push(text.substring(last, positions[0]));\r\n                const name = text.substring(positions[0] + 1, positions[1]);\r\n                const link = text.substring(positions[1] + 1, positions[2]);\r\n                list.push(\r\n                    <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n                        {name}\r\n                    </a>,\r\n                );\r\n\r\n                last = positions[2] + 1;\r\n                i = -1;\r\n            }\r\n        }\r\n        list.push(text.substring(last, text.length));\r\n\r\n        return list;\r\n    };\r\n\r\n    return (\r\n        <div className={darkTheme ? 'bp3-dark' : ''}>\r\n            <div\r\n                className=\"arrow-up\"\r\n                style={{\r\n                    left: position.tW,\r\n                    top: position.y - 7,\r\n                    borderBottomColor: darkTheme ? 'rgb(48, 65, 71)' : 'rgb(255,255,255)',\r\n                }}\r\n            />\r\n            <div\r\n                className=\"arrow-up arrow-2\"\r\n                style={{\r\n                    left: position.tW - 2,\r\n                    top: position.y - 9,\r\n                    borderBottomColor: darkTheme ? '#bdbdbd' : 'rgba(71, 64, 64, 0.281)',\r\n                }}\r\n            />\r\n            <div className=\"tutorial-popover bp3-dialog\" style={{ width: W, left: position.x, top: position.y }}>\r\n                <div className=\"bp3-dialog-header\">\r\n                    <div className=\"cur-page\">{renderPageBall()}</div>\r\n                    <Button icon=\"small-cross\" onClick={() => setIsOpen(false)} tabIndex={-1} />\r\n                </div>\r\n                <body>\r\n                    {page > 0 && (\r\n                        <button\r\n                            className=\"next-page regress\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                changePage('<');\r\n                            }}\r\n                        >\r\n                            {'<'}\r\n                        </button>\r\n                    )}\r\n                    <p className=\"content\">{stage ? content[page] : insertAnchors(content[page])}</p>\r\n                    {page < content.length - 1 && (\r\n                        <button\r\n                            className=\"next-page progress\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                changePage('>');\r\n                            }}\r\n                        >\r\n                            {'>'}\r\n                        </button>\r\n                    )}\r\n                </body>\r\n                {page === content.length - 1 && (\r\n                    <>\r\n                        <Divider style={{ backgroundColor: darkTheme ? 'white' : '' }} />\r\n                        <div className=\"bp3-dialog-footer\">\r\n                            <Button\r\n                                text=\"Next\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    nextTutorial();\r\n                                    setPage(0);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TutorialPopover;\r\n","import { Portal } from '@blueprintjs/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { TutorialProps } from '../../interfaces/interfaces';\r\nimport '../../scss/Tutorial.scss';\r\nimport TutorialPopover from './TutorialPopover';\r\n\r\nconst W = 340;\r\nconst divsIds = [\r\n    'proof-visualizer-name',\r\n    'upload-proof-bt',\r\n    'examples-bt',\r\n    'input-smt-bt',\r\n    'file-name-title',\r\n    'command',\r\n    'style-bt',\r\n    'visualizers-bt',\r\n    'download-bt',\r\n    'switch-button-dark-theme',\r\n];\r\nconst tutorials: string[][] = [\r\n    [\r\n        'This website is a SMT solver proof visualizer. It was developed by \\0Vinícius Braga Freire\\0https://github.com/vinciusb\\0, \\0Diego Della Rocca\\0https://github.com/diegodrc\\0 and \\0Haniel Barbosa\\0https://homepages.dcc.ufmg.br/~hbarbosa/\\0. It was funded by AWS and the main SMT solver supported is CVC5.',\r\n    ],\r\n    [\r\n        'Here you can upload your proofs to be visualized.',\r\n        'The proofs can have the .dot or .json file extension.',\r\n        'The .json file is obtained in the download section.',\r\n    ],\r\n    ['Here you can visualize some examples of different proofs.'],\r\n    ['Here you can see the examples SMT code or insert your own SMT and run the CVC5 solver to generate a new proof.'],\r\n    ['This is the name of the current proof uploaded'],\r\n    [\r\n        'This is the command section. Here you can use some commands that will transform the proof, changing the way you comprehend it.',\r\n        \"Click in the '?' button to see a description of all commands available.\",\r\n    ],\r\n    [\r\n        'Here you can change the way the visualizer presents the proof.',\r\n        \"The graph style is the default and it's where the commands transformations happen.\",\r\n        \"In the directory style each proof node is a 'folder' and your children nodes are inside it.\",\r\n    ],\r\n    [\r\n        'Here you have access to 3 visualizers:',\r\n        'View: It allow you to change the way the proof nodes are visualized.',\r\n        'Let Map: Here you can see a map of all the LETS used inside the proofs. A let is a therm that shorten some expression (e.g.: let1 = (and A B))',\r\n        'Theory Lemma: It allow you to see all the theory lemmas in the proof.',\r\n    ],\r\n    [\r\n        'This section allow you to download the proof in different ways.',\r\n        '.DOT is the default format. It only holds informations about the proof structure and your clusters.',\r\n        '.JSON allow the user to save all the visual informations about the proof (i.e. the nodes positions, colors and foldings after any transformation applied) and your structural infos just like the .DOT.',\r\n        '.PNG prints the proof in the current state (i.e. includes all the transformations) into a image.',\r\n    ],\r\n    ['Allow to change between dark/light mode.'],\r\n];\r\n\r\n// panel stack\r\nconst VisualizerTutorial: React.FC<TutorialProps> = ({ inTutorial, setInTutorial }: TutorialProps) => {\r\n    const [stage, setStage] = useState(-1);\r\n    const [position, setPosition] = useState({ x: 0, y: 0, tW: 0 });\r\n    const sizeRef = useRef({ w: 0, h: 0 });\r\n\r\n    const increaseStage = () => {\r\n        if (stage < tutorials.length - 1) setStage(stage + 1);\r\n        else setInTutorial(false);\r\n    };\r\n\r\n    // ComponentDidMount\r\n    useEffect(() => {\r\n        // Handler to call on window resize and set the value column width\r\n        function handleResize() {\r\n            sizeRef.current.w = window.innerWidth;\r\n            sizeRef.current.h = window.innerHeight;\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (inTutorial) setStage(0);\r\n        else setStage(-1);\r\n    }, [inTutorial]);\r\n\r\n    useEffect(() => {\r\n        const toBeWrapped: HTMLElement | null = document.getElementById(divsIds[stage]);\r\n        if (toBeWrapped) {\r\n            const { x, y, width, height } = toBeWrapped.getClientRects()[0];\r\n            const newY = y + height;\r\n            let newX = x + width / 2;\r\n            const newTW = newX;\r\n            // Positioning in the beggining\r\n            if (newX < W) newX = 3;\r\n            // Positioning in the end\r\n            else if (newX + W / 2 > sizeRef.current.w) newX = sizeRef.current.w - W - 3;\r\n            // Positioning in the normal position\r\n            else newX -= W / 2;\r\n\r\n            setPosition({ x: newX, y: newY, tW: newTW });\r\n        }\r\n    }, [stage]);\r\n\r\n    return (\r\n        <Portal className={`tutorial-portal`}>\r\n            <div\r\n                className=\"bp3-overlay-enter-done\"\r\n                style={{\r\n                    width: sizeRef.current.w,\r\n                    height: sizeRef.current.h,\r\n                    pointerEvents: stage >= 0 ? 'auto' : 'none',\r\n                    backgroundColor: stage >= 0 ? 'rgba(87, 82, 82, 0.233)' : 'transparent',\r\n                }}\r\n            >\r\n                {stage >= 0 && (\r\n                    <TutorialPopover\r\n                        setIsOpen={setInTutorial}\r\n                        nextTutorial={increaseStage}\r\n                        stage={stage}\r\n                        content={tutorials[stage]}\r\n                        W={W}\r\n                        position={position}\r\n                    />\r\n                )}\r\n            </div>\r\n        </Portal>\r\n    );\r\n};\r\n\r\nexport default VisualizerTutorial;\r\n","import React, { useEffect, useReducer, useRef, useState } from 'react';\r\n\r\nimport MonacoEditor from '@monaco-editor/react';\r\nimport { Drawer, Position, Classes, Button, FormGroup, Switch, InputGroup, Overlay, Spinner } from '@blueprintjs/core';\r\nimport { Popover2 } from '@blueprintjs/popover2';\r\n\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport { SmtDrawerProps } from '../../interfaces/interfaces';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\n\r\nimport { process, selectSmt, setSmt } from '../../store/features/proof/proofSlice';\r\nimport Module from '../../wasm/cvc5';\r\nimport { set } from '../../store/features/file/fileSlice';\r\nimport { allowRenderNewFile, reRender } from '../../store/features/externalCmd/externalCmd';\r\n\r\nimport '../../scss/VisualizerSmtDrawer.scss';\r\n\r\nconst VisualizerSmtDrawer: React.FC<SmtDrawerProps> = ({ isOpen, setDrawerIsOpen, addErrorToast }: SmtDrawerProps) => {\r\n    const darkTheme = useAppSelector(selectTheme);\r\n    const proofSmt = useAppSelector(selectSmt);\r\n\r\n    const stdoutRef = useRef('');\r\n    const stderrRef = useRef('');\r\n    const changeOutRef = useRef(false);\r\n\r\n    const [, forceUpdate] = useReducer((x) => x + 1, 0);\r\n    const [spinnerOn, setSpinnerOn] = useState(false);\r\n    const [optionsIsOpen, setOptionsIsOpen] = useReducer((open) => !open, false);\r\n    const textRef = useRef(proofSmt + '\\n');\r\n    const [argsType, setArgsType] = useState(true);\r\n    const [[shouldClusterize, printAsDag], setDefaultOptions] = useState([true, true]);\r\n    const [customArgs, setCustomArgs] = useState('');\r\n\r\n    // The default arguments used in the proof generation\r\n    const defaultArgs = ['--dump-proofs', '--proof-format=dot', '--proof-granularity=theory-rewrite'];\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        // When smt drawer is initialized it focus the escape button\r\n        const bt = document\r\n            .getElementsByClassName('smt-drawer')[0]\r\n            .getElementsByClassName('bp3-button')[0] as HTMLElement;\r\n        bt.tabIndex = 1;\r\n        bt.focus();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        textRef.current = proofSmt;\r\n        forceUpdate();\r\n    }, [proofSmt]);\r\n\r\n    useEffect(() => {\r\n        // If it's custom args\r\n        if (!argsType) {\r\n            // Copy the default args to the custom args, because the probability\r\n            // that the user will use one of these flags is high\r\n            let newArgs = defaultArgs.reduce((acc, arg) => (acc += arg + ' '), '');\r\n            if (shouldClusterize) newArgs += ' --print-dot-clusters';\r\n            if (printAsDag) newArgs += ' --proof-dot-dag';\r\n            setCustomArgs(newArgs);\r\n        }\r\n    }, [argsType]);\r\n\r\n    const options = {\r\n        theme: darkTheme ? 'vs-dark' : 'vs',\r\n        tabIndex: 5,\r\n    };\r\n\r\n    const divColor = darkTheme ? 'rgb(255, 255, 255, 0.15)' : 'rgb(0, 0, 0, 0.15)';\r\n\r\n    const helpDiv = (\r\n        <div\r\n            className={`bp3-menu ${darkTheme ? 'bp3-dark' : ''}`}\r\n            style={{\r\n                maxWidth: '200px',\r\n                padding: '5px 8px !important',\r\n                boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.651)',\r\n                textAlign: 'justify',\r\n            }}\r\n        >\r\n            Look at{' '}\r\n            <a href=\"https://cvc5.github.io/docs/cvc5-1.0.0/\" target=\"_blank\" rel=\"noreferrer\">\r\n                CVC5 documentation\r\n            </a>{' '}\r\n            to understand more about the argument parser.\r\n        </div>\r\n    );\r\n\r\n    const defaultArgsDiv = (\r\n        <div id=\"helperDiv\" className={`bp3-menu ${darkTheme ? 'bp3-dark' : ''}`}>\r\n            Default arguments are:{' '}\r\n            {defaultArgs.reduce((acc: any, str: string) => {\r\n                return (acc += str + ' ');\r\n            }, '')}\r\n        </div>\r\n    );\r\n\r\n    const shouldClusterizeDiv = (\r\n        <div id=\"helperDiv\" className={`bp3-menu ${darkTheme ? 'bp3-dark' : ''}`}>\r\n            Whether the proof node clusters (e.g. SAT, CNF, INPUT) will be printed when using the dot format or not.\r\n        </div>\r\n    );\r\n\r\n    const printAsDagDiv = (\r\n        <div id=\"helperDiv\" className={`bp3-menu ${darkTheme ? 'bp3-dark' : ''}`}>\r\n            Indicates if the dot proof will be printed as a DAG or as a tree.\r\n        </div>\r\n    );\r\n\r\n    // Remove the cvc5> prompt message from the stdout\r\n    const sanitizeDotResult = (result: string): string => result.replaceAll(/(cvc5> )+/g, '');\r\n    const updateStdout = (str: string) => (stdoutRef.current += str + '\\n');\r\n    const updateStderr = (str: string) => (stderrRef.current += str + '\\n');\r\n    // Function called post the cvc5 execution\r\n    const postCVC5run = (isThereError: boolean) => {\r\n        // Turn off the spin\r\n        setSpinnerOn(false);\r\n        // Sanitize the string\r\n        stdoutRef.current = sanitizeDotResult(stdoutRef.current).trim();\r\n        // If there was an error\r\n        if (isThereError && !stdoutRef.current.length) {\r\n            const err = stderrRef.current.length\r\n                ? stderrRef.current\r\n                : 'Error: Unknown error, check out the arguments parsed or the smt text.';\r\n            addErrorToast(err);\r\n        }\r\n        // Get the result .dot\r\n        else {\r\n            dispatch(set({ name: 'own-proof.dot', value: stdoutRef.current }));\r\n\r\n            dispatch(allowRenderNewFile());\r\n            dispatch(reRender());\r\n\r\n            dispatch(process(stdoutRef.current));\r\n        }\r\n    };\r\n    // Clean the output a single time during the cvc5 execution\r\n    const cleanStdout = () => {\r\n        if (!changeOutRef.current) {\r\n            stdoutRef.current = '';\r\n            changeOutRef.current = true;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            className={`smt-drawer ${darkTheme ? 'bp3-dark' : ''}`}\r\n            style={{ maxHeight: '65%', width: '35%' }}\r\n            autoFocus={true}\r\n            canEscapeKeyClose={true}\r\n            canOutsideClickClose={true}\r\n            enforceFocus={false}\r\n            hasBackdrop={false}\r\n            isOpen={isOpen}\r\n            position={Position.LEFT}\r\n            usePortal={false}\r\n            onClose={(e) => {\r\n                e.preventDefault();\r\n                setDrawerIsOpen();\r\n                // Save the smt\r\n                dispatch(setSmt(textRef.current));\r\n            }}\r\n            icon=\"applications\"\r\n            title=\"Visualizers\"\r\n        >\r\n            <div className={Classes.DRAWER_BODY} style={{ overflow: 'hidden' }}>\r\n                <Overlay isOpen={spinnerOn}>\r\n                    <Spinner></Spinner>\r\n                </Overlay>\r\n                <MonacoEditor\r\n                    height={'300px'}\r\n                    language=\"graphql\"\r\n                    value={textRef.current}\r\n                    onChange={(value) => value !== undefined && (textRef.current = value)}\r\n                    onMount={() => forceUpdate()}\r\n                    options={options}\r\n                />\r\n                <div className={optionsIsOpen ? 'options-sec' : 'options-sec-open'}>\r\n                    <Switch\r\n                        label=\"Default args or custom args\"\r\n                        style={{ margin: '10px 20px' }}\r\n                        checked={argsType}\r\n                        onChange={() => setArgsType(!argsType)}\r\n                        tabIndex={4}\r\n                    />\r\n                    <FormGroup\r\n                        label={\r\n                            <div>\r\n                                Default args:{' '}\r\n                                <Popover2\r\n                                    disabled={!argsType}\r\n                                    content={defaultArgsDiv}\r\n                                    placement=\"auto\"\r\n                                    modifiers={{ arrow: { enabled: true } }}\r\n                                    hoverCloseDelay={200}\r\n                                    hoverOpenDelay={200}\r\n                                >\r\n                                    <Button disabled={!argsType} icon=\"help\" className=\"bp3-minimal\" tabIndex={4} />\r\n                                </Popover2>\r\n                            </div>\r\n                        }\r\n                        className=\"args-forms\"\r\n                        style={{ borderBottom: `1px solid ${divColor}`, borderTop: `1px solid ${divColor}` }}\r\n                        disabled={!argsType}\r\n                    >\r\n                        <div className=\"default-option-div\">\r\n                            <Switch\r\n                                label=\"Should clusterize proof\"\r\n                                disabled={!argsType}\r\n                                checked={shouldClusterize}\r\n                                onChange={() => setDefaultOptions([!shouldClusterize, printAsDag])}\r\n                                tabIndex={4}\r\n                            />\r\n                            <Popover2\r\n                                disabled={!argsType}\r\n                                content={shouldClusterizeDiv}\r\n                                placement=\"auto\"\r\n                                modifiers={{ arrow: { enabled: true } }}\r\n                                hoverCloseDelay={200}\r\n                                hoverOpenDelay={200}\r\n                            >\r\n                                <Button disabled={!argsType} icon=\"help\" className=\"bp3-minimal\" tabIndex={4} />\r\n                            </Popover2>\r\n                        </div>\r\n                        <div className=\"default-option-div\">\r\n                            <Switch\r\n                                label=\"Should print as tree or as DAG\"\r\n                                disabled={!argsType}\r\n                                checked={printAsDag}\r\n                                onChange={() => setDefaultOptions([shouldClusterize, !printAsDag])}\r\n                                tabIndex={4}\r\n                            />\r\n                            <Popover2\r\n                                disabled={!argsType}\r\n                                content={printAsDagDiv}\r\n                                placement=\"auto\"\r\n                                modifiers={{ arrow: { enabled: true } }}\r\n                                hoverCloseDelay={200}\r\n                                hoverOpenDelay={200}\r\n                            >\r\n                                <Button disabled={!argsType} icon=\"help\" className=\"bp3-minimal\" tabIndex={4} />\r\n                            </Popover2>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Custom args\" className=\"args-forms\" disabled={argsType}>\r\n                        <InputGroup\r\n                            id=\"text-input\"\r\n                            placeholder=\"Placeholder text\"\r\n                            disabled={argsType}\r\n                            rightElement={\r\n                                <Popover2\r\n                                    disabled={argsType}\r\n                                    content={helpDiv}\r\n                                    placement=\"auto\"\r\n                                    modifiers={{ arrow: { enabled: true } }}\r\n                                    hoverCloseDelay={200}\r\n                                    hoverOpenDelay={200}\r\n                                >\r\n                                    <Button disabled={argsType} icon=\"help\" className=\"bp3-minimal\" tabIndex={4} />\r\n                                </Popover2>\r\n                            }\r\n                            value={customArgs}\r\n                            onChange={(e) => setCustomArgs(e.target.value)}\r\n                            tabIndex={4}\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                <footer\r\n                    style={{\r\n                        position: 'relative',\r\n                        borderTop: optionsIsOpen ? `solid 1px ${divColor}` : '',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        style={{ float: 'left' }}\r\n                        className=\"bp3-minimal margin-5\"\r\n                        icon=\"more\"\r\n                        text=\"Options\"\r\n                        onClick={() => setOptionsIsOpen()}\r\n                        tabIndex={1}\r\n                    />\r\n                    <div style={{ float: 'right', display: 'flex' }}>\r\n                        <Button\r\n                            className=\"bp3-minimal margin-5\"\r\n                            icon=\"code\"\r\n                            text=\"Generate proof\"\r\n                            onClick={() => {\r\n                                setSpinnerOn(true);\r\n                                dispatch(setSmt(textRef.current));\r\n\r\n                                let args = defaultArgs;\r\n                                // If is default args\r\n                                if (argsType) {\r\n                                    // Add the arguments selected by the user\r\n                                    if (shouldClusterize) args.push('--print-dot-clusters');\r\n                                    if (printAsDag) args.push('--proof-dot-dag');\r\n                                }\r\n                                // Custom args\r\n                                else {\r\n                                    // Split the arguments into an array\r\n                                    args = customArgs.split('--');\r\n                                    args = args\r\n                                        .map((arg) => arg.trim())\r\n                                        .filter((arg) => {\r\n                                            return arg.length !== 0;\r\n                                        })\r\n                                        .map((arg) => '--' + arg);\r\n\r\n                                    let i = 0;\r\n                                    // Make sure that the output format is .dot\r\n                                    const isThereFormat = args.some((arg, id) => {\r\n                                        i = id;\r\n                                        return arg.indexOf('--proof-format') !== -1;\r\n                                    });\r\n                                    // If there isn't a proof format\r\n                                    if (!isThereFormat) args.push('--proof-format=dot');\r\n                                    // Verify is the format is the correct one\r\n                                    else if (!args[i].match(/--proof-format\\s*=\\s*dot/)) {\r\n                                        args[i] = '--proof-format=dot';\r\n                                    }\r\n                                }\r\n\r\n                                // Reset the stdout and stderr before executing cvc5\r\n                                stdoutRef.current = '';\r\n                                stderrRef.current = '';\r\n                                changeOutRef.current = false;\r\n\r\n                                // Only calls web assembly when there is some text on the code editor\r\n                                if (textRef.current.trim().length) {\r\n                                    // Run cvc5\r\n                                    Module({\r\n                                        arguments: args,\r\n                                        proofTxt: textRef.current,\r\n                                        out: updateStdout,\r\n                                        err: updateStderr,\r\n                                        postCVC5: postCVC5run,\r\n                                        cleanStdout: cleanStdout,\r\n                                        binaryFileName: 'cvc5.wasm',\r\n                                    });\r\n                                }\r\n                                // There isn't text in the code editor\r\n                                else {\r\n                                    addErrorToast('Error: Empty proof in the code editor.');\r\n                                    setSpinnerOn(false);\r\n                                }\r\n                            }}\r\n                            tabIndex={3}\r\n                        />\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default VisualizerSmtDrawer;\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\n\r\nimport { Intent, Position, Toaster } from '@blueprintjs/core';\r\n\r\nimport VisualizerNavbar from '../VisualizerNavbar/VisualizerNavbar';\r\nimport VisualizerDialog from '../VisualizerDialog/VisualizerDialog';\r\nimport VisualizerStage from '../VisualizerStage/VisualizerStage';\r\nimport VisualizersDrawer from '../VisualizersDrawer/VisualizersDrawer';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectTheme } from '../../store/features/theme/themeSlice';\r\nimport VisualizerTutorial from '../VisualizerTutorial/VisualizerTutorial';\r\nimport VisualizerSmtDrawer from '../VisualizerSmtDrawer/VisualizerSmtDrawer';\r\n\r\nconst App: React.FC = () => {\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(true);\r\n    const [inTutorial, setInTutorial] = useState(false);\r\n    const [drawerIsOpen, setDrawerOpenState] = useReducer((isOpen) => !isOpen, false);\r\n    const [smtDrawerIsOpen, setSmtDrawerIsOpen] = useReducer((isOpen) => !isOpen, false);\r\n    const darkTheme = useAppSelector(selectTheme);\r\n\r\n    // Toaster\r\n    let toaster: Toaster;\r\n    const refHandlers = {\r\n        toaster: (ref: Toaster) => (toaster = ref),\r\n    };\r\n\r\n    const addErrorToast = (err: string) => {\r\n        toaster.show({ icon: 'warning-sign', intent: Intent.DANGER, message: err });\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.getElementsByClassName('bp3-overlay')[0]\r\n            ? (document.getElementsByClassName('bp3-overlay')[0].className = '')\r\n            : null;\r\n    }, [drawerIsOpen]);\r\n\r\n    return (\r\n        <div className={darkTheme ? ' bp3-dark' : ''} style={{ height: '100%' }}>\r\n            <VisualizerTutorial inTutorial={inTutorial} setInTutorial={setInTutorial} />\r\n            <Toaster position={Position.TOP} ref={refHandlers.toaster} />\r\n            <VisualizerNavbar\r\n                setDialogIsOpen={setDialogIsOpen}\r\n                setDrawerIsOpen={setDrawerOpenState}\r\n                addErrorToast={addErrorToast}\r\n                inTutorial={inTutorial}\r\n                setInTutorial={setInTutorial}\r\n                setSmtDrawerIsOpen={setSmtDrawerIsOpen}\r\n            />\r\n            <VisualizerDialog\r\n                dialogIsOpen={dialogIsOpen}\r\n                setDialogIsOpen={setDialogIsOpen}\r\n                addErrorToast={addErrorToast}\r\n            />\r\n            <VisualizerStage />\r\n            {drawerIsOpen ? (\r\n                <VisualizersDrawer drawerIsOpen={drawerIsOpen} setDrawerIsOpen={setDrawerOpenState}></VisualizersDrawer>\r\n            ) : null}\r\n            {smtDrawerIsOpen ? (\r\n                <VisualizerSmtDrawer\r\n                    isOpen={smtDrawerIsOpen}\r\n                    setDrawerIsOpen={setSmtDrawerIsOpen}\r\n                    addErrorToast={addErrorToast}\r\n                />\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport externalCmdReducer from './features/externalCmd/externalCmd';\r\nimport fileReducer from './features/file/fileSlice';\r\nimport proofReducer from './features/proof/proofSlice';\r\nimport themeReducer from './features/theme/themeSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        file: fileReducer,\r\n        proof: proofReducer,\r\n        theme: themeReducer,\r\n        externalCmd: externalCmdReducer,\r\n    },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './scss/index.scss';\r\n\r\nimport reportWebVitals from './ReactUtils/reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}